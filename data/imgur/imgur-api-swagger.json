{
	"swagger": "2.0",
	"info": {
		"title": "Imgur API",
		"description": "mgur's API exposes the entire Imgur infrastructure via a standardized programmatic interface. Using Imgur's API, you can do just about anything you can do on imgur.com, while using your programming language of choice.",
		"termsOfService": "http://imgur.com/tos",
		"version": "v3"
	},
	"host": "api.imgur.com",
	"basePath": "/3/",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/account/{username}": {
			"get": {
				"summary": "Account",
				"description": "Descriptionn                This model is used to represent the basic account information.",
				"operationId": "account",
				"parameters": [
					{
						"name": "bio",
						"in": "query",
						"description": "A basic description the user has filled out",
						"type": "<td>string</td>"
					},
					{
						"name": "created",
						"in": "query",
						"description": "The epoch time of account creation",
						"type": "<td>integer</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The account id for the username requested.",
						"type": "<td>integer</td>"
					},
					{
						"name": "pro_expiration",
						"in": "query",
						"description": "False if not a pro user, their expiration date if they are.",
						"type": "<td>integer or boolean</td>"
					},
					{
						"name": "reputation",
						"in": "query",
						"description": "The reputation for the account, in its numerical format.",
						"type": "<td>float</td>"
					},
					{
						"name": "url",
						"in": "query",
						"description": "The account username, will be the same as requested in the URL",
						"type": "<td>string</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/account/{username}/gallery_profile": {
			"get": {
				"summary": "Gallery Profile",
				"description": "Descriptionnn                The totals for a users gallery information.",
				"operationId": "gallery-profile",
				"parameters": [
					{
						"name": "total_gallery_comments",
						"in": "query",
						"description": "Total number of comments the user has made in the gallery",
						"type": "<td>integer</td>"
					},
					{
						"name": "total_gallery_favorites",
						"in": "query",
						"description": "Total number of items favorited by the user in the gallery",
						"type": "<td>integer</td>"
					},
					{
						"name": "total_gallery_submissions",
						"in": "query",
						"description": "Total number of images submitted by the user.",
						"type": "<td>integer</td>"
					},
					{
						"name": "trophies",
						"in": "query",
						"description": "An array of trophies that the user has.",
						"type": "<td>array</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/account/{username}/notifications": {
			"get": {
				"summary": "Notificationn                            n                        n                                                            Tag",
				"description": "Descriptionnn                The base model for a notification.",
				"operationId": "notification----------------------------------------------------------------------------------------",
				"parameters": [
					{
						"name": "account_id",
						"in": "query",
						"description": "The Account ID for the notification",
						"type": "<td>integer</td>"
					},
					{
						"name": "content",
						"in": "query",
						"description": "This can be any other model, currently only using comments and conversation metadata.",
						"type": "<td>mixed</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The ID for the notification",
						"type": "<td>integer</td>"
					},
					{
						"name": "viewed",
						"in": "query",
						"description": "Has the user viewed the image yet?",
						"type": "<td>boolean</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/account/{username}/settings": {
			"post": {
				"summary": "Basic",
				"description": "Descriptionnn                This is the basic response for requests that do not return data.  If the POST request has an                Basic model it will return the id.",
				"operationId": "basic",
				"parameters": [
					{
						"name": "data",
						"in": "query",
						"description": "Is null, boolean, or integer value. If its a post then this will contain an object with the all generated values, such as an ID.",
						"type": "<td>mixed</td>"
					},
					{
						"name": "status",
						"in": "query",
						"description": "HTTP Status Code",
						"type": "<td>integer</td>"
					},
					{
						"name": "success",
						"in": "query",
						"description": "Was the request successful",
						"type": "<td>boolean</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/album/{id}": {
			"get": {
				"summary": "Album",
				"description": "Descriptionn                This model represents the data for albums",
				"operationId": "album",
				"parameters": [
					{
						"name": "account_url",
						"in": "query",
						"description": "The account username or null if its anonymous.",
						"type": "<td>string</td>"
					},
					{
						"name": "cover",
						"in": "query",
						"description": "The ID of the album cover image",
						"type": "<td>string</td>"
					},
					{
						"name": "cover_height",
						"in": "query",
						"description": "The height, in pixels, of the album cover image",
						"type": "<td>integer</td>"
					},
					{
						"name": "cover_width",
						"in": "query",
						"description": "The width, in pixels, of the album cover image",
						"type": "<td>integer</td>"
					},
					{
						"name": "datetime",
						"in": "query",
						"description": "Time inserted into the gallery, epoch time",
						"type": "<td>integer</td>"
					},
					{
						"name": "deletehash",
						"in": "query",
						"description": "OPTIONAL, the deletehash, if youre logged in as the album owner",
						"type": "<td>string</td>"
					},
					{
						"name": "description",
						"in": "query",
						"description": "The description of the album in the gallery",
						"type": "<td>string</td>"
					},
					{
						"name": "favorite",
						"in": "query",
						"description": "Indicates if the current user favorited the image. Defaults to false if not signed in.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The ID for the album",
						"type": "<td>string</td>"
					},
					{
						"name": "images",
						"in": "query",
						"description": "An array of all the images in the album (only available when requesting the direct album)",
						"type": "<td>array of <a href="/models/image/">images<"
					},
					{
						"name": "images_count",
						"in": "query",
						"description": "The total number of images in the album",
						"type": "<td>integer</td>"
					},
					{
						"name": "layout",
						"in": "query",
						"description": "The view layout of the album.",
						"type": "<td>string</td>"
					},
					{
						"name": "link",
						"in": "query",
						"description": "The URL link to the album",
						"type": "<td>string</td>"
					},
					{
						"name": "nsfw",
						"in": "query",
						"description": "Indicates if the image has been marked as nsfw or not. Defaults to null if information is not available.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "order",
						"in": "query",
						"description": "Order number of the album on the users album page (defaults to 0 if their albums havent been reordered)",
						"type": "<td>integer</td>"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "The privacy level of the album, you can only view public if not logged in as album owner",
						"type": "<td>string</td>"
					},
					{
						"name": "section",
						"in": "query",
						"description": "If the image has been categorized by our backend then this will contain the section the image belongs in. (funny, cats, adviceanimals, wtf, etc)",
						"type": "<td>string</td>"
					},
					{
						"name": "title",
						"in": "query",
						"description": "The title of the album in the gallery",
						"type": "<td>string</td>"
					},
					{
						"name": "views",
						"in": "query",
						"description": "The number of album views",
						"type": "<td>integer</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/comment/{id}": {
			"get": {
				"summary": "Comment",
				"description": "Descriptionnn                This data model represents an images comment.",
				"operationId": "comment",
				"parameters": [
					{
						"name": "album_cover",
						"in": "query",
						"description": "The ID of the album cover image, this is what should be displayed for album comments",
						"type": "<td>string</td>"
					},
					{
						"name": "author",
						"in": "query",
						"description": "Username of the author of the comment",
						"type": "<td>string</td>"
					},
					{
						"name": "author_id",
						"in": "query",
						"description": "The account ID for the author",
						"type": "<td>integer</td>"
					},
					{
						"name": "children",
						"in": "query",
						"description": "All of the replies for this comment. If there are no replies to the comment then this is an empty set.",
						"type": "<td>array of <a href="/models/comment">commen"
					},
					{
						"name": "comment",
						"in": "query",
						"description": "The comment itself.",
						"type": "<td>string</td>"
					},
					{
						"name": "datetime",
						"in": "query",
						"description": "Timestamp of creation, epoch time",
						"type": "<td>integer</td>"
					},
					{
						"name": "deleted",
						"in": "query",
						"description": "Marked true if this caption has been deleted",
						"type": "<td>boolean</td>"
					},
					{
						"name": "downs",
						"in": "query",
						"description": "The number of downvotes for the comment",
						"type": "<td>integer</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The ID for the comment",
						"type": "<td>integer</td>"
					},
					{
						"name": "image_id",
						"in": "query",
						"description": "The ID of the image that the comment is for",
						"type": "<td>string</td>"
					},
					{
						"name": "on_album",
						"in": "query",
						"description": "If this comment was done to an album",
						"type": "<td>boolean</td>"
					},
					{
						"name": "parent_id",
						"in": "query",
						"description": "If this is a reply, this will be the value of the comment_id for the caption this a reply for.",
						"type": "<td>integer</td>"
					},
					{
						"name": "points",
						"in": "query",
						"description": "the number of upvotes - downvotes",
						"type": "<td>float</td>"
					},
					{
						"name": "ups",
						"in": "query",
						"description": "Number of upvotes for the comment",
						"type": "<td>integer</td>"
					},
					{
						"name": "vote",
						"in": "query",
						"description": "The current users vote on the comment. null if not signed in or if the user hasnt voted on it.",
						"type": "<td>string</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/conversations": {
			"get": {
				"summary": "Conversation",
				"description": "Descriptionnn                The base model for a conversation.",
				"operationId": "conversation",
				"parameters": [
					{
						"name": "datetime",
						"in": "query",
						"description": "Time of last sent message, epoch time",
						"type": "<td>integer</td>"
					},
					{
						"name": "done",
						"in": "query",
						"description": "OPTIONAL: (only available when requesting a specific conversation) Flag to indicate whether youve reached the beginning of the thread.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "Conversation ID",
						"type": "<td>integer</td>"
					},
					{
						"name": "last_message_preview",
						"in": "query",
						"description": "Preview of the last message",
						"type": "<td>string</td>"
					},
					{
						"name": "messages",
						"in": "query",
						"description": "OPTIONAL: (only available when requesting a specific conversation) Reverse sorted such that most recent message is at the end of the array.",
						"type": "<td>array of <a href="/models/message">messag"
					},
					{
						"name": "message_count",
						"in": "query",
						"description": "Total number of messages in the conversation",
						"type": "<td>integer</td>"
					},
					{
						"name": "page",
						"in": "query",
						"description": "OPTIONAL: (only available when requesting a specific conversation) Number of the next page",
						"type": "<td>integer</td>"
					},
					{
						"name": "with_account",
						"in": "query",
						"description": "Account username of the other user in conversation",
						"type": "<td>string</td>"
					},
					{
						"name": "with_account_id",
						"in": "query",
						"description": "Account ID of the other user in conversation",
						"type": "<td>integer</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/g": {
			"get": {
				"summary": "Custom Gallery",
				"description": "Descriptionn    This model represents the data custom galleries",
				"operationId": "custom-gallery",
				"parameters": [
					{
						"name": "account_url",
						"in": "query",
						"description": "Username of the account that created the custom gallery",
						"type": "<td>string</td>"
					},
					{
						"name": "datetime",
						"in": "query",
						"description": "Time custom gallery was created, epoch time",
						"type": "<td>int</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The ID for the custom gallery",
						"type": "<td>string</td>"
					},
					{
						"name": "items",
						"in": "query",
						"description": "An array of all the gallery items in the custom gallery (only available when requesting the direct custom gallery).",
						"type": "<td>array of <a href="/models/gallery_image/""
					},
					{
						"name": "item_count",
						"in": "query",
						"description": "The total number of gallery items in the custom gallery (only available when requesting the direct custom gallery).",
						"type": "<td>integer</td>"
					},
					{
						"name": "link",
						"in": "query",
						"description": "The URL link to the custom gallery",
						"type": "<td>string</td>"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Name of the custom gallery",
						"type": "<td>string</td>"
					},
					{
						"name": "tags",
						"in": "query",
						"description": "An array of all the tag names in the custom gallery",
						"type": "<td>array</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/g/memes/jFLlwhY": {
			"get": {
				"summary": "Meme Metadata",
				"description": "Descriptionn            This model is used to represent the basic meme metadata.",
				"operationId": "meme-metadata",
				"parameters": [
					{
						"name": "bg_image",
						"in": "query",
						"description": "The image id of the background image of the meme.",
						"type": "<td>string</td>"
					},
					{
						"name": "bottom_text",
						"in": "query",
						"description": "The bottom text of the meme.",
						"type": "<td>string</td>"
					},
					{
						"name": "meme_name",
						"in": "query",
						"description": "The name of the meme used.",
						"type": "<td>string</td>"
					},
					{
						"name": "top_text",
						"in": "query",
						"description": "The top text of the meme.",
						"type": "<td>string</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/gallery/image/{id}": {
			"get": {
				"summary": "Gallery Image",
				"description": "Descriptionn                The data model formatted for gallery images.",
				"operationId": "gallery-image",
				"parameters": [
					{
						"name": "account_id",
						"in": "query",
						"description": "The account ID of the account that uploaded it, or null.",
						"type": "<td>integer</td>"
					},
					{
						"name": "account_url",
						"in": "query",
						"description": "The username of the account that uploaded it, or null.",
						"type": "<td>string</td>"
					},
					{
						"name": "animated",
						"in": "query",
						"description": "is the image animated",
						"type": "<td>boolean</td>"
					},
					{
						"name": "bandwidth",
						"in": "query",
						"description": "Bandwidth consumed by the image in bytes",
						"type": "<td>integer</td>"
					},
					{
						"name": "comment_count",
						"in": "query",
						"description": "Number of comments on the gallery image.",
						"type": "<td>int</td>"
					},
					{
						"name": "datetime",
						"in": "query",
						"description": "Time inserted into the gallery, epoch time",
						"type": "<td>integer</td>"
					},
					{
						"name": "deletehash",
						"in": "query",
						"description": "OPTIONAL, the deletehash, if youre logged in as the image owner",
						"type": "<td>string</td>"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Description of the image.",
						"type": "<td>string</td>"
					},
					{
						"name": "downs",
						"in": "query",
						"description": "Number of downvotes for the image",
						"type": "<td>integer</td>"
					},
					{
						"name": "favorite",
						"in": "query",
						"description": "Indicates if the current user favorited the image. Defaults to false if not signed in.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "gifv",
						"in": "query",
						"description": "OPTIONAL, The .gifv link. Only available if the image is animated and type is &#39;image/gif&#39;.",
						"type": "<td>string</td>"
					},
					{
						"name": "height",
						"in": "query",
						"description": "The height of the image in pixels",
						"type": "<td>integer</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The ID for the image",
						"type": "<td>string</td>"
					},
					{
						"name": "is_album",
						"in": "query",
						"description": "if its an album or not",
						"type": "<td>boolean</td>"
					},
					{
						"name": "link",
						"in": "query",
						"description": "The direct link to the the image. (Note: if fetching an animated GIF that was over 20MB in original size, a .gif thumbnail will be returned)",
						"type": "<td>string</td>"
					},
					{
						"name": "looping",
						"in": "query",
						"description": "OPTIONAL, Whether the image has a looping animation. Only available if the image is animated and type is &#39;image/gif&#39;.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "mp4",
						"in": "query",
						"description": "OPTIONAL, The direct link to the .mp4. Only available if the image is animated and type is &#39;image/gif&#39;.",
						"type": "<td>string</td>"
					},
					{
						"name": "nsfw",
						"in": "query",
						"description": "Indicates if the image has been marked as nsfw or not. Defaults to null if information is not available.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "score",
						"in": "query",
						"description": "Imgur popularity score",
						"type": "<td>integer</td>"
					},
					{
						"name": "section",
						"in": "query",
						"description": "If the image has been categorized by our backend then this will contain the section the image belongs in. (funny, cats, adviceanimals, wtf, etc)",
						"type": "<td>string</td>"
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the image in bytes",
						"type": "<td>integer</td>"
					},
					{
						"name": "title",
						"in": "query",
						"description": "The title of the image.",
						"type": "<td>string</td>"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Image MIME type.",
						"type": "<td>string</td>"
					},
					{
						"name": "ups",
						"in": "query",
						"description": "Upvotes for the image",
						"type": "<td>integer</td>"
					},
					{
						"name": "views",
						"in": "query",
						"description": "The number of image views",
						"type": "<td>integer</td>"
					},
					{
						"name": "vote",
						"in": "query",
						"description": "The current users vote on the album. null if not signed in or if the user hasnt voted on it.",
						"type": "<td>string</td>"
					},
					{
						"name": "webm",
						"in": "query",
						"description": "OPTIONAL, The direct link to the .webm. Only available if the image is animated and type is &#39;image/gif&#39;.",
						"type": "<td>string</td>"
					},
					{
						"name": "width",
						"in": "query",
						"description": "The width of the image in pixels",
						"type": "<td>integer</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/gallery/image/{id}/tags": {
			"get": {
				"summary": "Tag Vote",
				"description": "Descriptionnn            The base model for a tag vote.",
				"operationId": "tag-vote",
				"parameters": [
					{
						"name": "author",
						"in": "query",
						"description": "Author of the tag.",
						"type": "<td>string</td>"
					},
					{
						"name": "downs",
						"in": "query",
						"description": "Number of downvotes.",
						"type": "<td>integer</td>"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Name of the tag.",
						"type": "<td>string</td>"
					},
					{
						"name": "ups",
						"in": "query",
						"description": "Number of upvotes.",
						"type": "<td>integer</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/gallery/image/{id}/votes": {
			"get": {
				"summary": "Vote",
				"description": "Descriptionnn                The base model for a vote.",
				"operationId": "vote",
				"parameters": [
					{
						"name": "downs",
						"in": "query",
						"description": "Number of downvotes",
						"type": "<td>integer</td>"
					},
					{
						"name": "ups",
						"in": "query",
						"description": "Number of upvotes",
						"type": "<td>integer</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/image/{id}": {
			"get": {
				"summary": "Image",
				"description": "Descriptionnn                The base model for an image.",
				"operationId": "image",
				"parameters": [
					{
						"name": "account_url",
						"in": "query",
						"description": "The username of the account that uploaded it, or null.",
						"type": "<td>string</td>"
					},
					{
						"name": "animated",
						"in": "query",
						"description": "is the image animated",
						"type": "<td>boolean</td>"
					},
					{
						"name": "bandwidth",
						"in": "query",
						"description": "Bandwidth consumed by the image in bytes",
						"type": "<td>integer</td>"
					},
					{
						"name": "datetime",
						"in": "query",
						"description": "Time uploaded, epoch time",
						"type": "<td>integer</td>"
					},
					{
						"name": "deletehash",
						"in": "query",
						"description": "OPTIONAL, the deletehash, if youre logged in as the image owner",
						"type": "<td>string</td>"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Description of the image.",
						"type": "<td>string</td>"
					},
					{
						"name": "favorite",
						"in": "query",
						"description": "Indicates if the current user favorited the image. Defaults to false if not signed in.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "gifv",
						"in": "query",
						"description": "OPTIONAL, The .gifv link. Only available if the image is animated and type is &#39;image/gif&#39;.",
						"type": "<td>string</td>"
					},
					{
						"name": "height",
						"in": "query",
						"description": "The height of the image in pixels",
						"type": "<td>integer</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The ID for the image",
						"type": "<td>string</td>"
					},
					{
						"name": "link",
						"in": "query",
						"description": "The direct link to the the image. (Note: if fetching an animated GIF that was over 20MB in original size, a .gif thumbnail will be returned)",
						"type": "<td>string</td>"
					},
					{
						"name": "looping",
						"in": "query",
						"description": "OPTIONAL, Whether the image has a looping animation. Only available if the image is animated and type is &#39;image/gif&#39;.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "mp4",
						"in": "query",
						"description": "OPTIONAL, The direct link to the .mp4. Only available if the image is animated and type is &#39;image/gif&#39;.",
						"type": "<td>string</td>"
					},
					{
						"name": "name",
						"in": "query",
						"description": "OPTIONAL, the original filename, if youre logged in as the image owner",
						"type": "<td>string</td>"
					},
					{
						"name": "nsfw",
						"in": "query",
						"description": "Indicates if the image has been marked as nsfw or not. Defaults to null if information is not available.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "section",
						"in": "query",
						"description": "If the image has been categorized by our backend then this will contain the section the image belongs in. (funny, cats, adviceanimals, wtf, etc)",
						"type": "<td>string</td>"
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the image in bytes",
						"type": "<td>integer</td>"
					},
					{
						"name": "title",
						"in": "query",
						"description": "The title of the image.",
						"type": "<td>string</td>"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Image MIME type.",
						"type": "<td>string</td>"
					},
					{
						"name": "views",
						"in": "query",
						"description": "The number of image views",
						"type": "<td>integer</td>"
					},
					{
						"name": "vote",
						"in": "query",
						"description": "The current users vote on the album. null if not signed in, if the user hasnt voted on it, or if not submitted to the gallery.",
						"type": "<td>string</td>"
					},
					{
						"name": "webm",
						"in": "query",
						"description": "OPTIONAL, The direct link to the .webm. Only available if the image is animated and type is &#39;image/gif&#39;.",
						"type": "<td>string</td>"
					},
					{
						"name": "width",
						"in": "query",
						"description": "The width of the image in pixels",
						"type": "<td>integer</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/message/": {
			"get": {
				"summary": "Message",
				"description": "Descriptionnn                The base model for a message.",
				"operationId": "message",
				"parameters": [
					{
						"name": "account_id",
						"in": "query",
						"description": "The account ID of the person receiving the message",
						"type": "<td>integer</td>"
					},
					{
						"name": "body",
						"in": "query",
						"description": "Text of the message",
						"type": "<td>string</td>"
					},
					{
						"name": "conversation_id",
						"in": "query",
						"description": "ID for the overall conversation",
						"type": "<td>integer</td>"
					},
					{
						"name": "datetime",
						"in": "query",
						"description": "Time message was sent, epoch time",
						"type": "<td>integer</td>"
					},
					{
						"name": "from",
						"in": "query",
						"description": "Account username of person sending the message",
						"type": "<td>string</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The ID for the message",
						"type": "<td>integer</td>"
					},
					{
						"name": "sender_id",
						"in": "query",
						"description": "The account ID of the person who sent the message",
						"type": "<td>integer</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"http://api.imgur.com/3/gallery/album/{id}": {
			"get": {
				"summary": "Gallery Album",
				"description": "Descriptionn                The data model formatted for gallery albums.",
				"operationId": "gallery-album",
				"parameters": [
					{
						"name": "account_id",
						"in": "query",
						"description": "The account ID of the account that uploaded it, or null.",
						"type": "<td>integer</td>"
					},
					{
						"name": "account_url",
						"in": "query",
						"description": "The account username or null if its anonymous.",
						"type": "<td>string</td>"
					},
					{
						"name": "comment_count",
						"in": "query",
						"description": "Number of comments on the gallery album.",
						"type": "<td>int</td>"
					},
					{
						"name": "cover",
						"in": "query",
						"description": "The ID of the album cover image",
						"type": "<td>string</td>"
					},
					{
						"name": "cover_height",
						"in": "query",
						"description": "The height, in pixels, of the album cover image",
						"type": "<td>integer</td>"
					},
					{
						"name": "cover_width",
						"in": "query",
						"description": "The width, in pixels, of the album cover image",
						"type": "<td>integer</td>"
					},
					{
						"name": "datetime",
						"in": "query",
						"description": "Time inserted into the gallery, epoch time",
						"type": "<td>integer</td>"
					},
					{
						"name": "description",
						"in": "query",
						"description": "The description of the album in the gallery",
						"type": "<td>string</td>"
					},
					{
						"name": "downs",
						"in": "query",
						"description": "Number of downvotes for the image",
						"type": "<td>integer</td>"
					},
					{
						"name": "favorite",
						"in": "query",
						"description": "Indicates if the current user favorited the album. Defaults to false if not signed in.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The ID for the image",
						"type": "<td>string</td>"
					},
					{
						"name": "images",
						"in": "query",
						"description": "An array of all the images in the album (only available when requesting the direct album)",
						"type": "<td>array of <a href="/models/image/">images<"
					},
					{
						"name": "images_count",
						"in": "query",
						"description": "The total number of images in the album",
						"type": "<td>integer</td>"
					},
					{
						"name": "is_album",
						"in": "query",
						"description": "if its an album or not",
						"type": "<td>boolean</td>"
					},
					{
						"name": "layout",
						"in": "query",
						"description": "The view layout of the album.",
						"type": "<td>string</td>"
					},
					{
						"name": "link",
						"in": "query",
						"description": "The URL link to the album",
						"type": "<td>string</td>"
					},
					{
						"name": "nsfw",
						"in": "query",
						"description": "Indicates if the album has been marked as nsfw or not. Defaults to null if information is not available.",
						"type": "<td>boolean</td>"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "The privacy level of the album, you can only view public if not logged in as album owner",
						"type": "<td>string</td>"
					},
					{
						"name": "score",
						"in": "query",
						"description": "Imgur popularity score",
						"type": "<td>integer</td>"
					},
					{
						"name": "title",
						"in": "query",
						"description": "The title of the album in the gallery",
						"type": "<td>string</td>"
					},
					{
						"name": "ups",
						"in": "query",
						"description": "Upvotes for the image",
						"type": "<td>integer</td>"
					},
					{
						"name": "views",
						"in": "query",
						"description": "The number of image views",
						"type": "<td>integer</td>"
					},
					{
						"name": "vote",
						"in": "query",
						"description": "The current users vote on the album. null if not signed in or if the user hasnt voted on it.",
						"type": "<td>string</td>"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"POST /account/{username}/settings": {
			"": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	}
}