{
	"swagger": "2.0",
	"info": {
		"title": "The Noun Project API",
		"description": "With our API you can bring a growing collection of high quality symbols to anything you create.",
		"termsOfService": "https://thenounproject.com/legal#terms",
		"version": "v1"
	},
	"host": "http://api.thenounproject.com",
	"basePath": "/collection",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/collection/{id}": {
			"get": {
				"summary": "Get collection by id",
				"description": "Returns a single collection",
				"operationId": "getCollectionById",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Collection id"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/collection/{id}/icons": {
			"get": {
				"summary": "Get collection icons by id",
				"description": "Returns a list of icons associated with a collection",
				"operationId": "getCollectionIconsById",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Collection id"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Maximum number of results"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of results to displace or skip over"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Number of results of limit length to displace or skip over"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/collection/{slug}": {
			"get": {
				"summary": "Get collection by slug",
				"description": "Returns a single collection",
				"operationId": "getCollectionBySlug",
				"parameters": [
					{
						"name": "slug",
						"in": "path",
						"description": "Collection slug"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/collection/{slug}/icons": {
			"get": {
				"summary": "Get collection icons by slug",
				"description": "Returns a list of icons associated with a collection",
				"operationId": "getCollectionIconsBySlug",
				"parameters": [
					{
						"name": "limit",
						"in": "query",
						"description": "Maximum number of results"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of results to displace or skip over"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Number of results of limit length to displace or skip over"
					},
					{
						"name": "slug",
						"in": "path",
						"description": "Collection slug"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	},
	"definitions": {
		"Article": {
			"properties": {
				"id": {
					"description": "Unique identifier for post",
					"type": "string"
				},
				"evergreen": {
					"description": "Flag to designate u201ctimelessu201d articles, always topically relevant",
					"type": "string"
				},
				"content": {
					"description": "Body of the article",
					"type": "string"
				},
				"pub_date": {
					"description": "Earliest date article can be published (default sort)",
					"type": "string"
				},
				"title": {
					"description": "Title of the article",
					"type": "string"
				},
				"update_date": {
					"description": "Date the article was last updated",
					"type": "string"
				},
				"content_type": {
					"description": "Type of content embodied by the article",
					"type": "string"
				},
				"export_phase": {
					"description": "Phase of exporting that a business should be in to benefit from the article",
					"type": "string"
				},
				"industry": {
					"description": "Industry category assigned to this article",
					"type": "string"
				},
				"topic": {
					"description": "Topic assigned to this article",
					"type": "string"
				},
				"subtopic": {
					"description": "Subtopic assigned to this article",
					"type": "string"
				},
				"trade_region": {
					"description": "Trade region covered by an articleu2019s content",
					"type": "string"
				},
				"geo_region": {
					"description": "World region covered by an articleu2019s content",
					"type": "string"
				},
				"geo_subregion": {
					"description": "Would sub-region covered by an articleu2019s content",
					"type": "string"
				},
				"country": {
					"description": "Country covered by an articleu2019s content",
					"type": "string"
				},
				"keyword": {
					"description": "Keywords assigned by the articleu2019s author",
					"type": "string"
				}
			}
		}
	}
}