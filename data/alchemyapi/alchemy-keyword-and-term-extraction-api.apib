FORMAT: 1A
HOST: http://access.alchemyapi.com/calls/

# Alchemy Keyword and Term Extraction API
AlchemyAPI provides easy-to-use facilities for extracting topic keywords from your publicly-accessible web-based content. These URL processing calls automatically fetch the desired Internet webpage, normalize / clean it (removing ads, navigation links, and other unimportant content), and extract topic keywords.

## Authentication
This API uses Custom Query Parameter for its authentication.

The parameters that are needed to be sent for this type of authentication are as follows:
+ `apikey`

# Group Keywords

## Ur URLGetRankedKeywords [/ur/URLGetRankedKeywords{?apikey,baseUrl,cquery,jsonp,keywordExtractMode,maxRetrieve,outputMode,sentiment,showSourceText,sourceText,url,xpath}]

### getKeywords [GET]
AlchemyAPI provides easy-to-use facilities for extracting topic keywords from your publicly-accessible web-based content. These URL processing calls automatically fetch the desired Internet webpage, normalize / clean it (removing ads, navigation links, and other unimportant content), and extract topic keywords.
+ Parameters
    + apikey (string, required)

        your private api key

    + baseUrl (string, required)

        el-tag output base http url (must be uri-argument encoded)

    + cquery (string, required)

        a visual constraints query to apply to the web page.

    + jsonp (string, required)

        desired JSONP callback

    + keywordExtractMode (string, required)

        keyword extraction mode (normal or strict)

    + maxRetrieve (string, required)

        maximum number of keywords to extract (default: 50)

    + outputMode (string, required) -

        + Default: desired API output format
    + sentiment (string, required)

        whether to enable keyword-level sentiment analysis

    + showSourceText (string, required)

        whether to include the original source text the keywords were extracted from within the API response

    + sourceText (string, required)

        where to obtain the text that will be processed by this API call.

    + url (string, required)

        apikey

    + xpath (string, required)

        an XPath query to apply to the web page.


+ Response 200 (application/json)
    + Attributes (array[results])



# Data Structures

## results (object)


### Properties
+ `status` (string, optional) - success / failure status indicating whether the request was processed.
+ `language` (string, optional) - the detected language that the source text was written in.
+ `url` (string, optional) - http url information was requested for.
+ `relevance` (string, optional) - relevance score for a detected keyword.
+ `text` (string, optional) - the detected keyword text.
+ `sentiment` (string, optional) - sentiment for the detected keyword (sent only if keyword-level sentiment analysis is enabled)
+ `statusInfo` (string, optional) - failure status information

