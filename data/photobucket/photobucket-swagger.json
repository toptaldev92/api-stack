{
	"swagger": "2.0",
	"info": {
		"title": "Photobucket",
		"description": "The Photobucket API allows you to create an interface to talk to the Photobucket web site. This means that users do not have to leave your site to perform certain actions on the Photobucket site.",
		"termsOfService": "http://photobucket.com/terms",
		"version": "v1"
	},
	"host": "api.photobucket.com",
	"basePath": "/",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/album/[identifier]": {
			"put": {
				"summary": "Rename Album",
				"description": "Rename Album",
				"operationId": "rename-album",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Name of result. Must be between 2 and 50 characters. Valid characters are letters, numbers, underscore ( _ ), hyphen (-), and space.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/album/[identifier]/follow/[actionIdentifier]": {
			"post": {
				"summary": "Follow an Album",
				"description": "Follow an Album",
				"operationId": "follow-an-album",
				"parameters": [
					{
						"name": "actionidentifier",
						"in": "query",
						"description": "What to follow:&#160;                                                    comment - Follow comments in the album (must be album owner to pre-approve). Options are true or false.                            comment_approve - Follow comment approvals.                            upload_approve - Follow approved uploads.                            album_module - Follow approved uploads in your album module. Must be logged in. The album_module option displays in the users People I Followpanel in their",
						"type": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "Email address to which notifications will be sent. This field is required if the user is not logged in to a Photobucket account.",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/album/[identifier]/follow/[actionidentifier]": {
			"get": {
				"summary": "Get Album Following Status",
				"description": "Get Album Following Status",
				"operationId": "get-album-following-status",
				"parameters": [
					{
						"name": "actionidentifier",
						"in": "query",
						"description": "Get whos following this item (all types or a specific type). Only if the users logged in.",
						"type": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "Email address to check subscription state. This field is required if the user is not logged in to a Photobucket account.",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/album/[identifier]/organize": {
			"get": {
				"summary": "Get Album Vanity URL",
				"description": "Get Album Vanity URL",
				"operationId": "get-album-vanity-url",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/album/[identifier]/privacy": {
			"put post": {
				"summary": "Update Album Privacy Settings",
				"description": "Update Album Privacy Settings",
				"operationId": "update-album-privacy-settings",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "password",
						"in": "query",
						"description": "Password for a private album, if privacy=private. Passwords must be at least six characters long. They can only contain the characters a-z, A-Z, 0-9, hyphen ( - ), and underscore ( _ ). Passwords cannot contain spaces or start with a zero. The guest password must also be different than the owners Photobucket password.",
						"type": "string"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "Whether the album is public or private.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/album/[identifier]/share/[actionIdentifier]": {
			"post": {
				"summary": "Share an Album",
				"description": "Share an Album",
				"operationId": "share-an-album",
				"parameters": [
					{
						"name": "actionIdentifier",
						"in": "query",
						"description": "Comma separated list of services to send to. Options are all, twitter, facebook, or myspace. Default is all",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded album to share.",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Body of message.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/album/[identifier]/theme": {
			"get": {
				"summary": "Get Album Theme",
				"description": "Get Album Theme",
				"operationId": "get-album-theme",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/album/[identifier]/upload": {
			"post": {
				"summary": "Upload Media to an Album",
				"description": "Upload Media to an Album",
				"operationId": "upload-media-to-an-album",
				"parameters": [
					{
						"name": "altitude",
						"in": "query",
						"description": "Decimal height above sea level (-x,x) in kilometers.",
						"type": "float"
					},
					{
						"name": "compass",
						"in": "query",
						"description": "Decimal direction of orientation at image capture (0,360) in degrees.",
						"type": "float"
					},
					{
						"name": "degrees",
						"in": "query",
						"description": "Degrees of rotation in 90 degree increments.",
						"type": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Searchable description to set on the media. Maximum 2048 characters.",
						"type": "string"
					},
					{
						"name": "filename",
						"in": "query",
						"description": "File name to set on the media. If left blank, the file name matches the original name. Valid characters are letters, numbers, underscore ( _ ), hyphen (-), and space.",
						"type": "string"
					},
					{
						"name": "gps_timestamp",
						"in": "query",
						"description": "Timestamp of GPS capture (seconds since epoch).",
						"type": "float"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "Decimal latitude in degrees (-90,90).",
						"type": "float"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "Decimal longitude in degrees (-180,180).",
						"type": "float"
					},
					{
						"name": "read_geo_exif",
						"in": "query",
						"description": "Read the geo-data from exif on the image.  This is overwritten by the given parameters, unless this parameter is force, where the exif will override given parameters.",
						"type": "boolean or string"
					},
					{
						"name": "scramble",
						"in": "query",
						"description": "Indicates if the filename should be scrambled. Options are true or false.",
						"type": "boolean"
					},
					{
						"name": "size",
						"in": "query",
						"description": "Size to resize an image to. (Images can only be made smaller.) One of:                         (value =&gt; resize result dimensions)                                                    100 =&gt; 100x75                            160 =&gt; 160x120                            320 =&gt; 320x240                            640 =&gt; 640x480                            800 =&gt; 800x600                            1024 =&gt; 1024x768                            1280 =&gt; 1280x960,  //premium owner only  ",
						"type": "integer"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Searchable title to set on the media. Maximum 250 characters.",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Media type. Options are image, video, or base64.",
						"type": "string"
					},
					{
						"name": "uploadfile",
						"in": "query",
						"description": "Media encoded with multipart/form-data. Acceptable file types are:                                                    Image u2013 jpg, png, gif, base 64 encoded image, or bmp.                            Video u20133g2, 3gp, 3gp2, 3gpp, 3p, asf, avi, divx, dv, dvx, flv, gif, moov, mov, mp4, mpeg4, mpg4, mpe, mpeg, mpg, qt, swf, wmv, xvid, rm.                                                Notes:                                                    If the type is base64, this is a regular www-urlencoded",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/album/[identifier]/url": {
			"get": {
				"summary": "Get Album URL",
				"description": "Get Album URL",
				"operationId": "get-album-url",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group": {
			"post": {
				"summary": "Create New Group Album",
				"description": "Create New Group Album",
				"operationId": "create-new-group-album",
				"parameters": [
					{
						"name": "add",
						"in": "query",
						"description": "Set users who can add to the group. Options are viewers, moderated_viewers, or owner. Viewers allows any Photobucket user to add to the group, moderated_viewers allows anyone to add to the group, but the owner must approve all additions, and owner allows only the owner to add to the group.",
						"type": "string"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "Subscribe to comment notifications.&#160;Options are true or false.",
						"type": "boolean "
					},
					{
						"name": "descriptions",
						"in": "query",
						"description": "Description of the group album.",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Name of group album. Must be between 2 and 50 characters. Valid characters are letters, numbers, underscore ( _ ), hyphen (-), and space.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "password",
						"in": "query",
						"description": "Password for a private album to restrict users who may access the album.",
						"type": "string"
					},
					{
						"name": "uploads",
						"in": "query",
						"description": "Subscribe to upload notifications. Options are true or false.",
						"type": "boolean"
					},
					{
						"name": "vanity",
						"in": "query",
						"description": "Vanity URL for the group album.",
						"type": "string"
					},
					{
						"name": "view",
						"in": "query",
						"description": "Set the group album as public or private.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]": {
			"get": {
				"summary": "Get Media for a Group Album",
				"description": "Get Media for a Group Album",
				"operationId": "get-media-for-a-group-album",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Group identifier.",
						"type": "string"
					},
					{
						"name": "media",
						"in": "query",
						"description": "Limits the media shown. Optionsare images, videos, none, or all.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number. Used if paginated=true.",
						"type": "integer"
					},
					{
						"name": "paginated",
						"in": "query",
						"description": "Allows you to page through results.",
						"type": "boolean"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "perpage",
						"in": "query",
						"description": "Number of results per page. Used if paginated=true",
						"type": "integer"
					},
					{
						"name": "sortorder",
						"in": "query",
						"description": "How to sort the results:                                                     newest = Newest First                            oldest = Oldest First                              alpha = alphabetical order                              user = users sort order",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/contributor/[actionIdentifier]": {
			"get": {
				"summary": "Get Group Album Contributors",
				"description": "Get Group Album Contributors",
				"operationId": "get-group-album-contributors",
				"parameters": [
					{
						"name": "actionIdentifier",
						"in": "query",
						"description": "Username to filter on. The default (blank) gets the list of contributors.",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/follow/[actionIdentifier]": {
			"get": {
				"summary": "Get Group Album Following Status",
				"description": "Get Group Album Following Status",
				"operationId": "get-group-album-following-status",
				"parameters": [
					{
						"name": "actionIdentifier",
						"in": "query",
						"description": "&#160;"
					},
					{
						"name": "email",
						"in": "query",
						"description": "Email address to check subscription state. This field is required if the user is not logged into a Photobucket account.",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/info": {
			"put post": {
				"summary": "Set Group Album Information",
				"description": "Set Group Album Information",
				"operationId": "set-group-album-information",
				"parameters": [
					{
						"name": "description",
						"in": "query",
						"description": "Text to set as the description for the group album.",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Text to set as the title of the group album.",
						"type": "string"
					},
					{
						"name": "url",
						"in": "query",
						"description": "Urlencoded thumbnail URL.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/privacy": {
			"put post": {
				"summary": "Update Group Album Privacy Settings",
				"description": "Update Group Album Privacy Settings",
				"operationId": "update-group-album-privacy-settings",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "password",
						"in": "query",
						"description": "Password for a private album, if privacy=private. Passwords must be at least six characters long. They can only contain the characters a-z, A-Z, 0-9, hyphen ( - ), and underscore ( _ ). Passwords cannot contain spaces or start with a zero. The guest password must also be different than the owners Photobucket password.",
						"type": "string"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "Whether the album is public or private.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/share/[actionIdentifier]": {
			"post": {
				"summary": "Share a Group Album",
				"description": "Share a Group Album",
				"operationId": "share-a-group-album",
				"parameters": [
					{
						"name": "actionIdentifier",
						"in": "query",
						"description": "Comma separated list of services to send to. Options are all, twitter, facebook, or myspace. Default is all",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded group album to share.",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Body of message.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/tag/[tagname]": {
			"get": {
				"summary": "Get Media Tags for a Group Album",
				"description": "Get Media Tags for a Group Album",
				"operationId": "get-media-tags-for-a-group-album",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Group name.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number to view, 1 is indexed.",
						"type": "integer"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "perpage",
						"in": "query",
						"description": "Number of media per page. Maximum of 200.",
						"type": "integer"
					},
					{
						"name": "separate",
						"in": "query",
						"description": "If tagname=, separate tag list by contact and URL.",
						"type": "boolean"
					},
					{
						"name": "tagname",
						"in": "query",
						"description": "Tag name to get media for. If not entered, tag name list is returned.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/theme": {
			"get": {
				"summary": "Get Group Album Theme",
				"description": "Get Group Album Theme",
				"operationId": "get-group-album-theme",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Group identifier.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/upload": {
			"post": {
				"summary": "Upload Media to a Specific Group Album",
				"description": "Upload Media to a Specific Group Album",
				"operationId": "upload-media-to-a-specific-group-album",
				"parameters": [
					{
						"name": "degrees",
						"in": "query",
						"description": "Degrees of rotation in 90 degree increments.",
						"type": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Searchable description to set on the media. Maximum 2048 characters.",
						"type": "string"
					},
					{
						"name": "filename",
						"in": "query",
						"description": "File name to set on the media. If left blank, the file name matches the original name. Valid characters are letters, numbers, underscore ( _ ), hyphen (-), and space.",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "scramble",
						"in": "query",
						"description": "Indicates if the filename should be scrambled. Options are true or false.",
						"type": "boolean"
					},
					{
						"name": "size",
						"in": "query",
						"description": "Size to resize an image to. (Images can only be made smaller.) One of:                         (value =&gt; resize result dimensions)                                                    100 =&gt; 100x75                            160 =&gt; 160x120                            320 =&gt; 320x240                            640 =&gt; 640x480                            800 =&gt; 800x600                            1024 =&gt; 1024x768                            1280 =&gt; 1280x960,  //premium owner only  ",
						"type": "integer"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Searchable title to set on the media. Maximum 250 characters.",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Media type. Options are image, video, or base64.",
						"type": "string"
					},
					{
						"name": "uploadfile",
						"in": "query",
						"description": "Media encoded with multipart/form-data. Acceptable file types are:                                                    Image u2013 jpg, png, gif, base 64 encoded image, or bmp.                            Video u20133g2, 3gp, 3gp2, 3gpp, 3p, asf, avi, divx, dv, dvx, flv, gif, moov, mov, mp4, mpeg4, mpg4, mpe, mpeg, mpg, qt, swf, wmv, xvid, rm.                                                Notes:                                                    If the type is base64, this is a regular www-urlencoded",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/url": {
			"get": {
				"summary": "Get Group Album URL",
				"description": "Get Group Album URL",
				"operationId": "get-group-album-url",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/group/[identifier]/vanity": {
			"get": {
				"summary": "Get Group Album Vanity URL",
				"description": "Get Group Album Vanity URL",
				"operationId": "get-group-album-vanity-url",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/login/request": {
			"post": {
				"summary": "Web Login",
				"description": "Web Login",
				"operationId": "web-login",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]": {
			"get": {
				"summary": "Get Media Information",
				"description": "Get Media Information",
				"operationId": "get-media-information",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded full media URL.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/comment": {
			"get": {
				"summary": "Get Comments",
				"description": "Get Comments",
				"operationId": "get-comments",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded full media URL.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Beginning offset of results. This value overrides the page parameter.",
						"type": "integer"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page to start at.",
						"type": "integer"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "perpage",
						"in": "query",
						"description": "Number of comments to return per page. Maximum of 50.",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/description": {
			"post put": {
				"summary": "Set Media Description",
				"description": "Set Media Description",
				"operationId": "set-media-description",
				"parameters": [
					{
						"name": "description",
						"in": "query",
						"description": "Text to set as the description.",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded full media URL.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/link": {
			"get": {
				"summary": "Get Media Links",
				"description": "Get Media Links",
				"operationId": "get-media-links",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded full media URL.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/rating": {
			"get": {
				"summary": "Get Ratings",
				"description": "Get Ratings",
				"operationId": "get-ratings",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded full media URL.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/related": {
			"get": {
				"summary": "Get Related Media",
				"description": "Get Related Media",
				"operationId": "get-related-media",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded full media URL.",
						"type": "string"
					},
					{
						"name": "num",
						"in": "query",
						"description": "Number of results to return. Maximum 20.",
						"type": "integer"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "type",
						"in": "query",
						"description": "Type of media to return.Options are images or videos. &#160;",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/resize": {
			"put": {
				"summary": "Resize Image",
				"description": "Resize Image",
				"operationId": "resize-image",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "size",
						"in": "query",
						"description": "Integer"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/rotate": {
			"put": {
				"summary": "Rotate Image",
				"description": "Rotate Image",
				"operationId": "rotate-image",
				"parameters": [
					{
						"name": "degrees",
						"in": "query",
						"description": "Integer"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Album identifier.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/share/[actionIdentifier] &#160;": {
			"post": {
				"summary": "Share Media",
				"description": "Share Media",
				"operationId": "share-media",
				"parameters": [
					{
						"name": "actionIdentifier",
						"in": "query",
						"description": "Comma separated list of services to send to. Options are all, twitter, facebook, myspace, or email. Default is all, but all does NOT&#160;include email.",
						"type": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "Email to which the URL&#160;for the media will be sent. Required if actionIdentifier is email.",
						"type": "string"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded media to share.",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Body of message.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/tag": {
			"post": {
				"summary": "Add Media Tag",
				"description": "Add Media Tag",
				"operationId": "add-media-tag",
				"parameters": [
					{
						"name": "bottomrightx",
						"in": "query",
						"description": "Float"
					},
					{
						"name": "bottomrighty",
						"in": "query",
						"description": "Float"
					},
					{
						"name": "contact",
						"in": "query",
						"description": "Integer orString"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded full media URL.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "tag",
						"in": "query",
						"description": "String to add as the tag for the media. Maximum of 50 characters. Maximum of 20 tags per image.",
						"type": "string"
					},
					{
						"name": "tagurl",
						"in": "query",
						"description": "URL&#160;to link to.",
						"type": "string"
					},
					{
						"name": "topleftx",
						"in": "query",
						"description": "Float"
					},
					{
						"name": "toplefty",
						"in": "query",
						"description": "Float"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/tag/[tagid]": {
			"put": {
				"summary": "Update Media Tag",
				"description": "Update Media Tag",
				"operationId": "update-media-tag",
				"parameters": [
					{
						"name": "bottomrightx",
						"in": "query",
						"description": "Float"
					},
					{
						"name": "bottomrighty",
						"in": "query",
						"description": "Float"
					},
					{
						"name": "contact",
						"in": "query",
						"description": "Integer orString"
					},
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded full media URL.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "tag",
						"in": "query",
						"description": "String to add as the tag for the media. Maximum of 50 characters. Maximum of 20 tags per image.",
						"type": "string"
					},
					{
						"name": "tagid",
						"in": "query",
						"description": "Tag to update.",
						"type": "string"
					},
					{
						"name": "tagurl",
						"in": "query",
						"description": "URL&#160;to add to the tag.",
						"type": "string"
					},
					{
						"name": "topleftx",
						"in": "query",
						"description": "Float"
					},
					{
						"name": "toplefty",
						"in": "query",
						"description": "Float"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/media/[identifier]/title": {
			"post put": {
				"summary": "Set Media Title",
				"description": "Set Media Title",
				"operationId": "set-media-title",
				"parameters": [
					{
						"name": "identifier",
						"in": "query",
						"description": "Urlencoded full media URL.",
						"type": "string"
					},
					{
						"name": "Parameter",
						"in": "query",
						"description": ""
					},
					{
						"name": "title",
						"in": "query",
						"description": "Text to set as the title.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/ping": {
			"put": {
				"summary": "Ping Photobucket",
				"description": "Ping Photobucket",
				"operationId": "ping-photobucket",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/time": {
			"get": {
				"summary": "Get Timestamp",
				"description": "Get Timestamp",
				"operationId": "get-timestamp",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	}
}