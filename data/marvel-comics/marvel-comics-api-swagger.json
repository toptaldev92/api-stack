{
	"swagger": "2.0",
	"info": {
		"title": "Marvel Comics API",
		"description": "The Marvel Comics API allows developers everywhere to access information about Marvel's vast library of comicsu2014from what's coming up, to 70 years ago. ",
		"termsOfService": "http://developer.marvel.com/terms",
		"version": "v1"
	},
	"host": "gateway.marvel.com",
	"basePath": "/docs/public",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/v1/public/characters": {
			"": {
				"summary": "Fetches lists of characters.",
				"description": "Fetches lists of comic characters with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorCollection",
				"parameters": [
					{
						"name": "comics",
						"in": "query",
						"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only characters which appear in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only characters which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return characters with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/characters/{characterId}": {
			"": {
				"summary": "Fetches a single character by id.",
				"description": "This method fetches a single character resource.  It is the canonical URI for any character resource provided by the API.",
				"operationId": "getCharacterIndividual",
				"parameters": [
					{
						"name": "characterId",
						"in": "path",
						"description": "A single character id.",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/characters/{characterId}/comics": {
			"": {
				"summary": "Fetches lists of comics filtered by a character id.",
				"description": "Fetches lists of comics containing a specific character, with optional filters. See notes on individual parameters below.",
				"operationId": "getComicsCharacterCollection",
				"parameters": [
					{
						"name": "characterId",
						"in": "path",
						"description": "The character id.",
						"type": "int"
					},
					{
						"name": "collaborators",
						"in": "query",
						"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "dateDescriptor",
						"in": "query",
						"description": "Return comics within a predefined date range.",
						"type": "string"
					},
					{
						"name": "dateRange",
						"in": "query",
						"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
						"type": "int"
					},
					{
						"name": "diamondCode",
						"in": "query",
						"description": "Filter by diamond code.",
						"type": "string"
					},
					{
						"name": "digitalId",
						"in": "query",
						"description": "Filter by digital comic id.",
						"type": "int"
					},
					{
						"name": "ean",
						"in": "query",
						"description": "Filter by EAN.",
						"type": "string"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "format",
						"in": "query",
						"description": "Filter by the issue format (e.g. comic, digital comic, hardcover).",
						"type": "string"
					},
					{
						"name": "formatType",
						"in": "query",
						"description": "Filter by the issue format type (comic or collection).",
						"type": "string"
					},
					{
						"name": "hasDigitalIssue",
						"in": "query",
						"description": "Include only results which are available digitally.",
						"type": "boolean"
					},
					{
						"name": "isbn",
						"in": "query",
						"description": "Filter by ISBN.",
						"type": "string"
					},
					{
						"name": "issn",
						"in": "query",
						"description": "Filter by ISSN.",
						"type": "string"
					},
					{
						"name": "issueNumber",
						"in": "query",
						"description": "Return only issues in series whose issue number matches the input.",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only comics which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "noVariants",
						"in": "query",
						"description": "Exclude variant comics from the result set.",
						"type": "boolean"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "sharedAppearances",
						"in": "query",
						"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
						"type": "int"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only issues in series whose start year matches the input.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Return only issues in series whose title matches the input.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return only issues in series whose title starts with the input.",
						"type": "string"
					},
					{
						"name": "upc",
						"in": "query",
						"description": "Filter by UPC.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/characters/{characterId}/events": {
			"": {
				"summary": "Fetches lists of events filtered by a character id.",
				"description": "Fetches lists of events in which a specific character appears, with optional filters. See notes on individual parameters below.",
				"operationId": "getCharacterEventsCollection",
				"parameters": [
					{
						"name": "characterId",
						"in": "path",
						"description": "The character ID.",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only events which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Filter the event list by name.",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return events with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/characters/{characterId}/series": {
			"": {
				"summary": "Fetches lists of series filtered by a character id.",
				"description": "Fetches lists of comic series in which a specific character appears, with optional filters. See notes on individual parameters below.",
				"operationId": "getCharacterSeriesCollection",
				"parameters": [
					{
						"name": "characterId",
						"in": "path",
						"description": "The character ID",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "contains",
						"in": "query",
						"description": "Return only series containing one or more comics with the specified format.",
						"type": "string"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only series which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesType",
						"in": "query",
						"description": "Filter the series by publication frequency type.",
						"type": "string"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only series matching the specified start year.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Filter by series title.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return series with titles that begin with the specified string (e.g. Sp).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/characters/{characterId}/stories": {
			"": {
				"summary": "Fetches lists of stories filtered by a character id.",
				"description": "Fetches lists of comic stories  featuring a specific character with optional filters. See notes on individual parameters below.",
				"operationId": "getCharacterStoryCollection",
				"parameters": [
					{
						"name": "characterId",
						"in": "path",
						"description": "The character ID.",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only stories contained in the specified (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only stories which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only stories contained the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/comics": {
			"": {
				"summary": "Fetches lists of comics.",
				"description": "Fetches lists of comics with optional filters. See notes on individual parameters below.",
				"operationId": "getComicsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "collaborators",
						"in": "query",
						"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work). Accepts a comma-separated list of ids.",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "dateDescriptor",
						"in": "query",
						"description": "Return comics within a predefined date range.",
						"type": "string"
					},
					{
						"name": "dateRange",
						"in": "query",
						"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
						"type": "int"
					},
					{
						"name": "diamondCode",
						"in": "query",
						"description": "Filter by diamond code.",
						"type": "string"
					},
					{
						"name": "digitalId",
						"in": "query",
						"description": "Filter by digital comic id.",
						"type": "int"
					},
					{
						"name": "ean",
						"in": "query",
						"description": "Filter by EAN.",
						"type": "string"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "format",
						"in": "query",
						"description": "Filter by the issue format (e.g. comic, digital comic, hardcover).",
						"type": "string"
					},
					{
						"name": "formatType",
						"in": "query",
						"description": "Filter by the issue format type (comic or collection).",
						"type": "string"
					},
					{
						"name": "hasDigitalIssue",
						"in": "query",
						"description": "Include only results which are available digitally.",
						"type": "boolean"
					},
					{
						"name": "isbn",
						"in": "query",
						"description": "Filter by ISBN.",
						"type": "string"
					},
					{
						"name": "issn",
						"in": "query",
						"description": "Filter by ISSN.",
						"type": "string"
					},
					{
						"name": "issueNumber",
						"in": "query",
						"description": "Return only issues in series whose issue number matches the input.",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only comics which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "noVariants",
						"in": "query",
						"description": "Exclude variants (alternate covers, secondary printings, directors cuts, etc.) from the result set.",
						"type": "boolean"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "sharedAppearances",
						"in": "query",
						"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear). Accepts a comma-separated list of ids.",
						"type": "int"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only issues in series whose start year matches the input.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Return only issues in series whose title matches the input.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return only issues in series whose title starts with the input.",
						"type": "string"
					},
					{
						"name": "upc",
						"in": "query",
						"description": "Filter by UPC.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/comics/{comicId}": {
			"": {
				"summary": "Fetches a single comic by id.",
				"description": "This method fetches a single comic resource.  It is the canonical URI for any comic resource provided by the API.",
				"operationId": "getComicIndividual",
				"parameters": [
					{
						"name": "comicId",
						"in": "path",
						"description": "A single comic.",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/comics/{comicId}/characters": {
			"": {
				"summary": "Fetches lists of characters filtered by a comic id.",
				"description": "Fetches lists of characters which appear in a specific comic with optional filters. See notes on individual parameters below.",
				"operationId": "getComicCharacterCollection",
				"parameters": [
					{
						"name": "comicId",
						"in": "path",
						"description": "The comic id.",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only characters which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return characters with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/comics/{comicId}/creators": {
			"": {
				"summary": "Fetches lists of creators filtered by a comic id.",
				"description": "Fetches lists of comic creators whose work appears in a specific comic, with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorCollection",
				"parameters": [
					{
						"name": "comicId",
						"in": "path",
						"description": "The comic id.",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "firstName",
						"in": "query",
						"description": "Filter by creator first name (e.g. brian).",
						"type": "string"
					},
					{
						"name": "firstNameStartsWith",
						"in": "query",
						"description": "Filter by creator first names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "lastName",
						"in": "query",
						"description": "Filter by creator last name (e.g. Bendis).",
						"type": "string"
					},
					{
						"name": "lastNameStartsWith",
						"in": "query",
						"description": "Filter by creator last names that match critera (e.g. Ben).",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "middleName",
						"in": "query",
						"description": "Filter by creator middle name (e.g. Michael).",
						"type": "string"
					},
					{
						"name": "middleNameStartsWith",
						"in": "query",
						"description": "Filter by creator middle names that match critera (e.g. Mi).",
						"type": "string"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only creators which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Filter by creator names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "suffix",
						"in": "query",
						"description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/comics/{comicId}/events": {
			"": {
				"summary": "Fetches lists of events filtered by a comic id.",
				"description": "Fetches lists of events in which a specific comic appears, with optional filters. See notes on individual parameters below.",
				"operationId": "getIssueEventsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comicId",
						"in": "path",
						"description": "The comic ID.",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only events which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Filter the event list by name.",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return events with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/comics/{comicId}/stories": {
			"": {
				"summary": "Fetches lists of stories filtered by a comic id.",
				"description": "Fetches lists of comic stories in a specific comic issue, with optional filters. See notes on individual parameters below.",
				"operationId": "getComicStoryCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comicId",
						"in": "path",
						"description": "The comic ID.",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only stories which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only stories contained the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/creators": {
			"": {
				"summary": "Fetches lists of creators.",
				"description": "Fetches lists of comic creators with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorCollection",
				"parameters": [
					{
						"name": "comics",
						"in": "query",
						"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "firstName",
						"in": "query",
						"description": "Filter by creator first name (e.g. Brian).",
						"type": "string"
					},
					{
						"name": "firstNameStartsWith",
						"in": "query",
						"description": "Filter by creator first names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "lastName",
						"in": "query",
						"description": "Filter by creator last name (e.g. Bendis).",
						"type": "string"
					},
					{
						"name": "lastNameStartsWith",
						"in": "query",
						"description": "Filter by creator last names that match critera (e.g. Ben).",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "middleName",
						"in": "query",
						"description": "Filter by creator middle name (e.g. Michael).",
						"type": "string"
					},
					{
						"name": "middleNameStartsWith",
						"in": "query",
						"description": "Filter by creator middle names that match critera (e.g. Mi).",
						"type": "string"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only creators which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Filter by creator names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "suffix",
						"in": "query",
						"description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/creators/{creatorId}": {
			"": {
				"summary": "Fetches a single creator by id.",
				"description": "This method fetches a single creator resource.  It is the canonical URI for any creator resource provided by the API.",
				"operationId": "getCreatorIndividual",
				"parameters": [
					{
						"name": "creatorId",
						"in": "path",
						"description": "A single creator id.",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/creators/{creatorId}/comics": {
			"": {
				"summary": "Fetches lists of comics filtered by a creator id.",
				"description": "Fetches lists of comics in which the work of a specific creator appears, with optional filters. See notes on individual parameters below.",
				"operationId": "getComicsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "collaborators",
						"in": "query",
						"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
						"type": "int"
					},
					{
						"name": "creatorId",
						"in": "path",
						"description": "The creator ID.",
						"type": "int"
					},
					{
						"name": "dateDescriptor",
						"in": "query",
						"description": "Return comics within a predefined date range.",
						"type": "string"
					},
					{
						"name": "dateRange",
						"in": "query",
						"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
						"type": "int"
					},
					{
						"name": "diamondCode",
						"in": "query",
						"description": "Filter by diamond code.",
						"type": "string"
					},
					{
						"name": "digitalId",
						"in": "query",
						"description": "Filter by digital comic id.",
						"type": "int"
					},
					{
						"name": "ean",
						"in": "query",
						"description": "Filter by EAN.",
						"type": "string"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "format",
						"in": "query",
						"description": "Filter by the issue format (e.g. comic, digital comic, hardcover).",
						"type": "string"
					},
					{
						"name": "formatType",
						"in": "query",
						"description": "Filter by the issue format type (comic or collection).",
						"type": "string"
					},
					{
						"name": "hasDigitalIssue",
						"in": "query",
						"description": "Include only results which are available digitally.",
						"type": "boolean"
					},
					{
						"name": "isbn",
						"in": "query",
						"description": "Filter by ISBN.",
						"type": "string"
					},
					{
						"name": "issn",
						"in": "query",
						"description": "Filter by ISSN.",
						"type": "string"
					},
					{
						"name": "issueNumber",
						"in": "query",
						"description": "Return only issues in series whose issue number matches the input.",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only comics which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "noVariants",
						"in": "query",
						"description": "Exclude variant comics from the result set.",
						"type": "boolean"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "sharedAppearances",
						"in": "query",
						"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
						"type": "int"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only issues in series whose start year matches the input.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Return only issues in series whose title matches the input.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return only issues in series whose title starts with the input.",
						"type": "string"
					},
					{
						"name": "upc",
						"in": "query",
						"description": "Filter by UPC.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/creators/{creatorId}/events": {
			"": {
				"summary": "Fetches lists of events filtered by a creator id.",
				"description": "Fetches lists of events featuring the work of a specific creator with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorEventsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creatorId",
						"in": "path",
						"description": "The creator ID.",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only events which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Filter the event list by name.",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return events with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/creators/{creatorId}/series": {
			"": {
				"summary": "Fetches lists of series filtered by a creator id.",
				"description": "Fetches lists of comic series in which a specific creator's work appears, with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorSeriesCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "contains",
						"in": "query",
						"description": "Return only series containing one or more comics with the specified format.",
						"type": "string"
					},
					{
						"name": "creatorId",
						"in": "path",
						"description": "The creator ID.",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only series which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesType",
						"in": "query",
						"description": "Filter the series by publication frequency type.",
						"type": "string"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only series matching the specified start year.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Filter by series title.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return series with titles that begin with the specified string (e.g. Sp).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/creators/{creatorId}/stories": {
			"": {
				"summary": "Fetches lists of stories filtered by a creator id.",
				"description": "Fetches lists of comic stories by a specific creator with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorStoryCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only stories contained in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creatorId",
						"in": "path",
						"description": "The ID of the creator.",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only stories which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only stories contained the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/events": {
			"": {
				"summary": "Fetches lists of events.",
				"description": "Fetches lists of events with optional filters. See notes on individual parameters below.",
				"operationId": "getEventsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only events which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Return only events which match the specified name.",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return events with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only events which take place in the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/events/{eventId}": {
			"": {
				"summary": "Fetches a single event by id.",
				"description": "This method fetches a single event resource.  It is the canonical URI for any event resource provided by the API.",
				"operationId": "getEventIndividual",
				"parameters": [
					{
						"name": "eventId",
						"in": "path",
						"description": "A single event.",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/events/{eventId}/characters": {
			"": {
				"summary": "Fetches lists of characters filtered by an event id.",
				"description": "Fetches lists of characters which appear in a specific event, with optional filters. See notes on individual parameters below.",
				"operationId": "getEventCharacterCollection",
				"parameters": [
					{
						"name": "comics",
						"in": "query",
						"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "eventId",
						"in": "path",
						"description": "The event ID",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only characters which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return characters with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/events/{eventId}/comics": {
			"": {
				"summary": "Fetches lists of comics filtered by an event id.",
				"description": "Fetches lists of comics which take place during a specific event, with optional filters. See notes on individual parameters below.",
				"operationId": "getComicsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "collaborators",
						"in": "query",
						"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "dateDescriptor",
						"in": "query",
						"description": "Return comics within a predefined date range.",
						"type": "string"
					},
					{
						"name": "dateRange",
						"in": "query",
						"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
						"type": "int"
					},
					{
						"name": "diamondCode",
						"in": "query",
						"description": "Filter by diamond code.",
						"type": "string"
					},
					{
						"name": "digitalId",
						"in": "query",
						"description": "Filter by digital comic id.",
						"type": "int"
					},
					{
						"name": "ean",
						"in": "query",
						"description": "Filter by EAN.",
						"type": "string"
					},
					{
						"name": "eventId",
						"in": "path",
						"description": "The event id.",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "format",
						"in": "query",
						"description": "Filter by the issue format (e.g. comic, digital comic, hardcover).",
						"type": "string"
					},
					{
						"name": "formatType",
						"in": "query",
						"description": "Filter by the issue format type (comic or collection).",
						"type": "string"
					},
					{
						"name": "hasDigitalIssue",
						"in": "query",
						"description": "Include only results which are available digitally.",
						"type": "boolean"
					},
					{
						"name": "isbn",
						"in": "query",
						"description": "Filter by ISBN.",
						"type": "string"
					},
					{
						"name": "issn",
						"in": "query",
						"description": "Filter by ISSN.",
						"type": "string"
					},
					{
						"name": "issueNumber",
						"in": "query",
						"description": "Return only issues in series whose issue number matches the input.",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only comics which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "noVariants",
						"in": "query",
						"description": "Exclude variant comics from the result set.",
						"type": "boolean"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "sharedAppearances",
						"in": "query",
						"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
						"type": "int"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only issues in series whose start year matches the input.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Return only issues in series whose title matches the input.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return only issues in series whose title starts with the input.",
						"type": "string"
					},
					{
						"name": "upc",
						"in": "query",
						"description": "Filter by UPC.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/events/{eventId}/creators": {
			"": {
				"summary": "Fetches lists of creators filtered by an event id.",
				"description": "Fetches lists of comic creators whose work appears in a specific event, with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorCollection",
				"parameters": [
					{
						"name": "comics",
						"in": "query",
						"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "eventId",
						"in": "path",
						"description": "The event ID.",
						"type": "int"
					},
					{
						"name": "firstName",
						"in": "query",
						"description": "Filter by creator first name (e.g. brian).",
						"type": "string"
					},
					{
						"name": "firstNameStartsWith",
						"in": "query",
						"description": "Filter by creator first names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "lastName",
						"in": "query",
						"description": "Filter by creator last name (e.g. Bendis).",
						"type": "string"
					},
					{
						"name": "lastNameStartsWith",
						"in": "query",
						"description": "Filter by creator last names that match critera (e.g. Ben).",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "middleName",
						"in": "query",
						"description": "Filter by creator middle name (e.g. Michael).",
						"type": "string"
					},
					{
						"name": "middleNameStartsWith",
						"in": "query",
						"description": "Filter by creator middle names that match critera (e.g. Mi).",
						"type": "string"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only creators which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Filter by creator names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "suffix",
						"in": "query",
						"description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/events/{eventId}/series": {
			"": {
				"summary": "Fetches lists of series filtered by an event id.",
				"description": "Fetches lists of comic series in which a specific event takes place, with optional filters. See notes on individual parameters below.",
				"operationId": "getEventSeriesCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "contains",
						"in": "query",
						"description": "Return only series containing one or more comics with the specified format.",
						"type": "string"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "eventId",
						"in": "path",
						"description": "The event ID.",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only series which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesType",
						"in": "query",
						"description": "Filter the series by publication frequency type.",
						"type": "string"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only series matching the specified start year.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Filter by series title.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return series with titles that begin with the specified string (e.g. Sp).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/events/{eventId}/stories": {
			"": {
				"summary": "Fetches lists of stories filtered by an event id.",
				"description": "Fetches lists of comic stories from a specific event, with optional filters. See notes on individual parameters below.",
				"operationId": "getEventStoryCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only stories contained in the specified (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "eventId",
						"in": "path",
						"description": "The ID of the event.",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only stories which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only stories contained the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/series": {
			"": {
				"summary": "Fetches lists of series.",
				"description": "Fetches lists of comic series with optional filters. See notes on individual parameters below.",
				"operationId": "getSeriesCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "contains",
						"in": "query",
						"description": "Return only series containing one or more comics with the specified format.",
						"type": "string"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only series which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesType",
						"in": "query",
						"description": "Filter the series by publication frequency type.",
						"type": "string"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only series matching the specified start year.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only series which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Return only series matching the specified title.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return series with titles that begin with the specified string (e.g. Sp).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/series/{seriesId}": {
			"": {
				"summary": "Fetches a single comic series by id.",
				"description": "This method fetches a single comic series resource.  It is the canonical URI for any comic series resource provided by the API.",
				"operationId": "getSeriesIndividual",
				"parameters": [
					{
						"name": "seriesId",
						"in": "path",
						"description": "Filter by series title.",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/series/{seriesId}/characters": {
			"": {
				"summary": "Fetches lists of characters filtered by a series id.",
				"description": "Fetches lists of characters which appear in specific series, with optional filters. See notes on individual parameters below.",
				"operationId": "getSeriesCharacterWrapper",
				"parameters": [
					{
						"name": "comics",
						"in": "query",
						"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only characters which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return characters with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesId",
						"in": "path",
						"description": "The series id.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only characters which appear the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/series/{seriesId}/comics": {
			"": {
				"summary": "Fetches lists of comics filtered by a series id.",
				"description": "Fetches lists of comics which are published as part of a specific series, with optional filters. See notes on individual parameters below.",
				"operationId": "getComicsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "collaborators",
						"in": "query",
						"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "dateDescriptor",
						"in": "query",
						"description": "Return comics within a predefined date range.",
						"type": "string"
					},
					{
						"name": "dateRange",
						"in": "query",
						"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
						"type": "int"
					},
					{
						"name": "diamondCode",
						"in": "query",
						"description": "Filter by diamond code.",
						"type": "string"
					},
					{
						"name": "digitalId",
						"in": "query",
						"description": "Filter by digital comic id.",
						"type": "int"
					},
					{
						"name": "ean",
						"in": "query",
						"description": "Filter by EAN.",
						"type": "string"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "format",
						"in": "query",
						"description": "Filter by the issue format (e.g. comic, digital comic, hardcover).",
						"type": "string"
					},
					{
						"name": "formatType",
						"in": "query",
						"description": "Filter by the issue format type (comic or collection).",
						"type": "string"
					},
					{
						"name": "hasDigitalIssue",
						"in": "query",
						"description": "Include only results which are available digitally.",
						"type": "boolean"
					},
					{
						"name": "isbn",
						"in": "query",
						"description": "Filter by ISBN.",
						"type": "string"
					},
					{
						"name": "issn",
						"in": "query",
						"description": "Filter by ISSN.",
						"type": "string"
					},
					{
						"name": "issueNumber",
						"in": "query",
						"description": "Return only issues in series whose issue number matches the input.",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only comics which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "noVariants",
						"in": "query",
						"description": "Exclude variant comics from the result set.",
						"type": "boolean"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesId",
						"in": "path",
						"description": "The series ID.",
						"type": "int"
					},
					{
						"name": "sharedAppearances",
						"in": "query",
						"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
						"type": "int"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only issues in series whose start year matches the input.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only comics which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Return only issues in series whose title matches the input.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return only issues in series whose title starts with the input.",
						"type": "string"
					},
					{
						"name": "upc",
						"in": "query",
						"description": "Filter by UPC.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/series/{seriesId}/creators": {
			"": {
				"summary": "Fetches lists of creators filtered by a series id.",
				"description": "Fetches lists of comic creators whose work appears in a specific series, with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorCollection",
				"parameters": [
					{
						"name": "comics",
						"in": "query",
						"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "firstName",
						"in": "query",
						"description": "Filter by creator first name (e.g. brian).",
						"type": "string"
					},
					{
						"name": "firstNameStartsWith",
						"in": "query",
						"description": "Filter by creator first names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "lastName",
						"in": "query",
						"description": "Filter by creator last name (e.g. Bendis).",
						"type": "string"
					},
					{
						"name": "lastNameStartsWith",
						"in": "query",
						"description": "Filter by creator last names that match critera (e.g. Ben).",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "middleName",
						"in": "query",
						"description": "Filter by creator middle name (e.g. Michael).",
						"type": "string"
					},
					{
						"name": "middleNameStartsWith",
						"in": "query",
						"description": "Filter by creator middle names that match critera (e.g. Mi).",
						"type": "string"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only creators which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Filter by creator names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesId",
						"in": "path",
						"description": "The series ID.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only creators who worked on the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "suffix",
						"in": "query",
						"description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/series/{seriesId}/events": {
			"": {
				"summary": "Fetches lists of events filtered by a series id.",
				"description": "Fetches lists of events which occur in a specific series, with optional filters. See notes on individual parameters below.",
				"operationId": "getEventsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only events which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Filter the event list by name.",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return events with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesId",
						"in": "path",
						"description": "The series ID.",
						"type": "int"
					},
					{
						"name": "stories",
						"in": "query",
						"description": "Return only events which contain the specified stories (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/series/{seriesId}/stories": {
			"": {
				"summary": "Fetches lists of stories filtered by a series id.",
				"description": "Fetches lists of comic stories from a specific series with optional filters. See notes on individual parameters below.",
				"operationId": "getSeriesStoryCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only stories contained in the specified (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only stories which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesId",
						"in": "path",
						"description": "The series ID.",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/stories": {
			"": {
				"summary": "Fetches lists of stories.",
				"description": "Fetches lists of comic stories with optional filters. See notes on individual parameters below.",
				"operationId": "getStoryCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only stories which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only stories contained in the specified (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only stories which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only stories which take place during the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only stories which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only stories contained the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/stories/{storyId}": {
			"": {
				"summary": "Fetches a single comic story by id.",
				"description": "This method fetches a single comic story resource.  It is the canonical URI for any comic story resource provided by the API.",
				"operationId": "getStoryIndividual",
				"parameters": [
					{
						"name": "storyId",
						"in": "path",
						"description": "Filter by story id.",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/stories/{storyId}/characters": {
			"": {
				"summary": "Fetches lists of characters filtered by a story id.",
				"description": "Fetches lists of comic characters appearing in a single story, with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorCollection",
				"parameters": [
					{
						"name": "comics",
						"in": "query",
						"description": "Return only characters which appear in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only characters which appear comics that took place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only characters which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Return only characters matching the specified full character name (e.g. Spider-Man).",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return characters with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only characters which appear the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "storyId",
						"in": "path",
						"description": "The story ID.",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/stories/{storyId}/comics": {
			"": {
				"summary": "Fetches lists of comics filtered by a story id.",
				"description": "Fetches lists of comics in which a specific story appears, with optional filters. See notes on individual parameters below.",
				"operationId": "getComicsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only comics which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "collaborators",
						"in": "query",
						"description": "Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "dateDescriptor",
						"in": "query",
						"description": "Return comics within a predefined date range.",
						"type": "string"
					},
					{
						"name": "dateRange",
						"in": "query",
						"description": "Return comics within a predefined date range.  Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02).  Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.",
						"type": "int"
					},
					{
						"name": "diamondCode",
						"in": "query",
						"description": "Filter by diamond code.",
						"type": "string"
					},
					{
						"name": "digitalId",
						"in": "query",
						"description": "Filter by digital comic id.",
						"type": "int"
					},
					{
						"name": "ean",
						"in": "query",
						"description": "Filter by EAN.",
						"type": "string"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only comics which take place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "format",
						"in": "query",
						"description": "Filter by the issue format (e.g. comic, digital comic, hardcover).",
						"type": "string"
					},
					{
						"name": "formatType",
						"in": "query",
						"description": "Filter by the issue format type (comic or collection).",
						"type": "string"
					},
					{
						"name": "hasDigitalIssue",
						"in": "query",
						"description": "Include only results which are available digitally.",
						"type": "boolean"
					},
					{
						"name": "isbn",
						"in": "query",
						"description": "Filter by ISBN.",
						"type": "string"
					},
					{
						"name": "issn",
						"in": "query",
						"description": "Filter by ISSN.",
						"type": "string"
					},
					{
						"name": "issueNumber",
						"in": "query",
						"description": "Return only issues in series whose issue number matches the input.",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only comics which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "noVariants",
						"in": "query",
						"description": "Exclude variant comics from the result set.",
						"type": "boolean"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only comics which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "sharedAppearances",
						"in": "query",
						"description": "Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear).",
						"type": "int"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only issues in series whose start year matches the input.",
						"type": "int"
					},
					{
						"name": "storyId",
						"in": "path",
						"description": "The story ID.",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Return only issues in series whose title matches the input.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return only issues in series whose title starts with the input.",
						"type": "string"
					},
					{
						"name": "upc",
						"in": "query",
						"description": "Filter by UPC.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/stories/{storyId}/creators": {
			"": {
				"summary": "Fetches lists of creators filtered by a story id.",
				"description": "Fetches lists of comic creators whose work appears in a specific story, with optional filters. See notes on individual parameters below.",
				"operationId": "getCreatorCollection",
				"parameters": [
					{
						"name": "comics",
						"in": "query",
						"description": "Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "firstName",
						"in": "query",
						"description": "Filter by creator first name (e.g. brian).",
						"type": "string"
					},
					{
						"name": "firstNameStartsWith",
						"in": "query",
						"description": "Filter by creator first names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "lastName",
						"in": "query",
						"description": "Filter by creator last name (e.g. Bendis).",
						"type": "string"
					},
					{
						"name": "lastNameStartsWith",
						"in": "query",
						"description": "Filter by creator last names that match critera (e.g. Ben).",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "middleName",
						"in": "query",
						"description": "Filter by creator middle name (e.g. Michael).",
						"type": "string"
					},
					{
						"name": "middleNameStartsWith",
						"in": "query",
						"description": "Filter by creator middle names that match critera (e.g. Mi).",
						"type": "string"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only creators which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Filter by creator names that match critera (e.g. B, St L).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only creators who worked on the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "storyId",
						"in": "path",
						"description": "The story ID.",
						"type": "int"
					},
					{
						"name": "suffix",
						"in": "query",
						"description": "Filter by suffix or honorific (e.g. Jr., Sr.).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/stories/{storyId}/events": {
			"": {
				"summary": "Fetches lists of events filtered by a story id.",
				"description": "Fetches lists of events in which a specific story appears, with optional filters. See notes on individual parameters below.",
				"operationId": "getEventsCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only events which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only events which take place in the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only events which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only events which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Filter the event list by name.",
						"type": "string"
					},
					{
						"name": "nameStartsWith",
						"in": "query",
						"description": "Return events with names that begin with the specified string (e.g. Sp).",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "series",
						"in": "query",
						"description": "Return only events which are part of the specified series (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "storyId",
						"in": "path",
						"description": "The story ID.",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/v1/public/stories/{storyId}/series": {
			"": {
				"summary": "Fetches lists of series filtered by a story id.",
				"description": "Fetches lists of comic series in which the specified story takes place. See notes on individual parameters below.",
				"operationId": "getStorySeriesCollection",
				"parameters": [
					{
						"name": "characters",
						"in": "query",
						"description": "Return only series which feature the specified characters (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "comics",
						"in": "query",
						"description": "Return only series which contain the specified comics (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "contains",
						"in": "query",
						"description": "Return only series containing one or more comics with the specified format.",
						"type": "string"
					},
					{
						"name": "creators",
						"in": "query",
						"description": "Return only series which feature work by the specified creators (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "events",
						"in": "query",
						"description": "Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).",
						"type": "int"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit the result set to the specified number of resources.",
						"type": "int"
					},
					{
						"name": "modifiedSince",
						"in": "query",
						"description": "Return only series which have been modified since the specified date.",
						"type": "date"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Skip the specified number of resources in the result set.",
						"type": "int"
					},
					{
						"name": "orderBy",
						"in": "query",
						"description": "Order the result set by a field or fields. Add a - to the value sort in descending order. Multiple values are given priority in the order in which they are passed.",
						"type": "string"
					},
					{
						"name": "seriesType",
						"in": "query",
						"description": "Filter the series by publication frequency type.",
						"type": "string"
					},
					{
						"name": "startYear",
						"in": "query",
						"description": "Return only series matching the specified start year.",
						"type": "int"
					},
					{
						"name": "storyId",
						"in": "path",
						"description": "The story ID.",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Filter by series title.",
						"type": "string"
					},
					{
						"name": "titleStartsWith",
						"in": "query",
						"description": "Return series with titles that begin with the specified string (e.g. Sp).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	},
	"definitions": {
	}
}