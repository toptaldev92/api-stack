{
	"swagger": "2.0",
	"info": {
		"title": "MailChimp",
		"description": "The MailChimp API is a way for you to "sync" your customer database, CRM, CMS, or e-commerce shopping cart with MailChimp. It's really powerful stuff.",
		"termsOfService": "http://mailchimp.com/legal/terms",
		"version": "2"
	},
	"host": "{dc}.api.mailchimp.com",
	"basePath": "/2.0",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/": {
			"get": {
				"summary": "",
				"description": "",
				"operationId": "",
				"parameters": [
					{
						"name": "actions",
						"in": "query",
						"description": "A hash of actions to fire this Webhook. See options: http://apidocs.mailchimp.com/api/1.3/listwebhookadd.func.php",
						"type": "string"
					},
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "batch",
						"in": "query",
						"description": "An array of structs for each address to import with two special keys: EMAIL for the email address, and EMAIL_TYPE for the email type option (html, text, or mobile).",
						"type": "string"
					},
					{
						"name": "category",
						"in": "query",
						"description": "For Gallery templates only, limit to a specific template category.",
						"type": "string"
					},
					{
						"name": "cid",
						"in": "query",
						"description": "The campaign id to get content for (can be gathered using campaigns()).",
						"type": "string"
					},
					{
						"name": "code",
						"in": "query",
						"description": "An ISO3166 2 digit country code.",
						"type": "string"
					},
					{
						"name": "content",
						"in": "query",
						"description": "The content for this campaign. See options: http://apidocs.mailchimp.com/api/1.3/campaigncreate.func.php",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "delete_member",
						"in": "query",
						"description": "Flag to completely delete the member from your list instead of just unsubscribing.",
						"type": "boolean"
					},
					{
						"name": "double_optin",
						"in": "query",
						"description": "Flag to control whether to send an opt-in confirmation email.",
						"type": "boolean"
					},
					{
						"name": "email",
						"in": "query",
						"description": "The email address or unique id of the member to pull a bounce message.",
						"type": "string"
					},
					{
						"name": "emails",
						"in": "query",
						"description": "Array of email addresses to unsubscribe.",
						"type": "string"
					},
					{
						"name": "email_address",
						"in": "query",
						"description": "An array of up to 50 email addresses to check OR the email id returned from listMemberInfo, Webhooks, and Campaigns. For backwards compatibility, if a string is passed, it will be treated as an array with a single element (will not work with XML-RPC).",
						"type": "string"
					},
					{
						"name": "email_type",
						"in": "query",
						"description": "Email type preference for the email.",
						"type": "string"
					},
					{
						"name": "expired",
						"in": "query",
						"description": "Whether or not to include expired keys.",
						"type": "boolean"
					},
					{
						"name": "fid",
						"in": "query",
						"description": "The folder id to update.",
						"type": "integer"
					},
					{
						"name": "filters",
						"in": "query",
						"description": "A hash of filters to apply to this query. See options: http://apidocs.mailchimp.com/api/1.3/campaigns.func.php",
						"type": "string"
					},
					{
						"name": "for_archive",
						"in": "query",
						"description": "Controls whether we return the Archive version (true) or the Raw version (false), defaults to true.",
						"type": "boolean"
					},
					{
						"name": "grouping_id",
						"in": "query",
						"description": "The grouping to add the new group to - get using listInterestGrouping(). If not supplied, the first grouping on the list is used.",
						"type": "integer"
					},
					{
						"name": "groups",
						"in": "query",
						"description": "The lists of initial group names to be added - at least 1 is required and the names must be unique within a grouping. If the number takes you over the 60 group limit, an error will be thrown.",
						"type": "integer"
					},
					{
						"name": "group_name",
						"in": "query",
						"description": "The interest group to add - group names must be unique within a grouping.",
						"type": "string"
					},
					{
						"name": "html",
						"in": "query",
						"description": "Your HTML content.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The list id to connect.",
						"type": "string"
					},
					{
						"name": "inactives",
						"in": "query",
						"description": "Options to control how inactive templates are returned, if at all. See options: http://apidocs.mailchimp.com/api/1.3/templates.func.php",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Control paging of campaigns, number of campaigns to return with each call, defaults to 25 (max=1000).",
						"type": "integer"
					},
					{
						"name": "list_id",
						"in": "query",
						"description": "The list to test segmentation on.",
						"type": "string"
					},
					{
						"name": "merge_vars",
						"in": "query",
						"description": "Merges for the email (FNAME, LNAME, etc.). See options: http://apidocs.mailchimp.com/api/1.3/listsubscribe.func.php",
						"type": "string"
					},
					{
						"name": "method",
						"in": "query",
						"description": "Is the method name from our API you are calling.",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "For items in the options array, this will be that parameters name (subject, from_email, etc.). Additional parameters will be that option name (content, segment_opts). type_opts will be the name of the type - rss, auto, trans, etc.",
						"type": "string"
					},
					{
						"name": "new_name",
						"in": "query",
						"description": "The new interest group name to be set.",
						"type": "string"
					},
					{
						"name": "old_name",
						"in": "query",
						"description": "The interest group name to be changed.",
						"type": "string"
					},
					{
						"name": "optional",
						"in": "query",
						"description": "The grouping to delete the group from. If not supplied, the first grouping on the list is used.",
						"type": "integer"
					},
					{
						"name": "options",
						"in": "query",
						"description": "A hash of the standard options for this campaign. See options: http://apidocs.mailchimp.com/api/1.3/campaigncreate.func.php",
						"type": "string"
					},
					{
						"name": "opts",
						"in": "query",
						"description": "Various parameters which can be used to configure the shared report. See options: http://apidocs.mailchimp.com/api/1.3/campaignsharereport.func.php",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "An array of information pertaining to the order that has completed. See options: http://apidocs.mailchimp.com/api/1.3/campaignecommorderadd.func.php",
						"type": "string"
					},
					{
						"name": "order_id",
						"in": "query",
						"description": "The order id (generated by the store) to delete.",
						"type": "string"
					},
					{
						"name": "output",
						"in": "query",
						"description": "Output Formats for Serialized calls.",
						"type": "string"
					},
					{
						"name": "password",
						"in": "query",
						"description": "Your MailChimp password.",
						"type": "string"
					},
					{
						"name": "replace_interests",
						"in": "query",
						"description": "Flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the members interest groups.",
						"type": "boolean"
					},
					{
						"name": "schedule_time",
						"in": "query",
						"description": "The time to schedule the campaign. For A/B Split schedule campaigns, the time for Group A - in YYYY-MM-DD HH:II:SS format in GMT.",
						"type": "string"
					},
					{
						"name": "schedule_time_b",
						"in": "query",
						"description": "The time to schedule Group B of an A/B Split schedule campaign - in YYYY-MM-DD HH:II:SS format in GMT.",
						"type": "string"
					},
					{
						"name": "segment_opts",
						"in": "query",
						"description": "If you wish to do Segmentation with this campaign this array should contain: see campaignSegmentTest(). Its suggested that you test your options against campaignSegmentTest(). Also, trans campaigns do not support segmentation.",
						"type": "string"
					},
					{
						"name": "seg_id",
						"in": "query",
						"description": "The id of the static segment to delete.",
						"type": "string"
					},
					{
						"name": "send_goodbye",
						"in": "query",
						"description": "Flag to send the goodbye email to the email addresses.",
						"type": "boolean"
					},
					{
						"name": "send_notify",
						"in": "query",
						"description": "Flag to send the unsubscribe notification email to the address defined in the list email notification settings.",
						"type": "boolean"
					},
					{
						"name": "send_type",
						"in": "query",
						"description": "By default (null) both formats are sent - html or text send just that format.",
						"type": "string"
					},
					{
						"name": "send_welcome",
						"in": "query",
						"description": "If your double_optin is false and this is true, we will send your lists Welcome Email if this subscribe succeeds - this will *not* fire if we end up updating an existing subscriber. If double_optin is true, this has no effect.",
						"type": "boolean"
					},
					{
						"name": "since",
						"in": "query",
						"description": "Pull only messages since this time - use YYYY-MM-DD HH:II:SS format in GMT.",
						"type": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "A hash of sources to fire this Webhook. See options: http://apidocs.mailchimp.com/api/1.3/listwebhookadd.func.php",
						"type": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "Control paging of campaigns, start results at this campaign #, defaults to 1st page of data (page 0).",
						"type": "integer"
					},
					{
						"name": "status",
						"in": "query",
						"description": "The status to pull. By default, all records are returned",
						"type": "string"
					},
					{
						"name": "store_id",
						"in": "query",
						"description": "The store id the order belongs.",
						"type": "string"
					},
					{
						"name": "strip_css",
						"in": "query",
						"description": "Whether you want the CSS style tags stripped from the returned document.",
						"type": "boolean"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "The merge tag to add, e.g. FNAME. 10 bytes max, valid characters: A-Z 0-9 _ no spaces, dashes, etc.",
						"type": "string"
					},
					{
						"name": "test_emails",
						"in": "query",
						"description": "An array of email address to receive the test message.",
						"type": "string"
					},
					{
						"name": "tid",
						"in": "query",
						"description": "The template id.",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "The Campaign Type to create.",
						"type": "string"
					},
					{
						"name": "types",
						"in": "query",
						"description": "The types of templates to return. See options: http://apidocs.mailchimp.com/api/1.3/templates.func.php",
						"type": "string"
					},
					{
						"name": "type_opts",
						"in": "query",
						"description": "Array for RSS, A/B Split or AutoResponder campaigns. See options: http://apidocs.mailchimp.com/api/1.3/campaigncreate.func.php",
						"type": "string"
					},
					{
						"name": "update_existing",
						"in": "query",
						"description": "Flag to control whether to update members that are already subscribed to the list or to return an error.",
						"type": "boolean"
					},
					{
						"name": "url",
						"in": "query",
						"description": "The URL of the link that was clicked on.",
						"type": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your MailChimp user name.",
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "For items in the options array, this will be that parameters value. For additional parameters, this is the same value passed to them.",
						"type": "string"
					},
					{
						"name": "values",
						"in": "query",
						"description": "The values to updates. See options: http://apidocs.mailchimp.com/api/1.3/templateupdate.func.php",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/campaignSubscriberActivity/": {
			"get": {
				"summary": "Exports/Dumps Members Of A List",
				"description": "Exports/Dumps Members Of A List",
				"operationId": "exportsdumps-members-of-a-list",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The campaign id to retrieve stats.",
						"type": "string"
					},
					{
						"name": "include_empty",
						"in": "query",
						"description": "If set to true a record for every email address sent to will be returned even if there is no activity data.",
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/DeleteVerifiedEmailAddress.{output_format}/": {
			"get": {
				"summary": "Exports/Dumps All Subscriber Activity",
				"description": "Exports/Dumps All Subscriber Activity",
				"operationId": "exportsdumps-all-subscriber-activity",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "The campaign id to get content.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/GetBounces.{output_format}/": {
			"get": {
				"summary": "Verify Email Address",
				"description": "Verify Email Address",
				"operationId": "verify-email-address",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "since",
						"in": "query",
						"description": "If a time is provided, retrieve bounce messages since that time. Y-m-d H:i:s format.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/GetSendQuota.{output_format}/": {
			"get": {
				"summary": "Send Email",
				"description": "Send Email",
				"operationId": "send-email",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/GetSendStatistics.{output_format}/": {
			"get": {
				"summary": "Get Send Quota",
				"description": "Get Send Quota",
				"operationId": "get-send-quota",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/GetSendStats.{output_format}/": {
			"get": {
				"summary": "Get Bounces",
				"description": "Get Bounces",
				"operationId": "get-bounces",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "since",
						"in": "query",
						"description": "Limit data returned since this data/hour combo. This is a string comparison, not a date comparison, and we are not attempting to strictly validate this, so if you pass in something silly, expect silly results. It expects the same format as the returned data: YYYY-MM-DD HH.",
						"type": "string"
					},
					{
						"name": "tag_id",
						"in": "query",
						"description": "Whether to limit to a single tag.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/GetTags.{output_format}/": {
			"get": {
				"summary": "Get Send Stats",
				"description": "Get Send Stats",
				"operationId": "get-send-stats",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/GetUrls.{output_format}/": {
			"get": {
				"summary": "Get Url Stats",
				"description": "Get Url Stats",
				"operationId": "get-url-stats",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/GetUrlStats.{output_format}/": {
			"get": {
				"summary": "Get Tags",
				"description": "Get Tags",
				"operationId": "get-tags",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "since",
						"in": "query",
						"description": "Limit data returned since this data/hour combo. This is a string comparison, not a date comparison, and we are not attempting to strictly validate this, so if you pass in something silly, expect silly results.",
						"type": "string"
					},
					{
						"name": "url_id",
						"in": "query",
						"description": "Whether to limit to a single url.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/list/": {
			"get": {
				"summary": "List Templates",
				"description": "List Templates",
				"operationId": "list-templates",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The list id to get members.",
						"type": "string"
					},
					{
						"name": "segment",
						"in": "query",
						"description": "Pull only a certain Segment of your list.",
						"type": "string"
					},
					{
						"name": "since",
						"in": "query",
						"description": "Only return member whose data has changed since a GMT timestamp u2013 in YYYY-MM-DD HH:mm:ss format.",
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "The status to get members.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/ListVerifiedEmailAddresses.{output_format}/": {
			"get": {
				"summary": "Delete Verified Email Address",
				"description": "Delete Verified Email Address",
				"operationId": "delete-verified-email-address",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/SendEmail.{output_format}/": {
			"get": {
				"summary": "Get Urls",
				"description": "Get Urls",
				"operationId": "get-urls",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "The message data. See keys: http://apidocs.mailchimp.com/sts/1.0/sendemail.func.php",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "tags",
						"in": "query",
						"description": "An array of strings to tag the message with. Stats can be accumulated using tags, though we only store the first 100 we see, so this should not be unique or change frequently. Tags should be 50 characters or less - any starting with an underscore are reserved and will cause errors.",
						"type": "string"
					},
					{
						"name": "track_opens",
						"in": "query",
						"description": "Whether or not to turn on MailChimp-specific opens tracking.",
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/VerifyEmailAddress.{output_format}/": {
			"get": {
				"summary": "List Verified Email Addresses",
				"description": "List Verified Email Addresses",
				"operationId": "list-verified-email-addresses",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "A valid API Key for your user account.",
						"type": "string"
					},
					{
						"name": "dc",
						"in": "query",
						"description": "The portion after the dash in your API Key. e.g. us1, us2, uk1, etc.",
						"type": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "The email address to verify.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "query",
						"description": "The response data be encoded in the specified format.",
						"type": "string"
					},
					{
						"name": "output_format",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	}
}