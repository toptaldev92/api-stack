{
	"swagger": "2.0",
	"info": {
		"title": "Dropbox for Business API",
		"description": "The business version of the Dropbox API.",
		"version": "1"
	},
	"host": "api.dropbox.com",
	"basePath": "/1/team",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/get_info": {
			"post": {
				"summary": "Get Info",
				"description": "/get_info",
				"operationId": "get-info",
				"responses": {
					"400: for badly-formed requests, e.g. missing or invalid parameters": {
						"description": ""
					},
					"403: for authentication issues": {
						"description": ""
					},
					"409: for issues where the request is well-formed but cannot be completed": {
						"description": ""
					}
				},
				"tags": ["info"],
				"security": []
			}
		},
		"/log/get_events": {
			"post": {
				"summary": "Get Events",
				"description": "Accesses the Dropbox for Business audit log for a team.",
				"operationId": "",
				"parameters": [{
					"in": "query",
					"name": "category",
					"description": "optional filter the returned events to a single category (see Event types below)",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "cursor",
					"description": "optional encoded value indicating from what point to get the next limit logs",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "end_ts",
					"description": "optional end time (UTC timestamp in milliseconds since the Unix epoch)",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "limit",
					"description": "optional number of results to return per call (default 1000, maximum 1000)",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "start_ts",
					"description": "optional start time (UTC timestamp in milliseconds since the Unix epoch)",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "user",
					"description": "optional member ID, user ID, or email of a user for filtering events",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"400: for badly-formed requests, e.g. missing or invalid parameters": {
						"description": ""
					},
					"403: for authentication issues": {
						"description": ""
					},
					"409: for issues where the request is well-formed but cannot be completed": {
						"description": ""
					},
					"200": {
						"description": "OK"
					}
				},
				"tags": ["logs"],
				"security": []
			}
		},
		"/members/add": {
			"post": {
				"summary": "Add Member",
				"description": "/members/add",
				"operationId": "membersadd",
				"parameters": [{
					"in": "query",
					"name": "member_email",
					"description": "member email",
					"type": "string"
				},
				{
					"in": "query",
					"name": "member_external_id",
					"description": "optional external ID for member",
					"type": "string"
				},
				{
					"in": "query",
					"name": "member_given_name",
					"description": "member first name",
					"type": "string"
				},
				{
					"in": "query",
					"name": "member_surname",
					"description": "member last name",
					"type": "string"
				},
				{
					"in": "query",
					"name": "send_welcome_email",
					"description": "optional boolean to send a welcome email to the member. Default is true.",
					"type": "string"
				}],
				"responses": {
					"400: for badly-formed requests, e.g. missing or invalid parameters": {
						"description": ""
					},
					"403: for authentication issues": {
						"description": ""
					},
					"409: for issues where the request is well-formed but cannot be completed": {
						"description": ""
					}
				},
				"tags": ["members"],
				"security": []
			}
		},
		"/members/get_info": {
			"post": {
				"summary": "Get Member Info",
				"description": "/members/get_info",
				"operationId": "membersget-info",
				"parameters": [{
					"in": "query",
					"name": "email",
					"description": "optional email of member",
					"type": "string"
				},
				{
					"in": "query",
					"name": "external_id",
					"description": "optional external ID of member",
					"type": "string"
				},
				{
					"in": "query",
					"name": "member_id",
					"description": "optional ID of member",
					"type": "string"
				}],
				"responses": {
					"400: for badly-formed requests, e.g. missing or invalid parameters": {
						"description": ""
					},
					"403: for authentication issues": {
						"description": ""
					},
					"409: for issues where the request is well-formed but cannot be completed": {
						"description": ""
					}
				},
				"tags": ["members"],
				"security": []
			}
		},
		"/members/get_info_batch": {
			"post": {
				"summary": "Get Info Batch",
				"description": "Retrieves information about multiple team members.",
				"operationId": "",
				"parameters": [{
					"in": "query",
					"name": "emails",
					"description": "optional list of member emails",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "external_ids",
					"description": "optional list of external member IDs",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "member_ids",
					"description": "optional list of member IDs",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"400: for badly-formed requests, e.g. missing or invalid parameters": {
						"description": ""
					},
					"403: for authentication issues": {
						"description": ""
					},
					"409: for issues where the request is well-formed but cannot be completed": {
						"description": ""
					},
					"200": {
						"description": "OK"
					}
				},
				"tags": ["members"],
				"security": []
			}
		},
		"/members/list": {
			"post": {
				"summary": "List Members",
				"description": "Lists members of a team.",
				"operationId": "",
				"parameters": [{
					"in": "query",
					"name": "cursor",
					"description": "optional encoded value indicating from what point to get the next limit members",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "limit",
					"description": "optional number of results to return per call (default 1000, maximum 1000)",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["members"],
				"security": []
			}
		},
		"/members/remove": {
			"post": {
				"summary": "Remove",
				"description": "Removes a member from a team.",
				"operationId": "",
				"parameters": [{
					"in": "query",
					"name": "delete_data",
					"description": "optional controls if the users data will be deleted on their linked devices. Default is true.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "external_id",
					"description": "optional external ID. Must specify either a member_id or external_id.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "member_id",
					"description": "optional member ID. Must specify either a member_id or external_id.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "transfer_admin_member_id",
					"description": "optional errors during the transfer process will be sent via email to the transfer_admin_member_id.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "transfer_dest_member_id",
					"description": "optional files from the deleted member account will be transferred to this member.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["members"],
				"security": []
			}
		},
		"/members/set_permissions": {
			"post": {
				"summary": "Set Member Permissions",
				"description": "/members/set_permissions",
				"operationId": "membersset-permissions",
				"parameters": [{
					"in": "query",
					"name": "external_id",
					"description": "optional external ID. Must specify either a member_id or external_id.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "member_id",
					"description": "optional member ID. Must specify either a member_id or external_id.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "new_is_admin",
					"description": "optional change the admin status of the member.",
					"type": "string"
				}],
				"responses": {
					"400: for badly-formed requests, e.g. missing or invalid parameters": {
						"description": ""
					},
					"403: for authentication issues": {
						"description": ""
					},
					"409: for issues where the request is well-formed but cannot be completed": {
						"description": ""
					}
				},
				"tags": ["members"],
				"security": []
			}
		},
		"/members/set_profile": {
			"get": {
				"summary": "Set Profile",
				"description": "Updates a team members profile.",
				"operationId": "",
				"parameters": [{
					"in": "query",
					"name": "external_id",
					"description": "optional external ID. Must specify either a member_id or external_id.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "member_id",
					"description": "optional member ID. Must specify either a member_id or external_id.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "new_email",
					"description": "optional new email for member.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "new_external_id",
					"description": "optional new external ID for member",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "new_given_name",
					"description": "optional new given name for member.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "new_surname",
					"description": "optional new surname for member.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"400: for badly-formed requests, e.g. missing or invalid parameters": {
						"description": ""
					},
					"403: for authentication issues": {
						"description": ""
					},
					"409: for issues where the request is well-formed but cannot be completed": {
						"description": ""
					},
					"200": {
						"description": "OK"
					}
				},
				"tags": ["members"],
				"security": []
			}
		},
		"/reports/get_activity": {
			"post": {
				"summary": "Get Activity",
				"description": "Retrieves reporting data about a teams user activity.",
				"operationId": "",
				"parameters": [{
					"in": "query",
					"name": "end_date",
					"description": "optional ending date (exclusive)",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "start_date",
					"description": "optional starting date (inclusive)",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["reports"],
				"security": []
			}
		},
		"/reports/get_devices": {
			"post": {
				"summary": "Get Devices",
				"description": "Retrieves reporting data about a teams linked devices.",
				"operationId": "",
				"parameters": [{
					"in": "query",
					"name": "end_date",
					"description": "optional ending date (exclusive)",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "start_date",
					"description": "optional starting date (inclusive)",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["reports"],
				"security": []
			}
		},
		"/reports/get_membership": {
			"post": {
				"summary": "Get Membership",
				"description": "/reports/get_membership",
				"operationId": "reportsget-membership",
				"parameters": [{
					"in": "query",
					"name": "end_date",
					"description": "optional ending date (exclusive)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "start_date",
					"description": "optional starting date (inclusive)",
					"type": "string"
				}],
				"responses": {
					"400: for badly-formed requests, e.g. missing or invalid parameters": {
						"description": ""
					},
					"403: for authentication issues": {
						"description": ""
					},
					"409: for issues where the request is well-formed but cannot be completed": {
						"description": ""
					}
				},
				"tags": ["reports"],
				"security": []
			}
		},
		"/reports/get_storage": {
			"post": {
				"summary": "Get Storage",
				"description": "/reports/get_storage",
				"operationId": "reportsget-storage",
				"parameters": [{
					"in": "query",
					"name": "end_date",
					"description": "optional ending date (exclusive)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "start_date",
					"description": "optional starting date (inclusive)",
					"type": "string"
				}],
				"responses": {
					"400: for badly-formed requests, e.g. missing or invalid parameters": {
						"description": ""
					},
					"403: for authentication issues": {
						"description": ""
					},
					"409: for issues where the request is well-formed but cannot be completed": {
						"description": ""
					}
				},
				"tags": ["reports"],
				"security": []
			}
		}
	},
	"definitions": []
}