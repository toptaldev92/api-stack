{
	"swagger": "2.0",
	"info": {
		"title": "Semantria",
		"description": "Semantria uses text and sentiment analysis tools to analyze tweets, Facebook posts, surveys, reviews, or enterprise content. Semantria has features like queries and categories to help you sift through large amounts of data to find what you need. ",
		"termsOfService": null,
		"version": "1"
	},
	"host": "api35.semantria.com",
	"basePath": "/",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/blacklist.{content_type}": {
			"post": {
				"summary": "Add items to blacklist",
				"description": "This method adds new unique items to the backlist on Semantria side.",
				"operationId": "updateBlacklist",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "Blacklisted items",
						"in": "body",
						"description": "List of parametrized JSON or XML objects.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration blacklist linked to.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/categories.{content_type}": {
			"post": {
				"summary": "Add or update user categories",
				"description": "This method adds or updates user categories by unique names on Semantria side.",
				"operationId": "updateCategories",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "Categories",
						"in": "body",
						"description": "List of parametrized JSON or XML objects.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration user categories linked to.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/collection.{content_type}": {
			"post": {
				"summary": "Queue collection for analysis",
				"description": "This method queues collection of documents onto the server for analysis. Queued collection of documents analyzes in common context as entire thing. If unique configuration ID provided, Semantria uses settings of that configuration during analysis, in opposite the primary configuration uses. Collection IDs are unique in scope of configuration. If the same ID appears twice, Semantria overrides existing collection with the new Data",
				"operationId": "queueCollection",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "Collection",
						"in": "body",
						"description": "Parametrized JSON or XML object.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration used for analysis.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/collection/processed.{content_type}": {
			"get": {
				"summary": "Retrieve collections analysis",
				"description": "This method retrieves analysis results for processed collections from Semantria. FAILED collections will have FAILED status in response. Semantria responds with limited amount of results per API call. If configuration ID provided, Semantria responds with the collections, which were queued using the same configuration ID, in opposite Primary configuration uses.",
				"operationId": "retrieveProcessedCollections",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration used for analysis.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/collection/{collection_id}.{content_type}": {
			"get": {
				"summary": "Retrieve collection analysis or its status in queue",
				"description": "This method retrieves analysis results for documents collection by its unique ID or the collectionu2019s status in queue if it did not analyzed yet. Semantria guarantees delivering of all collections back to the client even if they FAILED on Semantria side due to some reason.",
				"operationId": "receiveCollectionAnalyticData",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "collection_id",
						"in": "path",
						"description": "Collection ID",
						"type": "string"
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration used for analysis.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/configurations.{content_type}": {
			"post": {
				"summary": "Create or update user configurations",
				"description": "This method creates or updates specific configurations on Semantria side. If unique ID of configuration provided, Semantria updates certain configuration is exists. If unique ID not passed, Semantria creates new configuration with provided settings.",
				"operationId": "updateConfigurations",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "Configurations",
						"in": "body",
						"description": "List of parametrized JSON or XML objects.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/document.{content_type}": {
			"post": {
				"summary": "Queue document for analysis",
				"description": "This method queues document onto the server for analysis. Queued document analyzes individually and will have its own set of results. If unique configuration ID provided, Semantria uses settings of that configuration during analysis, in opposite the primary configuration uses. Document IDs are unique in scope of configuration. If the same ID appears twice, Semantria overrides existing document with the new Data.",
				"operationId": "queueDocument",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration used for analysis.",
						"type": "string"
					},
					{
						"name": "Document",
						"in": "body",
						"description": "Parametrized JSON or XML object.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/document/batch.{content_type}": {
			"post": {
				"summary": "Queue batch of documents for analysis",
				"description": "This method queues batch of documents for analysis. The rules are the same as for single document mode but here the documents ordered into the batch.",
				"operationId": "queueBatchOfDocuments",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "Batch of Documents",
						"in": "body",
						"description": "List of parametrized JSON or XML objects.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration used for analysis.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/document/processed.{content_type}": {
			"get": {
				"summary": "Retrieve documents analysis",
				"description": "This method retrieves analysis results for processed documents from Semantria. FAILED documents will have FAILED status in response. Semantria responds with limited amount of results per API call. If configuration ID provided, Semantria responds with the document, which were queued using the same configuration ID, in opposite Primary.",
				"operationId": "retrieveProcessedDocuments",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration used for analysis.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/document/{document_id}.{content_type}": {
			"get": {
				"summary": "Retrieve document analysis or its status in queue",
				"description": "This method retrieves analysis results for the single document by its unique ID or the documentu2019s status in queue if it did not analyzed yet. Semantria guarantees delivering of all documents back to the client even if they FAILED on Semantria side due to some reason.",
				"operationId": "receiveDocumentAnalyticData",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration used for analysis.",
						"type": "string"
					},
					{
						"name": "document_id",
						"in": "path",
						"description": "Document ID",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/entities.{content_type}": {
			"post": {
				"summary": "Add or update user entities",
				"description": "This method adds or updates user entities by unique names on Semantria side.",
				"operationId": "updateEntities",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration user entities linked to.",
						"type": "string"
					},
					{
						"name": "User entities",
						"in": "body",
						"description": "List of parametrized JSON or XML objects.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/phrases.{content_type}": {
			"post": {
				"summary": "Add or update sentiment-bearing phrases",
				"description": "This method adds or updates sentiment-bearing phrases by unique names on Semantria side.",
				"operationId": "updatePhrases",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration phrases linked to.",
						"type": "string"
					},
					{
						"name": "Sentiment phrases",
						"in": "body",
						"description": "List of parametrized JSON or XML objects.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/queries.{content_type}": {
			"post": {
				"summary": "Add or update queries",
				"description": "This method adds or updates queries by unique names on Semantria side.",
				"operationId": "updateQueries",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Identifier of configuration queries linked to.",
						"type": "string"
					},
					{
						"name": "Queries",
						"in": "body",
						"description": "List of parametrized JSON or XML objects.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/statistics.{content_type}": {
			"get": {
				"summary": "Retrieve usage statistics",
				"description": "This method retrieves overall and per configuration usage statistics for specific timeframe. Statistics ordered per available configurations. Available interval values are current <b>hour</b>, <b>day</b>, <b>week</b>, <b>month</b> and <b>year</b>.",
				"operationId": "getStatistic",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					},
					{
						"name": "config_id",
						"in": "query",
						"description": "Configuration identifier for usage statistics retrieving.",
						"type": "string"
					},
					{
						"name": "interval",
						"in": "query",
						"description": "Hour, Day, Week, Month, Year values are supported.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/status.{content_type}": {
			"get": {
				"summary": "Retrieve API status",
				"description": "This method retrieves API status information such as the app version, current API version, supported languages and encodings, the overall service status, etc.",
				"operationId": "getStatus",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/subscription.{content_type}": {
			"get": {
				"summary": "Retrieve subscription details",
				"description": "This method retrieves user's subscription details that consist of the list of allowed features, configured limits and options on Semantria side.",
				"operationId": "getSubscription",
				"parameters": [
					{
						"name": "API key",
						"in": "path",
						"description": "Semantria API key",
						"type": "string"
					},
					{
						"name": "API secret",
						"in": "path",
						"description": "Semantria API secret",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	},
	"definitions": {
	}
}