{
	"swagger": "2.0",
	"info": {
		"title": "DreamFactory User API",
		"description": "The Users module allows the administrator to create user accounts, to grant system admin access to new users, and to assign roles to user accounts. ",
		"termsOfService": null,
		"version": null
	},
	"host": "dsp-sandman1.cloud.dreamfactory.com",
	"basePath": "/rest/user",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/user": {
			"get": {
				"summary": "getResources() - List resources available for user session management.",
				"description": "See listed operations for each resource available.",
				"operationId": "getResources",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/user/custom": {
			"post": {
				"summary": "setCustomSettings() - Set or update one or more custom user settings.",
				"description": "A valid session is required to edit settings. Post body should be an array of name-value pairs.",
				"operationId": "setCustomSettings",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "Data containing name-value pairs of desired settings.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/user/custom/{setting}": {
			"get": {
				"summary": "getCustomSetting() - Retrieve one custom user setting.",
				"description": "Setting will be returned as an object containing name-value pair. A value of null is returned for settings that are not found.",
				"operationId": "getCustomSetting",
				"parameters": [
					{
						"name": "setting",
						"in": "path",
						"description": "Name of the setting to retrieve."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/user/device": {
			"post": {
				"summary": "setDevice() - Create a record of the current user's device information.",
				"description": "Record the device information for this session. This method is idempotent and will only create one entry per uuid.",
				"operationId": "setDevice",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "Data containing name-value pairs for the user device.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/user/password": {
			"post": {
				"summary": "changePassword() - Change or reset the current user's password.",
				"description": "A valid current session along with old and new password are required to change the password directly posting 'old_password' and 'new_password'. <br/>To request password reset, post 'email' and set 'reset' to true. <br/>To reset the password from an email confirmation, post 'email', 'code', and 'new_password'. <br/>To reset the password from a security question, post 'email', 'security_answer', and 'new_password'.",
				"operationId": "changePassword",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "Data containing name-value pairs for password change.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "login",
						"in": "query",
						"description": "Login and create a session upon successful password reset."
					},
					{
						"name": "reset",
						"in": "query",
						"description": "Set to true to perform password reset."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/user/profile": {
			"post": {
				"summary": "updateProfile() - Update the current user's profile information.",
				"description": "Update the display name, phone, etc., as well as, security question and answer.",
				"operationId": "updateProfile",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "Data containing name-value pairs for the user profile.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/user/register": {
			"post": {
				"summary": "register() - Register a new user in the system.",
				"description": "The new user is created and, if required, sent an email for confirmation. This also handles the registration confirmation by posting email, confirmation code and new password.",
				"operationId": "register",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "Data containing name-value pairs for new user registration.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "login",
						"in": "query",
						"description": "Login and create a session upon successful registration."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/user/session": {
			"post": {
				"summary": "login() - Login and create a new user session.",
				"description": "Calling this creates a new session and logs in the user.",
				"operationId": "login",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "Data containing name-value pairs used for logging into the system.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	},
	"definitions": {
	}
}