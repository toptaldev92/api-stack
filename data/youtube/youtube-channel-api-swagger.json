{
	"swagger": "2.0",
	"info": {
		"title": "YouTube Channel API",
		"version": null
	},
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/channelBanners/insert": {
			"post": {
				"summary": "Insert ChannelBanners",
				"description": "Uploads a channel banner image to YouTube. This method represents the first two steps in a three-step process to update the banner image for a channel:Call the channelBanners.insert method to upload the binary image data to YouTube. The image must have a 16:9 aspect ratio and be at least 2048x1152 pixels.Extract the url propertys value from the response that the API returns for step 1.Call the channels.update method to update the channels branding settings. Set the brandingSettings.image.bannerExternalUrl propertys value to the URL obtained in step 2.",
				"operationId": "insert-channelbanners",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["channels"],
				"security": []
			}
		},
		"/channels": {
			"get": {
				"summary": "List Channels",
				"description": "Returns a collection of zero or more channel resources that match the request criteria.",
				"operationId": "list-channels",
				"parameters": [{
					"in": "query",
					"name": "categoryId",
					"description": "The categoryId parameter specifies a YouTube guide category, thereby requesting YouTube channels associated with that category.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "forUsername",
					"description": "The forUsername parameter specifies a YouTube username, thereby requesting the channel associated with that username.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of the YouTube channel ID(s) for the resource(s) that are being retrieved. In a channel resource, the id property specifies the channels YouTube channel ID.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "managedByMe",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.Set this parameters value to true to instruct the API to only return channels managed by the content owner that the onBehalfOfContentOwner parameter specifies. The user must be authenticated as a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.",
					"type": "unsigned integer"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "This parameter can only be used in a properly authorized request. Set this parameters value to true to instruct the API to only return channels owned by the authenticated user.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "mySubscribers",
					"description": "This parameter has been deprecated. This parameter can only be used in a properly authorized request. Use the subscriptions.list method and its mySubscribers parameter to retrieve a list of subscribers to the authenticated users channel.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include.If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channel resource, the contentDetails property contains other properties, such as the uploads properties. As such, if you set part=contentDetails, the API response will also contain all of those nested properties.The list below",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["channels"],
				"security": []
			},
			"put": {
				"summary": "Update Channels",
				"description": "Updates a channels metadata. Note that this method currently only supports updates to the channel resources brandingSettings and invideoPromotion objects and their child properties.",
				"operationId": "update-channels",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual chan",
					"type": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.The API currently only allows the parameter value to be set to either brandingSettings or invideoPromotion. (You cannot update both of those parts with a single request.)Note that this method overrides the existing values for all of the mutable properties that are contained in any parts that the parameter value speci",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["channels"],
				"security": []
			}
		},
		"/channelSections": {
			"delete": {
				"summary": "Delete ChannelSections",
				"description": "Deletes a channel section.",
				"operationId": "delete-channelsections",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the ID that uniquely identifies the channel section that is being deleted. In a channelSection resource, the id property specifies the sections ID.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["channels"],
				"security": []
			},
			"get": {
				"summary": "List ChannelSections",
				"description": "Returns a list of channelSection resources that match the API request criteria.",
				"operationId": "list-channelsections",
				"parameters": [{
					"in": "query",
					"name": "channelId",
					"description": "The channelId parameter specifies a YouTube channel ID. If a request specifies a value for this parameter, the API will only return the specified channels sections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of IDs that uniquely identify the channelSection resources that are being retrieved. In a channelSection resource, the id property specifies the sections ID.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "This parameter can only be used in a properly authorized request. Set this parameters value to true to retrieve a feed of the channel sections associated with the authenticated users YouTube channel.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more channelSection resource properties that the API response will include.If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channelSection resource, the snippet property contains other properties, such as a display title for the section. If you set part=snippet, the API response will also contain all of those nested properties.The list below",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["channels"],
				"security": []
			},
			"post": {
				"summary": "Insert ChannelSections",
				"description": "Adds a channel section to the authenticated users channel.",
				"operationId": "insert-channelsections",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is l",
					"type": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.The list below contains the part names that you can include in the parameter value and the quota cost for each part:contentDetails: 2id: 0snippet: 2",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["channels"],
				"security": []
			},
			"put": {
				"summary": "Update ChannelSections",
				"description": "Updates a channel section.",
				"operationId": "update-channelsections",
				"parameters": [{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.The list below contains the part names that you can include in the parameter value and the quota cost for each part:contentDetails: 2id: 0snippet: 2",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["channels"],
				"security": []
			}
		}
	},
	"definitions": []
}