{
	"swagger": "2.0",
	"info": {
		"title": "YouTube Playlist API",
		"version": null
	},
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/playlistItems": {
			"delete": {
				"summary": "Delete PlaylistItems",
				"description": "Deletes a playlist item.",
				"operationId": "delete-playlistitems",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube playlist item ID for the playlist item that is being deleted. In a playlistItem resource, the id property specifies the playlist items ID.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["playlist"],
				"security": []
			},
			"get": {
				"summary": "List PlaylistItems",
				"description": "Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs.",
				"operationId": "list-playlistitems",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of one or more unique playlist item IDs.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.",
					"type": "unsigned integer"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more playlistItem resource properties that the API response will include.If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlistItem resource, the snippet property contains numerous fields, including the title, description, position, and resourceId properties. As such, if you set part=snippet, the API response will contain all of those pro",
					"type": "string"
				},
				{
					"in": "query",
					"name": "playlistId",
					"description": "The playlistId parameter specifies the unique ID of the playlist for which you want to retrieve playlist items. Note that even though this is an optional parameter, every request to retrieve playlist items must specify a value for either the id parameter or the playlistId parameter.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "videoId",
					"description": "The videoId parameter specifies that the request should return only the playlist items that contain the specified video.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["playlist"],
				"security": []
			},
			"post": {
				"summary": "Insert PlaylistItems",
				"description": "Adds a resource to a playlist.",
				"operationId": "insert-playlistitems",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.The list below contains the part names that you can include in the parameter value and the quota cost for each part:contentDetails: 2id: 0snippet: 2status: 2",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["playlist"],
				"security": []
			},
			"put": {
				"summary": "Update PlaylistItems",
				"description": "Modifies a playlist item. For example, you could update the items position in the playlist.",
				"operationId": "update-playlistitems",
				"parameters": [{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist item can specify a start time and end time, which identify the times portion of the video that should play when users watch the video in",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["playlist"],
				"security": []
			}
		},
		"/playlists": {
			"delete": {
				"summary": "Delete Playlists",
				"description": "Deletes a playlist.",
				"operationId": "delete-playlists",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube playlist ID for the playlist that is being deleted. In a playlist resource, the id property specifies the playlists ID.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["playlist"],
				"security": []
			},
			"get": {
				"summary": "List Playlists",
				"description": "Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.",
				"operationId": "list-playlists",
				"parameters": [{
					"in": "query",
					"name": "channelId",
					"description": "This value indicates that the API should only return the specified channels playlists.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a playlist resource, the id property specifies the playlists YouTube playlist ID.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.",
					"type": "unsigned integer"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "This parameter can only be used in a properly authorized request. Set this parameters value to true to instruct the API to only return playlists owned by the authenticated user.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is l",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include.If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As such, if you set part=snippet, the API response will contain all of those properties.The list below contai",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["playlist"],
				"security": []
			},
			"post": {
				"summary": "Insert Playlists",
				"description": "Creates a playlist.",
				"operationId": "insert-playlists",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addi",
					"type": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.The list below contains the part names that you can include in the parameter value and the quota cost for each part:contentDetails: 2id: 0player: 0snippet: 2status: 2",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["playlist"],
				"security": []
			},
			"put": {
				"summary": "Update Playlists",
				"description": "Modifies a playlist. For example, you could change a playlists title, description, or privacy status.",
				"operationId": "update-playlists",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
					"type": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.Note that this method will override the existing values for mutable properties that are contained in any parts that the request body specifies. For example, a playlists description is contained in the snippet part, which must be included in the request body. If the request does not specify a value for the snippet.de",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["playlist"],
				"security": []
			}
		}
	},
	"definitions": []
}