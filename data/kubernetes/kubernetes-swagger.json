{
	"swagger": "2.0",
	"info": {
		"title": "Kubernetes",
		"description": null,
		"termsOfService": null,
		"version": null
	},
	"host": "/api/v1beta3",
	"basePath": "127.0.0.1:6443",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/api/v1beta3/endpoints": {
			"get": {
				"summary": "list objects of kind Endpoints",
				"description": "",
				"operationId": "listEndpoints",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/events": {
			"get": {
				"summary": "list objects of kind Event",
				"description": "",
				"operationId": "listEvent",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/limitranges": {
			"get": {
				"summary": "list objects of kind LimitRange",
				"description": "",
				"operationId": "listLimitRange",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces": {
			"post": {
				"summary": "create a Namespace",
				"description": "",
				"operationId": "createNamespace",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/bindings": {
			"post": {
				"summary": "create a Binding",
				"description": "",
				"operationId": "createBinding",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/endpoints": {
			"post": {
				"summary": "create a Endpoints",
				"description": "",
				"operationId": "createEndpoints",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/endpoints/{name}": {
			"put": {
				"summary": "update the specified Endpoints",
				"description": "",
				"operationId": "updateEndpoints",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the Endpoints"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/events": {
			"post": {
				"summary": "create a Event",
				"description": "",
				"operationId": "createEvent",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/events/{name}": {
			"put": {
				"summary": "update the specified Event",
				"description": "",
				"operationId": "updateEvent",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the Event"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/limitranges": {
			"post": {
				"summary": "create a LimitRange",
				"description": "",
				"operationId": "createLimitRange",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/limitranges/{name}": {
			"put": {
				"summary": "update the specified LimitRange",
				"description": "",
				"operationId": "updateLimitRange",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the LimitRange"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/pods": {
			"post": {
				"summary": "create a Pod",
				"description": "",
				"operationId": "createPod",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/pods/{name}": {
			"put": {
				"summary": "update the specified Pod",
				"description": "",
				"operationId": "updatePod",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the Pod"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/replicationcontrollers": {
			"post": {
				"summary": "create a ReplicationController",
				"description": "",
				"operationId": "createReplicationController",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/replicationcontrollers/{name}": {
			"put": {
				"summary": "update the specified ReplicationController",
				"description": "",
				"operationId": "updateReplicationController",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the ReplicationController"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/resourcequotas": {
			"post": {
				"summary": "create a ResourceQuota",
				"description": "",
				"operationId": "createResourceQuota",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/resourcequotas/{name}": {
			"put": {
				"summary": "update the specified ResourceQuota",
				"description": "",
				"operationId": "updateResourceQuota",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the ResourceQuota"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/resourcequotausages": {
			"post": {
				"summary": "create a ResourceQuotaUsage",
				"description": "",
				"operationId": "createResourceQuotaUsage",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/secrets": {
			"post": {
				"summary": "create a Secret",
				"description": "",
				"operationId": "createSecret",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/secrets/{name}": {
			"put": {
				"summary": "update the specified Secret",
				"description": "",
				"operationId": "updateSecret",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the Secret"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/services": {
			"post": {
				"summary": "create a Service",
				"description": "",
				"operationId": "createService",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{namespaces}/services/{name}": {
			"put": {
				"summary": "update the specified Service",
				"description": "",
				"operationId": "updateService",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the Service"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/namespaces/{name}": {
			"put": {
				"summary": "update the specified Namespace",
				"description": "",
				"operationId": "updateNamespace",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the Namespace"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/nodes": {
			"post": {
				"summary": "create a Node",
				"description": "",
				"operationId": "createNode",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/nodes/{name}": {
			"put": {
				"summary": "update the specified Node",
				"description": "",
				"operationId": "updateNode",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "name",
						"in": "path",
						"description": "name of the Node"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/pods": {
			"get": {
				"summary": "list objects of kind Pod",
				"description": "",
				"operationId": "listPod",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/proxy/namespaces/{namespaces}/pods/{name}": {
			"put": {
				"summary": "proxy PUT requests to Pod",
				"description": "",
				"operationId": "proxyPUTPod",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Pod"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/proxy/namespaces/{namespaces}/pods/{name}/{path:*}": {
			"put": {
				"summary": "proxy PUT requests to Pod",
				"description": "",
				"operationId": "proxyPUTPod",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Pod"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/proxy/namespaces/{namespaces}/services/{name}": {
			"put": {
				"summary": "proxy PUT requests to Service",
				"description": "",
				"operationId": "proxyPUTService",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Service"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/proxy/namespaces/{namespaces}/services/{name}/{path:*}": {
			"put": {
				"summary": "proxy PUT requests to Service",
				"description": "",
				"operationId": "proxyPUTService",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Service"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/proxy/nodes/{name}": {
			"put": {
				"summary": "proxy PUT requests to Node",
				"description": "",
				"operationId": "proxyPUTNode",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Node"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/proxy/nodes/{name}/{path:*}": {
			"put": {
				"summary": "proxy PUT requests to Node",
				"description": "",
				"operationId": "proxyPUTNode",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Node"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/redirect/namespaces/{namespaces}/pods/{name}": {
			"get": {
				"summary": "redirect GET request to Pod",
				"description": "",
				"operationId": "redirectPod",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Pod"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/redirect/namespaces/{namespaces}/services/{name}": {
			"get": {
				"summary": "redirect GET request to Service",
				"description": "",
				"operationId": "redirectService",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Service"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/redirect/nodes/{name}": {
			"get": {
				"summary": "redirect GET request to Node",
				"description": "",
				"operationId": "redirectNode",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Node"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/replicationcontrollers": {
			"get": {
				"summary": "list objects of kind ReplicationController",
				"description": "",
				"operationId": "listReplicationController",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/resourcequotas": {
			"get": {
				"summary": "list objects of kind ResourceQuota",
				"description": "",
				"operationId": "listResourceQuota",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/secrets": {
			"get": {
				"summary": "list objects of kind Secret",
				"description": "",
				"operationId": "listSecret",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/services": {
			"get": {
				"summary": "list objects of kind Service",
				"description": "",
				"operationId": "listService",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/endpoints": {
			"get": {
				"summary": "watch a list of Endpoints",
				"description": "",
				"operationId": "watchEndpointslist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/events": {
			"get": {
				"summary": "watch a list of Event",
				"description": "",
				"operationId": "watchEventlist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/limitranges": {
			"get": {
				"summary": "watch a list of LimitRange",
				"description": "",
				"operationId": "watchLimitRangelist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces": {
			"get": {
				"summary": "watch a list of Namespace",
				"description": "",
				"operationId": "watchNamespacelist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/endpoints": {
			"get": {
				"summary": "watch a list of Endpoints",
				"description": "",
				"operationId": "watchEndpointslist",
				"parameters": [
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/endpoints/{name}": {
			"get": {
				"summary": "watch a particular Endpoints",
				"description": "",
				"operationId": "watchEndpoints",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Endpoints"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/events": {
			"get": {
				"summary": "watch a list of Event",
				"description": "",
				"operationId": "watchEventlist",
				"parameters": [
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/events/{name}": {
			"get": {
				"summary": "watch a particular Event",
				"description": "",
				"operationId": "watchEvent",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Event"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/limitranges": {
			"get": {
				"summary": "watch a list of LimitRange",
				"description": "",
				"operationId": "watchLimitRangelist",
				"parameters": [
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/limitranges/{name}": {
			"get": {
				"summary": "watch a particular LimitRange",
				"description": "",
				"operationId": "watchLimitRange",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the LimitRange"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/pods": {
			"get": {
				"summary": "watch a list of Pod",
				"description": "",
				"operationId": "watchPodlist",
				"parameters": [
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/pods/{name}": {
			"get": {
				"summary": "watch a particular Pod",
				"description": "",
				"operationId": "watchPod",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Pod"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/replicationcontrollers": {
			"get": {
				"summary": "watch a list of ReplicationController",
				"description": "",
				"operationId": "watchReplicationControllerlist",
				"parameters": [
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/replicationcontrollers/{name}": {
			"get": {
				"summary": "watch a particular ReplicationController",
				"description": "",
				"operationId": "watchReplicationController",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the ReplicationController"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/resourcequotas": {
			"get": {
				"summary": "watch a list of ResourceQuota",
				"description": "",
				"operationId": "watchResourceQuotalist",
				"parameters": [
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/resourcequotas/{name}": {
			"get": {
				"summary": "watch a particular ResourceQuota",
				"description": "",
				"operationId": "watchResourceQuota",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the ResourceQuota"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/secrets": {
			"get": {
				"summary": "watch a list of Secret",
				"description": "",
				"operationId": "watchSecretlist",
				"parameters": [
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/secrets/{name}": {
			"get": {
				"summary": "watch a particular Secret",
				"description": "",
				"operationId": "watchSecret",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Secret"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/services": {
			"get": {
				"summary": "watch a list of Service",
				"description": "",
				"operationId": "watchServicelist",
				"parameters": [
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{namespaces}/services/{name}": {
			"get": {
				"summary": "watch a particular Service",
				"description": "",
				"operationId": "watchService",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Service"
					},
					{
						"name": "namespaces",
						"in": "path",
						"description": "object name and auth scope, such as for teams and projects"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/namespaces/{name}": {
			"get": {
				"summary": "watch a particular Namespace",
				"description": "",
				"operationId": "watchNamespace",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Namespace"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/nodes": {
			"get": {
				"summary": "watch a list of Node",
				"description": "",
				"operationId": "watchNodelist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/nodes/{name}": {
			"get": {
				"summary": "watch a particular Node",
				"description": "",
				"operationId": "watchNode",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "name of the Node"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/pods": {
			"get": {
				"summary": "watch a list of Pod",
				"description": "",
				"operationId": "watchPodlist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/replicationcontrollers": {
			"get": {
				"summary": "watch a list of ReplicationController",
				"description": "",
				"operationId": "watchReplicationControllerlist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/resourcequotas": {
			"get": {
				"summary": "watch a list of ResourceQuota",
				"description": "",
				"operationId": "watchResourceQuotalist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/secrets": {
			"get": {
				"summary": "watch a list of Secret",
				"description": "",
				"operationId": "watchSecretlist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/v1beta3/watch/services": {
			"get": {
				"summary": "watch a list of Service",
				"description": "",
				"operationId": "watchServicelist",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	},
	"definitions": {
	}
}