{
	"swagger": "2.0",
	"info": {
		"title": "YouTube Data API",
		"description": "The YouTube Data API (v3) lets you incorporate YouTube functionality into your own application. You can use the API to fetch search results and to retrieve, insert, update, and delete resources like videos or playlists.",
		"termsOfService": "https://developers.google.com/youtube/terms",
		"version": "V3"
	},
	"host": "www.googleapis.com",
	"basePath": "/youtube/v3",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/activities": {
			"post": {
				"summary": "Insert Activities",
				"description": "Posts a bulletin for a specific channel. (The user submitting the request must be authorized to act on the channel's behalf.)Note: Even though an activity resource can contain information about actions like a user rating a video or marking a video as a favorite, you need to use other API methods to generate those activity resources. For example, you would use the API's videos.rate() method to rate a video and the playlistItems.insert() method to mark a video as a favorite.",
				"operationId": "insert-activities",
				"parameters": [
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.The list below contains the part names that you can include in the parameter value and the quota cost for each part:contentDetails: 2id: 0snippet: 2",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/channelBanners/insert": {
			"post": {
				"summary": "Insert ChannelBanners",
				"description": "Uploads a channel banner image to YouTube. This method represents the first two steps in a three-step process to update the banner image for a channel:Call the channelBanners.insert method to upload the binary image data to YouTube. The image must have a 16:9 aspect ratio and be at least 2048x1152 pixels.Extract the url property's value from the response that the API returns for step 1.Call the channels.update method to update the channel's branding settings. Set the brandingSettings.image.bannerExternalUrl property's value to the URL obtained in step 2.",
				"operationId": "insert-channelbanners",
				"parameters": [
					{
						"name": "onBehalfOfContentOwner",
						"in": "query",
						"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/channels": {
			"put": {
				"summary": "Update Channels",
				"description": "Updates a channel's metadata. Note that this method currently only supports updates to the channel resource's brandingSettings and invideoPromotion objects and their child properties.",
				"operationId": "update-channels",
				"parameters": [
					{
						"name": "onBehalfOfContentOwner",
						"in": "query",
						"description": "This parameter can only be used in a properly authorized request. The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual chan",
						"type": "string"
					},
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.The API currently only allows the parameter value to be set to either brandingSettings or invideoPromotion. (You cannot update both of those parts with a single request.)Note that this method overrides the existing values for all of the mutable properties that are contained in any parts that the parameter value speci",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/channelSections": {
			"put": {
				"summary": "Update ChannelSections",
				"description": "Updates a channel section.",
				"operationId": "update-channelsections",
				"parameters": [
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.The list below contains the part names that you can include in the parameter value and the quota cost for each part:contentDetails: 2id: 0snippet: 2",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/guideCategories": {
			"get": {
				"summary": "List GuideCategories",
				"description": "Returns a list of categories that can be associated with YouTube channels.",
				"operationId": "list-guidecategories",
				"parameters": [
					{
						"name": "hl",
						"in": "query",
						"description": "The hl parameter specifies the language that will be used for text values in the API response. The default value is en-US.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The id parameter specifies a comma-separated list of the YouTube channel category ID(s) for the resource(s) that are being retrieved. In a guideCategory resource, the id property specifies the YouTube channel category ID.",
						"type": "string"
					},
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter specifies the guideCategory resource properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 2 units.",
						"type": "string"
					},
					{
						"name": "regionCode",
						"in": "query",
						"description": "The regionCode parameter instructs the API to return the list of guide categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/i18nLanguages": {
			"get": {
				"summary": "List I18nLanguages",
				"description": "Returns a list of application languages that the YouTube website supports.",
				"operationId": "list-i18nlanguages",
				"parameters": [
					{
						"name": "hl",
						"in": "query",
						"description": "The hl parameter specifies the language that should be used for text values in the API response. The default value is en_US.",
						"type": "string"
					},
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter specifies the i18nLanguage resource properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 1 unit.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/i18nRegions": {
			"get": {
				"summary": "List I18nRegions",
				"description": "Returns a list of content regions that the YouTube website supports.",
				"operationId": "list-i18nregions",
				"parameters": [
					{
						"name": "hl",
						"in": "query",
						"description": "The hl parameter specifies the language that should be used for text values in the API response. The default value is en_US.",
						"type": "string"
					},
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter specifies the i18nRegion resource properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 1 unit.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/playlistItems": {
			"put": {
				"summary": "Update PlaylistItems",
				"description": "Modifies a playlist item. For example, you could update the item's position in the playlist.",
				"operationId": "update-playlistitems",
				"parameters": [
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist item can specify a start time and end time, which identify the times portion of the video that should play when users watch the video in",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/playlists": {
			"put": {
				"summary": "Update Playlists",
				"description": "Modifies a playlist. For example, you could change a playlist's title, description, or privacy status.",
				"operationId": "update-playlists",
				"parameters": [
					{
						"name": "onBehalfOfContentOwner",
						"in": "query",
						"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
						"type": "string"
					},
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.Note that this method will override the existing values for mutable properties that are contained in any parts that the request body specifies. For example, a playlists description is contained in the snippet part, which must be included in the request body. If the request does not specify a value for the snippet.de",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/search": {
			"get": {
				"summary": "List Search",
				"description": "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching video, channel, and playlist resources, but you can also configure queries to only retrieve a specific type of resource.",
				"operationId": "list-search",
				"parameters": [
					{
						"name": "channelId",
						"in": "query",
						"description": "The channelId parameter indicates that the API response should only contain resources created by the channel",
						"type": "string"
					},
					{
						"name": "channelType",
						"in": "query",
						"description": "The channelType parameter lets you restrict a search to a particular type of channel.Acceptable values are:any &ndash; Return all channels.show &ndash; Only retrieve shows.",
						"type": "string"
					},
					{
						"name": "eventType",
						"in": "query",
						"description": "The eventType parameter restricts a search to broadcast events. If you specify a value for this parameter, you must also set the type parameters value to video.Acceptable values are:completed &ndash; Only include completed broadcasts.live &ndash; Only include active broadcasts.upcoming &ndash; Only include upcoming broadcasts.",
						"type": "string"
					},
					{
						"name": "forContentOwner",
						"in": "query",
						"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The forContentOwner parameter restricts the search to only retrieve resources owned by the content owner specified by the onBehalfOfContentOwner parameter. The user must be authenticated using a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.",
						"type": "boolean"
					},
					{
						"name": "forMine",
						"in": "query",
						"description": "This parameter can only be used in a properly authorized request. The forMine parameter restricts the search to only retrieve videos owned by the authenticated user. If you set this parameter to true, then the type parameters value must also be set to video.",
						"type": "boolean"
					},
					{
						"name": "location",
						"in": "query",
						"description": "The location parameter, in conjunction with the locationRadius parameter, defines a circular geographic area and also restricts a search to videos that specify, in their metadata, a geographic location that falls within that area. The parameter value is a string that specifies latitude/longitude coordinates e.g. (37.42307,-122.08427).The location parameter value identifies the point at the center of the area.The locationRadius parameter specifies the maximum distance that the location associated",
						"type": "string"
					},
					{
						"name": "locationRadius",
						"in": "query",
						"description": "The locationRadius parameter, in conjunction with the location parameter, defines a circular geographic area.The parameter value must be a floating point number followed by a measurement unit. Valid measurement units are m, km, ft, and mi. For example, valid parameter values include 1500m, 5km, 10000ft, and 0.75mi. The API does not support locationRadius parameter values larger than 1000 kilometers.Note: See the definition of the location parameter for more information.",
						"type": "string"
					},
					{
						"name": "maxResults",
						"in": "query",
						"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.",
						"type": "unsigned integer"
					},
					{
						"name": "onBehalfOfContentOwner",
						"in": "query",
						"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "The order parameter specifies the method that will be used to order resources in the API response. The default value is relevance.Acceptable values are:date &ndash; Resources are sorted in reverse chronological order based on the date they were created.rating &ndash; Resources are sorted from highest to lowest rating.relevance &ndash; Resources are sorted based on their relevance to the search query. This is the default value for this parameter.title &ndash; Resources are sorted alphabetically b",
						"type": "string"
					},
					{
						"name": "pageToken",
						"in": "query",
						"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
						"type": "string"
					},
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. Set the parameter value to snippet.",
						"type": "string"
					},
					{
						"name": "publishedAfter",
						"in": "query",
						"description": "The publishedAfter parameter indicates that the API response should only contain resources created after the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).",
						"type": "datetime"
					},
					{
						"name": "publishedBefore",
						"in": "query",
						"description": "The publishedBefore parameter indicates that the API response should only contain resources created before the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).",
						"type": "datetime"
					},
					{
						"name": "q",
						"in": "query",
						"description": "The q parameter specifies the query term to search for.Your request can also use the Boolean NOT (-) and OR (|) operators to exclude videos or to find videos that are associated with one of several search terms. For example, to search for videos matching either boating or sailing, set the q parameter value to boating|sailing. Similarly, to search for videos matching either boating or sailing but not fishing, set the q parameter value to boating|sailing -fishing. Note that the pipe character must",
						"type": "string"
					},
					{
						"name": "regionCode",
						"in": "query",
						"description": "The regionCode parameter instructs the API to return search results for the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.",
						"type": "string"
					},
					{
						"name": "relatedToVideoId",
						"in": "query",
						"description": "The relatedToVideoId parameter retrieves a list of videos that are related to the video that the parameter value identifies. The parameter value must be set to a YouTube video ID and, if you are using this parameter, the type parameter must be set to video.",
						"type": "string"
					},
					{
						"name": "safeSearch",
						"in": "query",
						"description": "The safeSearch parameter indicates whether the search results should include restricted content as well as standard content.Acceptable values are:moderate &ndash; YouTube will filter some content from search results and, at the least, will filter content that is restricted in your locale. Based on their content, search results could be removed from search results or demoted in search results. This is the default parameter value.none &ndash; YouTube will not filter the search result set.strict &n",
						"type": "string"
					},
					{
						"name": "topicId",
						"in": "query",
						"description": "The topicId parameter indicates that the API response should only contain resources associated with the specified topic. The value identifies a Freebase topic ID.",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "The type parameter restricts a search query to only retrieve a particular type of resource. The value is a comma-separated list of resource types. The default value is video,channel,playlist.Acceptable values are:channelplaylistvideo",
						"type": "string"
					},
					{
						"name": "videoCaption",
						"in": "query",
						"description": "The videoCaption parameter indicates whether the API should filter video search results based on whether they have captions. If you specify a value for this parameter, you must also set the type parameters value to video.Acceptable values are:any &ndash; Do not filter results based on caption availability.closedCaption &ndash; Only include videos that have captions.none &ndash; Only include videos that do not have captions.",
						"type": "string"
					},
					{
						"name": "videoCategoryId",
						"in": "query",
						"description": "The videoCategoryId parameter filters video search results based on their category. If you specify a value for this parameter, you must also set the type parameters value to video.",
						"type": "string"
					},
					{
						"name": "videoDefinition",
						"in": "query",
						"description": "The videoDefinition parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos. HD videos are available for playback in at least 720p, though higher resolutions, like 1080p, might also be available. If you specify a value for this parameter, you must also set the type parameters value to video.Acceptable values are:any &ndash; Return all videos, regardless of their resolution.high &ndash; Only retrieve HD videos.standard &ndash; Only retr",
						"type": "string"
					},
					{
						"name": "videoDimension",
						"in": "query",
						"description": "The videoDimension parameter lets you restrict a search to only retrieve 2D or 3D videos. If you specify a value for this parameter, you must also set the type parameters value to video.Acceptable values are:2d &ndash; Restrict search results to exclude 3D videos.3d &ndash; Restrict search results to only include 3D videos.any &ndash; Include both 3D and non-3D videos in returned results. This is the default value.",
						"type": "string"
					},
					{
						"name": "videoDuration",
						"in": "query",
						"description": "The videoDuration parameter filters video search results based on their duration. If you specify a value for this parameter, you must also set the type parameters value to video.Acceptable values are:any &ndash; Do not filter video search results based on their duration. This is the default value.long &ndash; Only include videos longer than 20 minutes.medium &ndash; Only include videos that are between four and 20 minutes long (inclusive).short &ndash; Only include videos that are less than fou",
						"type": "string"
					},
					{
						"name": "videoEmbeddable",
						"in": "query",
						"description": "The videoEmbeddable parameter lets you to restrict a search to only videos that can be embedded into a webpage. If you specify a value for this parameter, you must also set the type parameters value to video.Acceptable values are:any &ndash; Return all videos, embeddable or not.true &ndash; Only retrieve embeddable videos.",
						"type": "string"
					},
					{
						"name": "videoLicense",
						"in": "query",
						"description": "The videoLicense parameter filters search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos. If you specify a value for this parameter, you must also set the type parameters value to video.Acceptable values are:any &ndash; Return all videos, regardless of which license they have, that match the query parameters.creativeCommon &ndash; Only return video",
						"type": "string"
					},
					{
						"name": "videoSyndicated",
						"in": "query",
						"description": "The videoSyndicated parameter lets you to restrict a search to only videos that can be played outside youtube.com. If you specify a value for this parameter, you must also set the type parameters value to video.Acceptable values are:any &ndash; Return all videos, syndicated or not.true &ndash; Only retrieve syndicated videos.",
						"type": "string"
					},
					{
						"name": "videoType",
						"in": "query",
						"description": "The videoType parameter lets you restrict a search to a particular type of videos. If you specify a value for this parameter, you must also set the type parameters value to video.Acceptable values are:any &ndash; Return all videos.episode &ndash; Only retrieve episodes of shows.movie &ndash; Only retrieve movies.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/subscriptions": {
			"post": {
				"summary": "Insert Subscriptions",
				"description": "Adds a subscription for the authenticated user's channel.",
				"operationId": "insert-subscriptions",
				"parameters": [
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.The list below contains the part names that you can include in the parameter value and the quota cost for each part:contentDetails: 2id: 0snippet: 2subscriberSnippet: 2",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/thumbnails/set": {
			"post": {
				"summary": "Set Thumbnails",
				"description": "Uploads a custom video thumbnail to YouTube and sets it for a video.",
				"operationId": "set-thumbnails",
				"parameters": [
					{
						"name": "onBehalfOfContentOwner",
						"in": "query",
						"description": "Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to pr",
						"type": "string"
					},
					{
						"name": "videoId",
						"in": "query",
						"description": "The videoId parameter specifies a YouTube video ID for which the custom video thumbnail is being provided.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/videoCategories": {
			"get": {
				"summary": "List VideoCategories",
				"description": "Returns a list of categories that can be associated with YouTube videos.",
				"operationId": "list-videocategories",
				"parameters": [
					{
						"name": "hl",
						"in": "query",
						"description": "The hl parameter specifies the language that should be used for text values in the API response. The default value is en_US.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.",
						"type": "string"
					},
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter specifies the videoCategory resource properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 2 units.",
						"type": "string"
					},
					{
						"name": "regionCode",
						"in": "query",
						"description": "The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/videos": {
			"put": {
				"summary": "Update Videos",
				"description": "Updates a video's metadata.",
				"operationId": "update-videos",
				"parameters": [
					{
						"name": "onBehalfOfContentOwner",
						"in": "query",
						"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
						"type": "string"
					},
					{
						"name": "part",
						"in": "query",
						"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a videos privacy setting is contained in the status part. As such, if your request is updating a private video, and the requests part parameter v",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/videos/getRating": {
			"get": {
				"summary": "GetRating Videos",
				"description": "Retrieves the ratings that the authorized user gave to a list of specified videos.",
				"operationId": "getrating-videos",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) for which you are retrieving rating data. In a video resource, the id property specifies the videos ID.",
						"type": "string"
					},
					{
						"name": "onBehalfOfContentOwner",
						"in": "query",
						"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and ge",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/videos/rate": {
			"post": {
				"summary": "Rate Videos",
				"description": "Add a like or dislike rating to a video or remove a rating from a video.",
				"operationId": "rate-videos",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "The id parameter specifies the YouTube video ID of the video that is being rated or having its rating removed.",
						"type": "string"
					},
					{
						"name": "rating",
						"in": "query",
						"description": "Specifies the rating to record.Acceptable values are:dislike &ndash; Records that the authenticated user disliked the video.like &ndash; Records that the authenticated user liked the video.none &ndash; Removes any rating that the authenticated user had previously set for the video.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/watermarks/set": {
			"post": {
				"summary": "Set Watermarks",
				"description": "Uploads a watermark image to YouTube and sets it for a channel.",
				"operationId": "set-watermarks",
				"parameters": [
					{
						"name": "channelId",
						"in": "query",
						"description": "The channelId parameter specifies the YouTube channel ID for which the watermark is being provided.",
						"type": "string"
					},
					{
						"name": "onBehalfOfContentOwner",
						"in": "query",
						"description": "Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to pr",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/watermarks/unset": {
			"post": {
				"summary": "Unset Watermarks",
				"description": "Deletes a channel's watermark image.",
				"operationId": "unset-watermarks",
				"parameters": [
					{
						"name": "channelId",
						"in": "query",
						"description": "The channelId parameter specifies the YouTube channel ID for which the watermark is being unset.",
						"type": "string"
					},
					{
						"name": "onBehalfOfContentOwner",
						"in": "query",
						"description": "Note: This parameter is intended exclusively for YouTube content partners.The onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to pr",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	}
}