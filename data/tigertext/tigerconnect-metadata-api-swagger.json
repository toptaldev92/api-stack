{
	"swagger": "2.0",
	"info": {
		"title": "TigerConnect Metadata API",
		"description": "The metadata system for TigerConnect messaging platform.",
		"termsOfService": "http://www.tigertext.com/developer-terms-of-use",
		"contact": {
			"name": "TigerText",
			"url": "http://www.tigertext.com/supportform/",
			"email": "info@tigertext.com"
		},
		"version": "v2"
	},
	"host": "developer.tigertext.me",
	"basePath": "/v2/",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"0": {
			"/metadata/{group_token}/": {
				"delete": {
					"summary": "Clears the metadata for a User or Group based on address encoding.",
					"description": "Clears the metadata for a User or Group based on address encoding.",
					"operationId": "deleteMetadata",
					"parameters": [{
						"in": "path",
						"name": "group_token",
						"description": "The group token.",
						"type": "string",
						"format": "string"
					}],
					"responses": {
						"204": {
							"description": "The metadata is cleared. No error is returned if the User or Group is not found"
						}
					},
					"tags": ["Metadata"]
				}
			}
		},
		"1": {
			"/metadata/{group_token}/": {
				"get": {
					"summary": "Get the metadata for a User or Group based on address encoding.",
					"description": "Get the metadata for a User or Group based on address encoding.",
					"operationId": "getMetadata",
					"parameters": [{
						"in": "path",
						"name": "group_token",
						"description": "The group token.",
						"type": "string",
						"format": "string"
					}],
					"responses": {
						"204": {
							"description": "The metadata is cleared. No error is returned if the User or Group is not found"
						},
						"200": {
							"description": "Returns the metadata in a JSON object",
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/metadata"
								}
							}
						},
						"404": {
							"description": "If the User or Group does not exist"
						}
					},
					"tags": ["Metadata"]
				}
			}
		},
		"2": {
			"/metadata/{group_token}/": {
				"post": {
					"summary": "Adds metadata for a User or Group based on address encoding",
					"description": "Adds metadata for a User or Group based on address encoding",
					"operationId": "addMetadata",
					"parameters": [{
						"in": "body",
						"name": "body",
						"description": "The metadata in the body.",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"in": "path",
						"name": "group_token",
						"description": "The group token.",
						"type": "string",
						"format": "string"
					},
					{
						"in": "query",
						"name": "TT-X-Organization-Key",
						"description": "The organization with which the entity is associated. Defaults to the TigerText Consumer organization",
						"type": "string",
						"format": "string"
					}],
					"responses": {
						"204": {
							"description": "The metadata was set"
						},
						"400": {
							"description": "If the provided parameters are somehow incorrect. A proper description of the error will be provided"
						},
						"404": {
							"description": "If the User or Group does not exist"
						}
					},
					"tags": ["Metadata"]
				}
			}
		}
	},
	"definitions": {
		"metadata": {
			"properties": {
				"body": {
					"description": "The metadata in the body.",
					"type": "string"
				}
			}
		},
		"holder": {
			"properties": {
				"body": {
					"description": "This is the body.",
					"type": "string"
				}
			}
		}
	}
}