{
	"swagger": "2.0",
	"info": {
		"title": "TigerConnect Group API",
		"description": "The group system for TigerConnect messaging platform.",
		"termsOfService": "http://www.tigertext.com/developer-terms-of-use",
		"contact": {
			"name": "TigerText",
			"url": "http://www.tigertext.com/supportform/",
			"email": "info@tigertext.com"
		},
		"version": "v2"
	},
	"host": "developer.tigertext.me",
	"basePath": "/v2/",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/group/": {
			"post": {
				"summary": "Create a new group.",
				"description": "Create a new group.",
				"operationId": "createNewGroup",
				"parameters": [{
					"in": "query",
					"name": "avatar",
					"description": " Binary data to use for the group's avatar",
					"type": "string",
					"format": "string"
				},
				{
					"in": "formData",
					"name": "members",
					"description": "The members to add to the group encoded using user address encoding. The caller is auto-added",
					"type": "string",
					"format": "string"
				},
				{
					"in": "formData",
					"name": "name",
					"description": "The group name",
					"type": "string",
					"format": "string"
				},
				{
					"in": "formData",
					"name": "replay_history",
					"description": "A boolean value indicating if, when a new member is added to the group, it should get the messages sent to the group before that. Default value: false.",
					"type": "boolean",
					"format": "boolean"
				},
				{
					"in": "formData",
					"name": "TT-X-Organization-Key ",
					"description": "The organization in which the user wants to create the group. Defaults to the TigerText Consumer organization.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"204": {
						"description": "The group was correctly generated. ",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/group"
							}
						}
					},
					"400": [],
					"403": [],
					"404": []
				},
				"tags": ["Group"]
			}
		},
		"/group/{group_token}/": {
			"delete": {
				"summary": "Delete a group. If the group has already been deleted, no error is reported.",
				"description": "Delete a group. If the group has already been deleted, no error is reported.",
				"operationId": "deleteGroup",
				"parameters": [{
					"in": "path",
					"name": "group_token",
					"description": "The group token.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"204": [],
					"400": [],
					"403": [],
					"404": []
				},
				"tags": ["Group"]
			}
		},
		"/group/{group_token}/members/": {
			"post": {
				"summary": "Add members to a group.",
				"description": "Add members to a group.",
				"operationId": "addGroupMember",
				"parameters": [{
					"in": "path",
					"name": "group_token",
					"description": "The group token.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "formData",
					"name": "members",
					"description": "A list of members to add to a group using user address encoding. Users already in the group are ignored",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"204": [],
					"400": [],
					"403": [],
					"404": []
				},
				"tags": ["Group"]
			}
		},
		"/group/{group_token}/members/remove/": {
			"post": {
				"summary": "Remove members from a group.",
				"description": "Remove members from a group.",
				"operationId": "removeMemberFromGroup",
				"parameters": [{
					"in": "path",
					"name": "group_token",
					"description": "The group token.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "formData",
					"name": "members",
					"description": "A list of members to remove from a group using address encoding. Users not in the group are ignored",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"204": [],
					"400": [],
					"403": [],
					"404": []
				},
				"tags": ["Group"]
			}
		}
	},
	"definitions": {
		"group": {
			"properties": {
				"name": {
					"description": "This is the group name.",
					"type": "string"
				},
				"avatar": {
					"description": "this is the group avatar.",
					"type": "string"
				}
			}
		}
	}
}