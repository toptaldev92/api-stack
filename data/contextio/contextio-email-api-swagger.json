{
	"swagger": "2.0",
	"info": {
		"title": "Context.IO Email API",
		"description": "Context.IO takes the pain out of syncing email data with your app so you can focus on what makes your product great.",
		"termsOfService": null,
		"version": "v2"
	},
	"host": "api.context.io",
	"basePath": "2.0/accounts/{id}/",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"email_addresses": {
			"put": {
				"summary": "Add Email Address",
				"description": "Adding a new email addresses as an alias for an account",
				"operationId": "",
				"parameters": [
					{
						"name": "email_address",
						"in": "query",
						"description": "An email address",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"email_addresses/email": {
			"post": {
				"summary": "Modify Email",
				"description": "Modifiying a given email address",
				"operationId": "",
				"parameters": [
					{
						"name": "email",
						"in": "query",
						"description": "One of the email addresses associated to the account",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"email_addressestest": {
			"get": {
				"summary": "Email Addresses",
				"description": "List of email addressed used by an account",
				"operationId": "",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"files": {
			"get": {
				"summary": "Get Files",
				"description": "Listings of files found as email attachments",
				"operationId": "",
				"parameters": [
					{
						"name": "bcc",
						"in": "query",
						"description": "Email address of a contact BCCed on the messages.",
						"type": "string"
					},
					{
						"name": "cc",
						"in": "query",
						"description": "Email address of a contact CCed on the messages.",
						"type": "string"
					},
					{
						"name": "date_after",
						"in": "query",
						"description": "Only include files attached to messages sent after a given timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
						"type": "string"
					},
					{
						"name": "date_before",
						"in": "query",
						"description": "Only include files attached to messages sent before a given timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
						"type": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "Email address of the contact for whom you want the latest files exchanged with. By exchanged with contact X we mean any email received from contact X, sent to contact X or sent by anyone to both contact X and the source owner.",
						"type": "string"
					},
					{
						"name": "file_name",
						"in": "query",
						"description": "Search for files based on their name. You can filter names using typical shell wildcards such as *, ? and [] or regular expressions by enclosing the search expression in a leading / and trailing /. For example, *.pdf would give you all PDF files while /\.jpe?g$/ would return all files whose name ends with .jpg or .jpeg",
						"type": "string"
					},
					{
						"name": "file_size_max",
						"in": "query",
						"description": "Search for files based on their size (in bytes).",
						"type": "string"
					},
					{
						"name": "file_size_min",
						"in": "query",
						"description": "Search for files based on their size (in bytes).",
						"type": "string"
					},
					{
						"name": "from",
						"in": "query",
						"description": "Email address of a contact files have been received from.",
						"type": "string"
					},
					{
						"name": "group_by_revisions",
						"in": "query",
						"description": "If set to 1, the list will do an intelligent grouping of files to reflect occurrences of the same document. The grouping algorithm is exactly the same as the one used to get file revisions but only the occurrences matching the filters applied to the list will be included in the results.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "indexed_after",
						"in": "query",
						"description": "Only include files attached to messages indexed after a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
						"type": "string"
					},
					{
						"name": "indexed_before",
						"in": "query",
						"description": "Only include files attached to messages indexed before a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "The maximum number of results to return.  The maximum limit is 100.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Start the list at this offset (zero-based).",
						"type": "string"
					},
					{
						"name": "sort_order",
						"in": "query",
						"description": "The sort order of the returned results. Possible values are asc and desc",
						"type": "string"
					},
					{
						"name": "source",
						"in": "query",
						"description": "Filter messages by the account source label.",
						"type": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Email address of a contact files have been sent to.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email",
					" Files"
				]
			}
		},
		"files/file_id": {
			"get": {
				"summary": "Get File",
				"description": "Details for a given file",
				"operationId": "",
				"parameters": [
					{
						"name": "file_id",
						"in": "path",
						"description": "Unique id of a file",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email",
					" Files"
				]
			}
		},
		"messages/": {
			"post": {
				"summary": "Add Message",
				"description": "Add a message in a given folder",
				"operationId": "",
				"parameters": [
					{
						"name": "dst_folder",
						"in": "query",
						"description": "The folder within dst_source the message should be copied to",
						"type": "string"
					},
					{
						"name": "dst_source",
						"in": "query",
						"description": "Label of the source you want the message copied to",
						"type": "string"
					},
					{
						"name": "flag_answered",
						"in": "query",
						"description": "Message has been answered. Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "flag_deleted",
						"in": "query",
						"description": "Message is deleted for later removal. An alternative way of deleting messages is to move it to the Trash folder. Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "flag_draft",
						"in": "query",
						"description": "Message has not completed composition (marked as a draft). Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "flag_flagged",
						"in": "query",
						"description": "Message is flagged for urgent/special attention. Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "flag_seen",
						"in": "query",
						"description": "Message has been read. Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Raw RFC-822 message data. If you use the view message source function of your email client, what youll see there is what we expect to receive here. Hint: you can get this with the accounts/messages/source call.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages/{message_id}": {
			"post": {
				"summary": "Copy or Move Message",
				"description": "Copy or move a message",
				"operationId": "",
				"parameters": [
					{
						"name": "dst_folder",
						"in": "query",
						"description": "The folder within dst_source the message should be copied to",
						"type": "string"
					},
					{
						"name": "dst_source",
						"in": "query",
						"description": "Label of the source you want the message copied to. This field is required if youre moving a message that already exists in one source of the account to another source of that account. If you only want to move the message to a different folder within the same source, dst_folder is sufficient.",
						"type": "string"
					},
					{
						"name": "flag_answered",
						"in": "query",
						"description": "Message has been answered. Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "flag_deleted",
						"in": "query",
						"description": "Message is deleted for later removal. An alternative way of deleting messages is to move it to the Trash folder. Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "flag_draft",
						"in": "query",
						"description": "Message has not completed composition (marked as a draft). Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "flag_flagged",
						"in": "query",
						"description": "Message is flagged for urgent/special attention. Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "flag_seen",
						"in": "query",
						"description": "Message has been read. Set this parameter to 1 to set the flag, 0 to unset it.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "message_id",
						"in": "path",
						"description": "Unique id of a message. This can be the message_id or email_message_id property of the message. The gmail_message_id (prefixed with gm-) can also be used.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "move",
						"in": "query",
						"description": "By default, this calls copies the original message in the destination. Set this parameter to 1 to move instead of copy.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"sources/": {
			"post": {
				"summary": "Add Mailbox",
				"description": "Add a mailbox to a given account",
				"operationId": "",
				"parameters": [
					{
						"name": "callback_url",
						"in": "query",
						"description": "If specified, well make a POST request to this URL when the initial sync is completed.",
						"type": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "The primary email address used to receive emails in this account",
						"type": "string"
					},
					{
						"name": "expunge_on_deleted_flag",
						"in": "query",
						"description": "By default, we dont filter out messages flagged as deleted. Set this parameter to  1 to turn on this filtering.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "origin_ip",
						"in": "query",
						"description": "IP address of the end user requesting the account to be created",
						"type": "string"
					},
					{
						"name": "password",
						"in": "query",
						"description": "Password for authentication on the IMAP server. Ignored if any of the provider_* parameters are set below.",
						"type": "string"
					},
					{
						"name": "port",
						"in": "query",
						"description": "Port number to connect to on the server. Keep in mind that most IMAP servers will have one port for standard connection and another one for encrypted connection (see use-ssl parameter above)",
						"type": "string"
					},
					{
						"name": "provider_consumer_key",
						"in": "query",
						"description": "The OAuth2 Client ID or OAuth1 consumer key used to obtain the the token and token secret above for that account. That consumer key and secret must be configured in your Context.IO account, see oauth_providers",
						"type": "string"
					},
					{
						"name": "provider_refresh_token",
						"in": "query",
						"description": "An OAuth2 refresh token obtained from the IMAP account provider to be used to authentify on this email account.",
						"type": "string"
					},
					{
						"name": "provider_token",
						"in": "query",
						"description": "An OAuth1 token obtained from the IMAP account provider to be used to authentify on this email account.",
						"type": "string"
					},
					{
						"name": "provider_token_secret",
						"in": "query",
						"description": "An OAuth1 token secret obtained from the IMAP account provider to be used to authentify on this email account..",
						"type": "string"
					},
					{
						"name": "raw_file_list",
						"in": "query",
						"description": "By default, we filter out files like signature images or those winmail.dat files form the files list. Set this parameter to 1 to turn off this filtering and show every single file attachments.",
						"type": "string"
					},
					{
						"name": "server",
						"in": "query",
						"description": "Name of IP of the IMAP server, eg. imap.gmail.com",
						"type": "string"
					},
					{
						"name": "sync_all_folders",
						"in": "query",
						"description": "By default, we filter out some folders like Deleted Items and Drafts. Set this parameter to  1 to turn off this filtering and show every single folder.",
						"type": "string"
					},
					{
						"name": "sync_flags",
						"in": "query",
						"description": "By default, we dont synchronize IMAP flags. Set this parameter to  1 to turn on IMAP flag syncing for the seen and flagged flags.",
						"type": "string"
					},
					{
						"name": "sync_folders",
						"in": "query",
						"description": "By default, we filter out some folders like Deleted Items and Drafts. Set this parameter to  All,Trash to show the Deleted Items folder.",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Currently, the only supported type is IMAP",
						"type": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "The username used to authentify an IMAP connection. On some servers, this is the same thing as the primary email address.",
						"type": "string"
					},
					{
						"name": "use_ssl",
						"in": "query",
						"description": "Set to 1 if you want SSL encryption to be used when opening connections to the IMAP server. Any other value will be considered as do not use SSL",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"sources/{label}": {
			"post": {
				"summary": "Modify Source",
				"description": " Modify a data source on a given account",
				"operationId": "",
				"parameters": [
					{
						"name": "expunge_on_deleted_flag",
						"in": "query",
						"description": "By default, we dont filter out messages flagged as deleted. Set this parameter to  1 to turn on this filtering.",
						"type": "string"
					},
					{
						"name": "force_status_check",
						"in": "query",
						"description": "Set to 1 to create an IMAP connection and reset the source status to to one reported by the IMAP backend. Dont combine this with other parameters.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "lable",
						"in": "path",
						"description": "The label property of the source instance. You can use 0 as an alias for the first source of an account.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "password",
						"in": "query",
						"description": "New password for this source. Ignored if any of the provider_* parameters are set below.",
						"type": "string"
					},
					{
						"name": "provider_consumer_key",
						"in": "query",
						"description": "The OAuth2 Client ID or OAuth1 consumer key used to obtain the the token and token secret above for that account. That consumer key and secret must be configured in your Context.IO account, see oauth_providers",
						"type": "string"
					},
					{
						"name": "provider_refresh_token",
						"in": "query",
						"description": "An OAuth2 refresh token obtained from the IMAP account provider to be used to authentify on this email account.",
						"type": "string"
					},
					{
						"name": "provider_token",
						"in": "query",
						"description": "An OAuth1 token obtained from the IMAP account provider to be used to authentify on this email account.",
						"type": "string"
					},
					{
						"name": "provider_token_secret",
						"in": "query",
						"description": "An OAuth1 token secret obtained from the IMAP account provider to be used to authentify on this email account..",
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "If the status of the source is TEMP_DISABLED or DISABLED. You can do a POST/PUT with status set to 1 to reset it.",
						"type": "string"
					},
					{
						"name": "sync_all_folders",
						"in": "query",
						"description": "By default, we filter out some folders like Deleted Items and Drafts. Set this parameter to  1 to turn off this filtering and show every single folder.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"threads/": {
			"get": {
				"summary": "Get Threads",
				"description": "List of threads on an account",
				"operationId": "",
				"parameters": [
					{
						"name": "active_after",
						"in": "query",
						"description": "Get threads with at least one message dated after this timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
						"type": "string"
					},
					{
						"name": "active_before",
						"in": "query",
						"description": "Get threads with at least one message dated before this timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
						"type": "string"
					},
					{
						"name": "bcc",
						"in": "query",
						"description": "Get threads with at least one message having this email address BCCed.",
						"type": "string"
					},
					{
						"name": "cc",
						"in": "query",
						"description": "Get threads with at least one message having this email address CCed.",
						"type": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "Email address of the contact for whom you want the latest threads. This value is interpreted as received from email X, sent to email X or sent by anyone to both email X and the source owner.",
						"type": "string"
					},
					{
						"name": "folder",
						"in": "query",
						"description": "Filter threads by the folder (or Gmail label). This parameter can be the complete folder name with the appropriate hierarchy delimiter for the mail server being queried (eg. Inbox/My folder) or the symbolic name of the folder (eg. \Starred). The symbolic name refers to attributes used to refer to special use folders in a language-independant way. See http://code.google.com/apis/gmail/imap/#xlist (Gmail specific) and RFC-6154.",
						"type": "string"
					},
					{
						"name": "from",
						"in": "query",
						"description": "Get threads with at least one message sent from this email address.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "indexed_after",
						"in": "query",
						"description": "Get threads with at least one message indexed after this timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
						"type": "string"
					},
					{
						"name": "indexed_before",
						"in": "query",
						"description": "Get threads with at least one message indexed before this timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "The maximum number of results to return.  The maximum limit is 100.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Start the list at this offset (zero-based).",
						"type": "string"
					},
					{
						"name": "started_after",
						"in": "query",
						"description": "Get threads whose first message is dated after this timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
						"type": "string"
					},
					{
						"name": "started_before",
						"in": "query",
						"description": "Get threads whose first message is dated before this timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
						"type": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "Get threads with messages whose subject matches this search string. To use regular expressions instead of simple string matching, make sure the string starts and ends with /.",
						"type": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Get threads with at least one message sent to this email address.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"threads/{thread_id}": {
			"get": {
				"summary": "Return Thread",
				"description": "Returns files, contacts and messages on a given thread",
				"operationId": "",
				"parameters": [
					{
						"name": "body_type",
						"in": "query",
						"description": "Used when include_body is set to get only body parts of a given MIME-type (for example text/html)",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "include_body",
						"in": "query",
						"description": "Set to 1 to include message bodies in the result. Since message bodies must be retrieved from the IMAP server, expect a performance hit when setting this parameter.",
						"type": "string"
					},
					{
						"name": "include_flags",
						"in": "query",
						"description": "Set to 1 to include IMAP flags of messages in the result. Since message flags must be retrieved from the IMAP server, expect a performance hit when setting this parameter.",
						"type": "string"
					},
					{
						"name": "include_headers",
						"in": "query",
						"description": "Can be set to 0 (default), 1 or raw. If set to 1, complete message headers, parsed into an array, are included in the results. If set to raw, the headers are also included but as a raw unparsed string. Since full original headers bodies must be retrieved from the IMAP server, expect a performance hit when setting this parameter.",
						"type": "string"
					},
					{
						"name": "include_source",
						"in": "query",
						"description": "Set to 1 to include message sources in the result. Since message sources must be retrieved from the IMAP server, expect a performance hit when setting this parameter.",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "The maximum number of messages to include in the messages property of the response.  The maximum limit is 100.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Start the list of messages at this offset (zero-based).",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		}
	}
}