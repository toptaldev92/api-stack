{
	"swagger": "2.0",
	"info": {
		"title": "Pearson Dictionaries",
		"description": "The new Dictionaries API, which has now come out of beta, has been introduced to provide a simplified and consistent API to access content from multiple different dictionaries, while enhancing the ability to find and use data from within the dictionaries.",
		"termsOfService": "http://developer.pearson.com/terms-and-conditions",
		"version": null
	},
	"host": "api.pearson.com",
	"basePath": "/v2/dictionaries",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/books": {
			"": {
				"summary": "List books available in collection",
				"description": "",
				"operationId": "listBooks",
				"parameters": [
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the limit of the number of items returned in the collection",
						"type": "int"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Zero based index of where to start in the collection",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Search for books with matching title in their title",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/courses": {
			"": {
				"summary": "List available courses",
				"description": "",
				"operationId": "listCourses",
				"parameters": [
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the limit of the number of items returned in the collection",
						"type": "int"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Zero based index of where to start in the collection",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/cuisines": {
			"": {
				"summary": "List available cuisines",
				"description": "",
				"operationId": "listCuisines",
				"parameters": [
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the limit of the number of items returned in the collection",
						"type": "int"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Zero based index of where to start in the collection",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/recipes": {
			"": {
				"summary": "List available recipes",
				"description": "",
				"operationId": "listRecipes",
				"parameters": [
					{
						"name": "cuisine",
						"in": "query",
						"description": "Type of cuisine to search for. For example, French, American or British",
						"type": "string"
					},
					{
						"name": "ingredients-all",
						"in": "query",
						"description": "Comma-separated list of ingredients, all of which should be in the recipe",
						"type": "string"
					},
					{
						"name": "ingredients-any",
						"in": "query",
						"description": "Comma-separated list of ingredients, any of which should be in the recipe",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the limit of the number of items returned in the collection",
						"type": "int"
					},
					{
						"name": "method",
						"in": "query",
						"description": "The cooking method used for a recipe. For example, roast or boil",
						"type": "string"
					},
					{
						"name": "name-contains",
						"in": "query",
						"description": "Find named recipes",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Zero based index of where to start in the collection",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/articles": {
			"": {
				"summary": "List articles available in collection",
				"description": "",
				"operationId": "listArticles",
				"parameters": [
					{
						"name": "content",
						"in": "query",
						"description": "Search for articles with matching text in their content",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the limit of the number of items returned in the collection",
						"type": "int"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Zero based index of where to start in the collection",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Search for articles with matching text in their title",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/articles/{Id}": {
			"": {
				"summary": "Get article from collection",
				"description": "",
				"operationId": "showArticle",
				"parameters": [
					{
						"name": "content-fmt",
						"in": "query",
						"description": "Get the article content in the given format",
						"type": "string"
					},
					{
						"name": "Id",
						"in": "path",
						"description": "ID of article to get",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/books/{Id}": {
			"": {
				"summary": "Get book from collection",
				"description": "",
				"operationId": "showBook",
				"parameters": [
					{
						"name": "Id",
						"in": "path",
						"description": "ID of book to get",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/sections": {
			"": {
				"summary": "List sections available in collection",
				"description": "",
				"operationId": "listSections",
				"parameters": [
					{
						"name": "content",
						"in": "query",
						"description": "Search for sections with matching text in their content",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the limit of the number of items returned in the collection",
						"type": "int"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Zero based index of where to start in the collection",
						"type": "int"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Search for sections with matching text in their title",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/sections/{Id}": {
			"": {
				"summary": "Get section from collection",
				"description": "",
				"operationId": "showArticle",
				"parameters": [
					{
						"name": "content-fmt",
						"in": "query",
						"description": "Get the section content in the given format",
						"type": "string"
					},
					{
						"name": "Id",
						"in": "path",
						"description": "ID of section to get",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/authors": {
			"": {
				"summary": "List authors available in collection",
				"description": "",
				"operationId": "listAuthors",
				"parameters": [
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the limit of the number of items returned in the collection",
						"type": "int"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Search for authors with matching text in their name",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Zero based index of where to start in the collection",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/authors/{Id}": {
			"": {
				"summary": "Get author from collection",
				"description": "",
				"operationId": "showAuthor",
				"parameters": [
					{
						"name": "Id",
						"in": "path",
						"description": "ID of author to get",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/entries": {
			"": {
				"summary": "List entries available in dictionaries",
				"description": "",
				"operationId": "listEntries",
				"parameters": [
					{
						"name": "audio",
						"in": "query",
						"description": "Limit search to entries containing audio links (can be effects,pronunciation or example)",
						"type": "string"
					},
					{
						"name": "headword",
						"in": "query",
						"description": "Search for entries with the given headword",
						"type": "string"
					},
					{
						"name": "images",
						"in": "query",
						"description": "Limit search to entries containing image links (currently only picture is supported)",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the limit of the number of items returned in the collection",
						"type": "int"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Zero based index of where to start in the collection",
						"type": "int"
					},
					{
						"name": "part_of_speech",
						"in": "query",
						"description": "Limit search results to entries with the matching part of speech (ie noun,verb)",
						"type": "string"
					},
					{
						"name": "phrasal_verbs",
						"in": "query",
						"description": "Search for entries with matching phrasal verbs",
						"type": "string"
					},
					{
						"name": "related_words",
						"in": "query",
						"description": "Search for entries that are related with the given word",
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Generic text search across all entries (searchs all entry fields) ",
						"type": "string"
					},
					{
						"name": "synonyms",
						"in": "query",
						"description": "Search for entries that are synonyms for the given word",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/entries/{Id}": {
			"": {
				"summary": "Show selected entry",
				"description": "",
				"operationId": "showEntry",
				"parameters": [
					{
						"name": "Id",
						"in": "path",
						"description": "Id of the entry in the dictionary",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{dictionary}/entries": {
			"": {
				"summary": "List entries available in the given dictionary",
				"description": "",
				"operationId": "listDictionaryEntries",
				"parameters": [
					{
						"name": "audio",
						"in": "query",
						"description": "Limit search to entries containing audio links (can be effects,pronunciation or example)",
						"type": "string"
					},
					{
						"name": "dictionary",
						"in": "path",
						"description": "Dictionary to list entries for",
						"type": "string"
					},
					{
						"name": "headword",
						"in": "query",
						"description": "Search for entries with the given headword",
						"type": "string"
					},
					{
						"name": "images",
						"in": "query",
						"description": "Limit search to entries containing image links (currently only picture is supported)",
						"type": "string"
					},
					{
						"name": "jsonp",
						"in": "query",
						"description": "JSON callback wrapper name",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the limit of the number of items returned in the collection",
						"type": "int"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Zero based index of where to start in the collection",
						"type": "int"
					},
					{
						"name": "part_of_speech",
						"in": "query",
						"description": "Limit search results to entries with the matching part of speech (ie noun,verb)",
						"type": "string"
					},
					{
						"name": "phrasal_verbs",
						"in": "query",
						"description": "Search for entries with matching phrasal verbs",
						"type": "string"
					},
					{
						"name": "related_words",
						"in": "query",
						"description": "Search for entries that are related with the given word",
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Generic text search across all entries (searchs all entry fields) ",
						"type": "string"
					},
					{
						"name": "synonyms",
						"in": "query",
						"description": "Search for entries that are synonyms for the given word",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	}
}