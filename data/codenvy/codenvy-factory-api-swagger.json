{
	"swagger": "2.0",
	"info": {
		"title": "Codenvy Factory API",
		"description": "This is the factory API for Codenvy.",
		"termsOfService": null,
		"version": null
	},
	"host": "/factory",
	"basePath": "https://codenvy.com/api",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/factory": {
			"post": {
				"summary": "Create a Factory and return data",
				"description": "Save factory to storage and return stored data. Field factoryUrl should contains factory url information.",
				"operationId": "saveFactory",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/factory/{factoryId}/image": {
			"get": {
				"summary": "Get Factory image information",
				"description": "Get Factory image information by Factory and image ID",
				"operationId": "getImage",
				"parameters": [{
					"in": "path",
					"name": "factoryId",
					"description": "Factory ID"
				},
				{
					"in": "query",
					"name": "imgId",
					"description": "Image ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/factory/{id}": {
			"delete": {
				"summary": "Removes Factory information by its ID",
				"description": "Removes factory based on the Factory ID which is passed in a path parameter",
				"operationId": "removeFactory",
				"parameters": [{
					"in": "path",
					"name": "id",
					"description": "Factory ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			},
			"get": {
				"summary": "Get Factory information by its ID",
				"description": "Get JSON with Factory information. Factory ID is passed in a path parameter",
				"operationId": "getFactory",
				"parameters": [{
					"in": "path",
					"name": "id",
					"description": "Factory ID"
				},
				{
					"in": "query",
					"name": "legacy",
					"description": "Legacy. Whether or not to transform Factory into the most recent format"
				},
				{
					"in": "query",
					"name": "validate",
					"description": "Whether or not to validate values like it is done when accepting a Factory"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			},
			"put": {
				"summary": "Updates factory information by its ID",
				"description": "Updates factory based on the Factory ID which is passed in a path parameter",
				"operationId": "updateFactory",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "id",
					"description": "Factory ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/factory/{id}/snippet": {
			"get": {
				"summary": "Get Factory snippet by ID",
				"description": "Get Factory snippet by ID",
				"operationId": "getFactorySnippet",
				"parameters": [{
					"in": "path",
					"name": "id",
					"description": "Factory ID"
				},
				{
					"in": "query",
					"name": "type",
					"description": "Snippet type"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		}
	},
	"definitions": {
		"RequestBodyDescriptor": {
			"properties": {
				"description": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"Factory": {
			"properties": {
				"links": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"Link": {
			"properties": {
				"rel": {
					"description": "",
					"type": "GET"
				},
				"href": {
					"description": "",
					"type": "GET"
				},
				"produces": {
					"description": "",
					"type": "GET"
				},
				"consumes": {
					"description": "",
					"type": "GET"
				},
				"requestBody": {
					"description": "",
					"type": "GET"
				},
				"method": {
					"description": "",
					"type": "GET"
				},
				"parameters": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"LinkParameter": {
			"properties": {
				"required": {
					"description": "",
					"type": "GET"
				},
				"valid": {
					"description": "",
					"type": "GET"
				},
				"description": {
					"description": "",
					"type": "GET"
				},
				"name": {
					"description": "",
					"type": "GET"
				},
				"type": {
					"description": "",
					"type": "GET"
				},
				"defaultValue": {
					"description": "",
					"type": "GET"
				}
			}
		}
	}
}