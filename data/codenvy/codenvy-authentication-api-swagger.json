{
	"swagger": "2.0",
	"info": {
		"title": "Codenvy Authentication API",
		"description": "This is the authentication API for Codenvy.",
		"termsOfService": null,
		"version": null
	},
	"host": "/auth",
	"basePath": "https://codenvy.com/api",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/auth/login": {
			"post": {
				"summary": "Login",
				"description": "Login to a Codenvy account. Either auth token or cookie are used",
				"operationId": "authenticate",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "cookie",
					"name": "session-access-key",
					"description": "Existing auth cookie. It is used to get deleted to a obtain new cookie"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/auth/logout": {
			"post": {
				"summary": "Logout",
				"description": "Logout from a Codenvy account",
				"operationId": "logout",
				"parameters": [{
					"in": "cookie",
					"name": "session-access-key",
					"description": "Existing auth cookie. It is used to get deleted to a obtain new cookie"
				},
				{
					"in": "query",
					"name": "token",
					"description": "Auth token"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"artist/browse": {
			"get ": {
				"summary": "artist/browse",
				"description": "This method returns a list of artists from the 7digital catalogue whose names match the start letter(s) supplied.",
				"operationId": "artistbrowse",
				"parameters": [{
					"in": "query",
					"name": ""
				},
				{
					"in": "query",
					"name": "artistId",
					"description": "unique identifier of the artist"
				},
				{
					"in": "query",
					"name": "country",
					"description": "nttttttt 2 letter ISO country code of the country whose releases you would like to searchntttttt "
				},
				{
					"in": "query",
					"name": "imageSize",
					"description": "nttttttt The requested width of the image in pixelsntttttt "
				},
				{
					"in": "query",
					"name": "letter",
					"description": "The first letter(s) of the artist name to browse."
				},
				{
					"in": "query",
					"name": "page",
					"description": "Page number of the result set. If not supplied, defaults to 1"
				},
				{
					"in": "query",
					"name": "pageSize",
					"description": "Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50"
				},
				{
					"in": "query",
					"name": "period",
					"description": "The time period for which the chart is generated. Default value is a week."
				},
				{
					"in": "query",
					"name": "streamable",
					"description": "If provided search results will contain only releases that can/cannot be streamed"
				},
				{
					"in": "query",
					"name": "toDate",
					"description": "The last day the chart should include data for. If not provided, by default the most recent chart for requested period will be returned."
				},
				{
					"in": "query",
					"name": "type",
					"description": "Releases can be of type album, single or video. If specified, results are filtered by release type."
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"release/chart": {
			"get ": {
				"summary": "release/chart",
				"description": "This endpoint returns a chart of the most purchased releases for given week. Only albums are included in this chart. To retrieve the most recent charts as published on 7digital.com the toDate parameter should be omitted.",
				"operationId": "releasechart",
				"parameters": [{
					"in": "query",
					"name": ""
				},
				{
					"in": "query",
					"name": "country",
					"description": "nttttttt 2 letter ISO country code of the country whose releases you would like to viewntttttt "
				},
				{
					"in": "query",
					"name": "imageSize",
					"description": "nttttttt The requested width of the image in pixelsntttttt "
				},
				{
					"in": "query",
					"name": "page",
					"description": "Page number of the result set. If not supplied, defaults to 1"
				},
				{
					"in": "query",
					"name": "pageSize",
					"description": "Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50"
				},
				{
					"in": "query",
					"name": "streamable",
					"description": "If provided search results will contain only releases that can/cannot be streamed"
				},
				{
					"in": "query",
					"name": "toDate",
					"description": "The last day the chart should include data for. If not provided, it defaults to the most recent chart week."
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"tag": {
			"get ": {
				"summary": "tag",
				"description": "This method returns a list of all available tags.",
				"operationId": "tag",
				"parameters": [{
					"in": "query",
					"name": ""
				},
				{
					"in": "query",
					"name": "artistId",
					"description": "The unique identifier of the artist."
				},
				{
					"in": "query",
					"name": "country",
					"description": "nttttttt2 letter ISO country code of the country whose artists you would like to searchntttttt"
				},
				{
					"in": "query",
					"name": "imageSize",
					"description": "ntttttttThe requested width of the image in pixelsntttttt"
				},
				{
					"in": "query",
					"name": "page",
					"description": "Page number of the result set. If not supplied, defaults to 1"
				},
				{
					"in": "query",
					"name": "pageSize",
					"description": "Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50"
				},
				{
					"in": "query",
					"name": "streamable",
					"description": "If provided search results will contain only artists that can/cannot be streamed"
				},
				{
					"in": "query",
					"name": "tags",
					"description": "A single or comma separated list of tags."
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"track/chart": {
			"get ": {
				"summary": "track/chart",
				"description": "This endpoint returns a chart of the most purchased tracks for given week. To retrieve the most recent charts as published on 7digital.com the toDate parameter should be omitted.",
				"operationId": "trackchart",
				"parameters": [{
					"in": "query",
					"name": ""
				},
				{
					"in": "query",
					"name": "country",
					"description": "2 letter ISO country code of the country whose tracks you would like to search"
				},
				{
					"in": "query",
					"name": "imageSize",
					"description": "The requested width of the image in pixels"
				},
				{
					"in": "query",
					"name": "page",
					"description": "Page number of the result set. If not supplied, defaults to 1"
				},
				{
					"in": "query",
					"name": "pageSize",
					"description": "Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50"
				},
				{
					"in": "query",
					"name": "streamable",
					"description": "If provided search results will contain only tracks that can/cannot be streamed"
				},
				{
					"in": "query",
					"name": "toDate",
					"description": "The last day the chart should include data for. If not provided, it defaults to the most recent chart week."
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		}
	},
	"definitions": {
		"Token": {
			"properties": {
				"value": {
					"description": "",
					"type": "POST"
				}
			}
		},
		"Cookie": {
			"properties": {
				"name": {
					"description": "",
					"type": "POST"
				},
				"value": {
					"description": "",
					"type": "POST"
				},
				"version": {
					"description": "",
					"type": "POST"
				},
				"path": {
					"description": "",
					"type": "POST"
				},
				"domain": {
					"description": "",
					"type": "POST"
				}
			}
		},
		"Credentials": {
			"properties": {
				"password": {
					"description": "",
					"type": "POST"
				},
				"realm": {
					"description": "",
					"type": "POST"
				},
				"username": {
					"description": "",
					"type": "POST"
				}
			}
		}
	}
}