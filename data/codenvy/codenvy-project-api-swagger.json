{
	"swagger": "2.0",
	"info": {
		"title": "Codenvy Project API",
		"description": "This is the project API for Codenvy.",
		"termsOfService": null,
		"version": null
	},
	"host": "/project",
	"basePath": "https://codenvy.com/api",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/project/{ws-id}": {
			"get": {
				"summary": "Gets list of projects in root folder",
				"description": "",
				"operationId": "getProjects",
				"parameters": [{
					"in": "path",
					"name": "ws-id",
					"description": "ID of workspace to get projects"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			},
			"post": {
				"summary": "Creates new project",
				"description": "",
				"operationId": "createProject",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "query",
					"name": "name",
					"description": "Name for new project"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "ID of workspace to create project"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/children/{parent:.*}": {
			"get": {
				"summary": "Get project children items",
				"description": "Request all children items for a project, such as files and folders",
				"operationId": "getChildren",
				"parameters": [{
					"in": "path",
					"name": "parent",
					"description": "Path to a project"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/copy/{path:.*}": {
			"post": {
				"summary": "Copy resource",
				"description": "Copy resource to a new location which is specified in a query parameter",
				"operationId": "copy",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to a resource"
				},
				{
					"in": "query",
					"name": "to",
					"description": "Path to a new location"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/estimate/{path:.*}": {
			"get": {
				"summary": "Estimates if the folder supposed to be project of certain type",
				"description": "",
				"operationId": "estimateProject",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to requested project"
				},
				{
					"in": "query",
					"name": "type",
					"description": "Project Type ID to estimate against"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "ID of workspace to estimate projects"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/export/{path:.*}": {
			"get": {
				"summary": "Download ZIP",
				"description": "Export resource as zip. It can be an entire project or folder",
				"operationId": "exportZip",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to resource to be imported"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/file/{parent:.*}": {
			"post": {
				"summary": "Create file",
				"description": "Create a new file in a project. If file type isnt specified the server will resolve its type.",
				"operationId": "createFile",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "header",
					"name": "content-type",
					"description": "New file content type"
				},
				{
					"in": "query",
					"name": "name",
					"description": "New file name"
				},
				{
					"in": "path",
					"name": "parent",
					"description": "Path to a target directory"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/file/{path:.*}": {
			"get": {
				"summary": "Get file content",
				"description": "Get file content by its name",
				"operationId": "getFile",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to a file"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			},
			"put": {
				"summary": "Update file",
				"description": "Update an existing file with new content",
				"operationId": "updateFile",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "header",
					"name": "content-type",
					"description": "Media Type"
				},
				{
					"in": "path",
					"name": "path",
					"description": "Full path to a file"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/folder/{path:.*}": {
			"post": {
				"summary": "Create a folder",
				"description": "Create a folder is a specified project",
				"operationId": "createFolder",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to a new folder destination"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/import/{path:.*}": {
			"post": {
				"summary": "Import resource",
				"description": "Import resource. JSON with a designated importer and project location is sent. It is possible to import from VCS or ZIP",
				"operationId": "importProject",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "query",
					"name": "force",
					"description": "Force rewrite existing project"
				},
				{
					"in": "path",
					"name": "path",
					"description": "Path in the project"
				},
				{
					"in": "query",
					"name": "skipFirstLevel"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/item/{path:.*}": {
			"get": {
				"summary": "Get file or folder",
				"description": "",
				"operationId": "getItem",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to resource. Can be project or its folders"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/modules/{path:.*}": {
			"get": {
				"summary": "Get project modules",
				"description": "Get project modules. Roles allowed: system/admin, system/manager.",
				"operationId": "getModules",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to a project"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/move/{path:.*}": {
			"post": {
				"summary": "Move resource",
				"description": "Move resource to a new location which is specified in a query parameter",
				"operationId": "move",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to a resource to be moved"
				},
				{
					"in": "query",
					"name": "to",
					"description": "Path to a new location"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/permissions/{path:.*}": {
			"get": {
				"summary": "Get user permissions in a project",
				"description": "Get permissions for a user in a specified project, such as read, write, build, run etc. ID of a user is set in a query parameter of a request URL.",
				"operationId": "getPermissions",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to a project"
				},
				{
					"in": "query",
					"name": "userid",
					"description": "User ID"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			},
			"post": {
				"summary": "Set permissions for a user in a project",
				"description": "Set permissions for a user in a specified project, such as read, write, build, run etc. ID of a user is set in a query parameter of a request URL.",
				"operationId": "setPermissions",
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Permissions",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "path",
					"description": "Path to a project"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/rename/{path:.*}": {
			"post": {
				"summary": "Rename resource",
				"description": "Rename resources. It can be project, module, folder or file",
				"operationId": "rename",
				"parameters": [{
					"in": "query",
					"name": "mediaType",
					"description": "New media type"
				},
				{
					"in": "query",
					"name": "name",
					"description": "New name"
				},
				{
					"in": "path",
					"name": "path",
					"description": "Path to resource to be renamed"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/runner_environments/{path:.*}": {
			"get": {
				"summary": "Get available project-scoped runner environments",
				"description": "Get available project-scoped runner environments.",
				"operationId": "getRunnerEnvironments",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to a project"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/search/{path:.*}": {
			"get": {
				"summary": "Search for resources",
				"description": "Search for resources applying a number of search filters as query parameters",
				"operationId": "search",
				"parameters": [{
					"in": "query",
					"name": "maxItems",
					"description": "Maximum items to display. If this parameter is dropped, there are no limits"
				},
				{
					"in": "query",
					"name": "mediatype",
					"description": "Media type"
				},
				{
					"in": "query",
					"name": "name",
					"description": "Resource name"
				},
				{
					"in": "path",
					"name": "path",
					"description": "Path to resource, i.e. where to search?"
				},
				{
					"in": "query",
					"name": "skipCount",
					"description": "Skip count"
				},
				{
					"in": "query",
					"name": "text",
					"description": "Search keywords"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/switch_visibility/{path:.*}": {
			"post": {
				"summary": "Set project visibility",
				"description": "Set project visibility. Projects can be private or public",
				"operationId": "switchVisibility",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to a project"
				},
				{
					"in": "query",
					"name": "visibility",
					"description": "Visibility type"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/tree/{parent:.*}": {
			"get": {
				"summary": "Get project tree",
				"description": "Get project tree. Depth is specified in a query parameter",
				"operationId": "getTree",
				"parameters": [{
					"in": "query",
					"name": "depth",
					"description": "Tree depth. This parameter can be dropped. If not specified ?depth=1 is used by default"
				},
				{
					"in": "path",
					"name": "parent",
					"description": "Path to resource. Can be project or its folders"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/upload/zipfolder/{path:.*}": {
			"post": {
				"summary": "Upload zip folder",
				"description": "Upload folder from local zip",
				"operationId": "uploadFolderFromZip",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "path",
					"description": "Path in the project"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/upload/zipproject/{path:.*}": {
			"post": {
				"summary": "Upload zip project",
				"description": "Upload project from local zip",
				"operationId": "uploadProjectFromZip",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "query",
					"name": "force",
					"description": "Force rewrite existing project"
				},
				{
					"in": "path",
					"name": "path",
					"description": "Path in the project"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/uploadfile/{parent:.*}": {
			"post": {
				"summary": "Upload a file",
				"description": "Upload a new file",
				"operationId": "uploadFile",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "parent",
					"description": "Destination path"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		},
		"/project/{ws-id}/{path:.*}": {
			"delete": {
				"summary": "Delete a resource",
				"description": "Delete resources. If you want to delete a single project, specify project name. If a folder or file needs to be deleted a path to the requested resource needs to be specified",
				"operationId": "delete",
				"parameters": [{
					"in": "query",
					"name": "module"
				},
				{
					"in": "path",
					"name": "path",
					"description": "Path to a resource to be deleted"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			},
			"get": {
				"summary": "Gets project by ID of workspace and project's path",
				"description": "",
				"operationId": "getProject",
				"parameters": [{
					"in": "path",
					"name": "path",
					"description": "Path to requested project"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "ID of workspace to get projects"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			},
			"post": {
				"summary": "Create a new module",
				"description": "Create a new module in a specified project",
				"operationId": "createModule",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "path",
					"description": "Path to a target directory"
				},
				{
					"in": "query",
					"name": "path",
					"description": "New module name"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "Workspace ID"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			},
			"put": {
				"summary": "Updates existing project",
				"description": "",
				"operationId": "updateProject",
				"parameters": [{
					"in": "body",
					"name": "body",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "path",
					"description": "Path to updated project"
				},
				{
					"in": "path",
					"name": "ws-id",
					"description": "ID of workspace"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		}
	},
	"definitions": {
		"ItemReference": {
			"properties": {
				"mediaType": {
					"description": "",
					"type": "GET"
				},
				"created": {
					"description": "",
					"type": "GET"
				},
				"modified": {
					"description": "",
					"type": "GET"
				},
				"name": {
					"description": "",
					"type": "GET"
				},
				"type": {
					"description": "",
					"type": "GET"
				},
				"path": {
					"description": "",
					"type": "GET"
				},
				"attributes": {
					"description": "",
					"type": "GET"
				},
				"contentLength": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"Principal": {
			"properties": {
				"name": {
					"description": "",
					"type": "GET"
				},
				"type": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"SourceEstimation": {
			"properties": {
				"type": {
					"description": "",
					"type": "GET"
				},
				"attributes": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"RunnerEnvironmentLeaf": {
			"properties": {
				"displayName": {
					"description": "",
					"type": "GET"
				},
				"environment": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"EntityTag": {
			"properties": {
				"value": {
					"description": "",
					"type": "GET"
				},
				"weak": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"URI": {
			"properties": {
				"scheme": {
					"description": "",
					"type": "GET"
				},
				"fragment": {
					"description": "",
					"type": "GET"
				},
				"authority": {
					"description": "",
					"type": "GET"
				},
				"userInfo": {
					"description": "",
					"type": "GET"
				},
				"host": {
					"description": "",
					"type": "GET"
				},
				"port": {
					"description": "",
					"type": "GET"
				},
				"path": {
					"description": "",
					"type": "GET"
				},
				"query": {
					"description": "",
					"type": "GET"
				},
				"schemeSpecificPart": {
					"description": "",
					"type": "GET"
				},
				"absolute": {
					"description": "",
					"type": "GET"
				},
				"opaque": {
					"description": "",
					"type": "GET"
				},
				"rawAuthority": {
					"description": "",
					"type": "GET"
				},
				"rawFragment": {
					"description": "",
					"type": "GET"
				},
				"rawPath": {
					"description": "",
					"type": "GET"
				},
				"rawQuery": {
					"description": "",
					"type": "GET"
				},
				"rawSchemeSpecificPart": {
					"description": "",
					"type": "GET"
				},
				"rawUserInfo": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"StatusType": {
			"properties": {
				"reasonPhrase": {
					"description": "",
					"type": "GET"
				},
				"statusCode": {
					"description": "",
					"type": "GET"
				},
				"family": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"ProjectProblem": {
			"properties": {
				"code": {
					"description": "",
					"type": "GET"
				},
				"message": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"ProjectUpdate": {
			"properties": {
				"mixinTypes": {
					"description": "",
					"type": "GET"
				},
				"type": {
					"description": "",
					"type": "GET"
				},
				"description": {
					"description": "",
					"type": "GET"
				},
				"visibility": {
					"description": "",
					"type": "GET"
				},
				"attributes": {
					"description": "",
					"type": "GET"
				},
				"builders": {
					"description": "",
					"type": "GET"
				},
				"runners": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"BuildersDescriptor": {
			"properties": {
				"configs": {
					"description": "",
					"type": "GET"
				},
				"default": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"NewProject": {
			"properties": {
				"generatorDescription": {
					"description": "",
					"type": "GET"
				},
				"name": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"RunnerEnvironmentTree": {
			"properties": {
				"nodes": {
					"description": "",
					"type": "GET"
				},
				"leaves": {
					"description": "",
					"type": "GET"
				},
				"displayName": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"AccessControlEntry": {
			"properties": {
				"permissions": {
					"description": "",
					"type": "GET"
				},
				"principal": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"Map": {
			"properties": {
				"empty": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"ImportProject": {
			"properties": {
				"project": {
					"description": "",
					"type": "GET"
				},
				"source": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"ProjectDescriptor": {
			"properties": {
				"name": {
					"description": "",
					"type": "GET"
				},
				"path": {
					"description": "",
					"type": "GET"
				},
				"type": {
					"description": "",
					"type": "GET"
				},
				"typeName": {
					"description": "",
					"type": "GET"
				},
				"workspaceId": {
					"description": "",
					"type": "GET"
				},
				"workspaceName": {
					"description": "",
					"type": "GET"
				},
				"visibility": {
					"description": "",
					"type": "GET"
				},
				"description": {
					"description": "",
					"type": "GET"
				},
				"creationDate": {
					"description": "",
					"type": "GET"
				},
				"modificationDate": {
					"description": "",
					"type": "GET"
				},
				"attributes": {
					"description": "",
					"type": "GET"
				},
				"mixins": {
					"description": "",
					"type": "GET"
				},
				"permissions": {
					"description": "",
					"type": "GET"
				},
				"builders": {
					"description": "",
					"type": "GET"
				},
				"runners": {
					"description": "",
					"type": "GET"
				},
				"baseUrl": {
					"description": "",
					"type": "GET"
				},
				"ideUrl": {
					"description": "",
					"type": "GET"
				},
				"problems": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"RunnersDescriptor": {
			"properties": {
				"configs": {
					"description": "",
					"type": "GET"
				},
				"default": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"MediaType": {
			"properties": {
				"type": {
					"description": "",
					"type": "GET"
				},
				"subtype": {
					"description": "",
					"type": "GET"
				},
				"parameters": {
					"description": "",
					"type": "GET"
				},
				"wildcardType": {
					"description": "",
					"type": "GET"
				},
				"wildcardSubtype": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"Source": {
			"properties": {
				"runners": {
					"description": "",
					"type": "GET"
				},
				"project": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"ImportResponse": {
			"properties": {
				"projectDescriptor": {
					"description": "",
					"type": "GET"
				},
				"sourceEstimations": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"TreeElement": {
			"properties": {
				"node": {
					"description": "",
					"type": "GET"
				},
				"children": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"Response": {
			"properties": {
				"metadata": {
					"description": "",
					"type": "GET"
				},
				"mediaType": {
					"description": "",
					"type": "GET"
				},
				"entityTag": {
					"description": "",
					"type": "GET"
				},
				"statusInfo": {
					"description": "",
					"type": "GET"
				},
				"stringHeaders": {
					"description": "",
					"type": "GET"
				},
				"allowedMethods": {
					"description": "",
					"type": "GET"
				},
				"links": {
					"description": "",
					"type": "GET"
				},
				"length": {
					"description": "",
					"type": "GET"
				},
				"language": {
					"description": "",
					"type": "GET"
				},
				"location": {
					"description": "",
					"type": "GET"
				},
				"date": {
					"description": "",
					"type": "GET"
				},
				"lastModified": {
					"description": "",
					"type": "GET"
				},
				"headers": {
					"description": "",
					"type": "GET"
				},
				"entity": {
					"description": "",
					"type": "GET"
				},
				"cookies": {
					"description": "",
					"type": "GET"
				},
				"status": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"GeneratorDescription": {
			"properties": {
				"options": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"ProjectReference": {
			"properties": {
				"name": {
					"description": "",
					"type": "GET"
				},
				"path": {
					"description": "",
					"type": "GET"
				},
				"type": {
					"description": "",
					"type": "GET"
				},
				"typeName": {
					"description": "",
					"type": "GET"
				},
				"url": {
					"description": "",
					"type": "GET"
				},
				"ideUrl": {
					"description": "",
					"type": "GET"
				},
				"workspaceId": {
					"description": "",
					"type": "GET"
				},
				"workspaceName": {
					"description": "",
					"type": "GET"
				},
				"visibility": {
					"description": "",
					"type": "GET"
				},
				"creationDate": {
					"description": "",
					"type": "GET"
				},
				"modificationDate": {
					"description": "",
					"type": "GET"
				},
				"description": {
					"description": "",
					"type": "GET"
				},
				"problems": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"RunnerEnvironment": {
			"properties": {
				"variables": {
					"description": "",
					"type": "GET"
				},
				"description": {
					"description": "",
					"type": "GET"
				},
				"id": {
					"description": "",
					"type": "GET"
				},
				"displayName": {
					"description": "",
					"type": "GET"
				},
				"options": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"Locale": {
			"properties": {
				"language": {
					"description": "",
					"type": "GET"
				},
				"country": {
					"description": "",
					"type": "GET"
				},
				"displayCountry": {
					"description": "",
					"type": "GET"
				},
				"displayLanguage": {
					"description": "",
					"type": "GET"
				},
				"displayName": {
					"description": "",
					"type": "GET"
				},
				"displayScript": {
					"description": "",
					"type": "GET"
				},
				"displayVariant": {
					"description": "",
					"type": "GET"
				},
				"extensionKeys": {
					"description": "",
					"type": "GET"
				},
				"iSO3Country": {
					"description": "",
					"type": "GET"
				},
				"iSO3Language": {
					"description": "",
					"type": "GET"
				},
				"script": {
					"description": "",
					"type": "GET"
				},
				"unicodeLocaleAttributes": {
					"description": "",
					"type": "GET"
				},
				"unicodeLocaleKeys": {
					"description": "",
					"type": "GET"
				},
				"variant": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"ImportSourceDescriptor": {
			"properties": {
				"location": {
					"description": "",
					"type": "GET"
				},
				"type": {
					"description": "",
					"type": "GET"
				},
				"parameters": {
					"description": "",
					"type": "GET"
				}
			}
		},
		"Link": {
			"properties": {
				"title": {
					"description": "",
					"type": "GET"
				},
				"uri": {
					"description": "",
					"type": "GET"
				},
				"rel": {
					"description": "",
					"type": "GET"
				},
				"uriBuilder": {
					"description": "",
					"type": "GET"
				},
				"rels": {
					"description": "",
					"type": "GET"
				},
				"type": {
					"description": "",
					"type": "GET"
				},
				"params": {
					"description": "",
					"type": "GET"
				}
			}
		}
	}
}