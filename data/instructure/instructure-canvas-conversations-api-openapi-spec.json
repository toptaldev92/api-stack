{
	"swagger": "2.0",
	"info": {
		"title": "Instructure Canvas Conversations API",
		"description": "Canvas LMS includes a REST API for accessing and modifying data externally from the main application, in your own programs and scripts. ",
		"termsOfService": "https://www.canvaslms.com/policies/api-policy",
		"version": "v1"
	},
	"host": "canvas.instructure.com",
	"basePath": "/api/v1",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/conversations": {
			"get": {
				"summary": "List conversations",
				"description": "",
				"operationId": "list-conversations",
				"parameters": [{
					"in": "query",
					"name": "filter[]",
					"description": "When set, only return conversations for the specified courses, groups ornusers. The id should be prefixed with its type, e.g. u201cuser_123u201d ornu201ccourse_456u201d. Can be an array (by setting u201cfilter[]u201d) or single value (bynsetting u201cfilteru201d)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "filter_mode",
					"description": "When filter[] contains multiple filters, combine them with this mode,nfiltering conversations that at have at least all of the contexts (u201candu201d)nor at least one of the contexts (u201coru201d)nn        n        n          Allowed values: and, or, default or",
					"type": "string"
				},
				{
					"in": "query",
					"name": "include_all_conversation_ids",
					"description": "Default is false. If true, the top-level element of the response will be annobject rather than an array, and will have the keys u201cconversationsu201d whichnwill contain the paged conversation data, and u201cconversation_idsu201d which willncontain the ids of all conversations under this scope/filter in the samenorder.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "interleave_submissions",
					"description": "(Obsolete) Submissions are no longer linked to conversations. Thisnparameter is ignored.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "scope",
					"description": "When set, only return conversations of the specified type. For example, setnto u201cunreadu201d to return only conversations that haven&#39;t been read. Thendefault behavior is to return all non-archived conversations (i.e. read andnunread).nn        n        n          Allowed values: unread, starred, archived",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			},
			"post": {
				"summary": "Create a conversation",
				"description": "",
				"operationId": "create-a-conversation",
				"parameters": [{
					"in": "query",
					"name": "attachment_ids[]",
					"description": "An array of attachments ids. These must be files that have been previouslynuploaded to the sender&#39;s u201cconversation attachmentsu201d folder.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "body",
					"description": "The message to be sent",
					"type": "string"
				},
				{
					"in": "query",
					"name": "context_code",
					"description": "The course or group that is the context for this conversation. Same formatnas courses or groups in the recipients argument.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "filter[]",
					"description": "Used when generating u201cvisibleu201d in the API response. See the explanationnunder the index API action",
					"type": "string"
				},
				{
					"in": "query",
					"name": "filter_mode",
					"description": "Used when generating u201cvisibleu201d in the API response. See the explanationnunder the index API actionnn        n        n          Allowed values: and, or, default or",
					"type": "string"
				},
				{
					"in": "query",
					"name": "group_conversation",
					"description": "Defaults to false. If true, this will be a group conversation (i.e. allnrecipients may see all messages and replies). If false, individual privatenconversations will be started with each recipient. Must be set false if thennumber of recipients is over the set maximum (default is 100).",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "media_comment_id",
					"description": "Media comment id of an audio of video file to be associated with thisnmessage.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "media_comment_type",
					"description": "Type of the associated media filenn        n        n          Allowed values: audio, video",
					"type": "string"
				},
				{
					"in": "query",
					"name": "mode",
					"description": "Determines whether the messages will be created/sent synchronously ornasynchronously. Defaults to sync, and this option is ignored if this is angroup conversation or there is just one recipient (i.e. it must be a bulknprivate message). When sent async, the response will be an empty arrayn(batch status can be queried via the batches API)nn        n        n          Allowed values: sync, async",
					"type": "string"
				},
				{
					"in": "query",
					"name": "recipients[]",
					"description": "An array of recipient ids. These may be user ids or course/group idsnprefixed with u201ccourse_u201d or u201cgroup_u201d respectively, e.g. recipients[]=1&recipients=2&amp;recipients[]=course_3",
					"type": "string"
				},
				{
					"in": "query",
					"name": "scope",
					"description": "Used when generating u201cvisibleu201d in the API response. See the explanationnunder the index API actionnn        n        n          Allowed values: unread, starred, archived",
					"type": "string"
				},
				{
					"in": "query",
					"name": "subject",
					"description": "The subject of the conversation. This is ignored when reusing anconversation. Maximum length is 255 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "user_note",
					"description": "Will add a faculty journal entry for each recipient as long as the usernmaking the api call has permission, the recipient is a student and facultynjournals are enabled in the account.",
					"type": "boolean"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			},
			"put": {
				"summary": "Batch update conversations",
				"description": "",
				"operationId": "batch-update-conversations",
				"parameters": [{
					"in": "query",
					"name": "conversation_ids[]",
					"description": "List of conversations to update. Limited to 500 conversations.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "event",
					"description": "The action to take on each conversation.nn        n        n          Allowed values: mark_as_read, mark_as_unread, star, unstar, archive, destroy",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			}
		},
		"/conversations/batches": {
			"get": {
				"summary": "Get running batches",
				"description": "",
				"operationId": "get-running-batches",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			}
		},
		"/conversations/find_recipients": {
			"get": {
				"summary": "Find recipients",
				"description": "",
				"operationId": "find-recipients",
				"parameters": [{
					"in": "query",
					"name": "context",
					"description": "Limit the search to a particular course/group (e.g. u201ccourse_3u201d ornu201cgroup_4u201d).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "exclude[]",
					"description": "Array of ids to exclude from the search. These may be user ids orncourse/group ids prefixed with u201ccourse_u201d or u201cgroup_u201d respectively, e.g. exclude[]=1&exclude=2&amp;exclude[]=course_3",
					"type": "string"
				},
				{
					"in": "query",
					"name": "from_conversation_id",
					"description": "When searching by user_id, only users that could be normally messaged bynthis user will be returned. This parameter allows you to specify anconversation that will be referenced for a shared context u2013 if both thencurrent user and the searched user are in the conversation, the user willnbe returned. This is used to start new side conversations.",
					"type": "integer"
				},
				{
					"in": "query",
					"name": "permissions[]",
					"description": "Array of permission strings to be checked for each matched context (e.g.nu201csend_messagesu201d). This argument determines which permissions may benreturned in the response; it won&#39;t prevent contexts from being returnednif they don&#39;t grant the permission(s).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "search",
					"description": "Search terms used for matching users/courses/groups (e.g. u201cbob smithu201d). Ifnmultiple terms are given (separated via whitespace), only results matchingnall terms will be returned.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "type",
					"description": "Limit the search just to users or contexts (groups/courses).nn        n        n          Allowed values: user, context",
					"type": "string"
				},
				{
					"in": "query",
					"name": "user_id",
					"description": "Search for a specific user id. This ignores the other above parameters, andnwill never return more than one result.",
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			}
		},
		"/conversations/mark_all_as_read": {
			"post": {
				"summary": "Mark all as read",
				"description": "",
				"operationId": "mark-all-as-read",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			}
		},
		"/conversations/unread_count": {
			"get": {
				"summary": "Unread count",
				"description": "",
				"operationId": "unread-count",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			}
		},
		"/conversations/{id}": {
			"delete": {
				"summary": "Delete a conversation",
				"description": "",
				"operationId": "delete-a-conversation",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			},
			"get": {
				"summary": "Get a single conversation",
				"description": "",
				"operationId": "get-a-single-conversation",
				"parameters": [{
					"in": "query",
					"name": "auto_mark_as_read",
					"description": "Default true. If true, unread conversations will be automatically marked asnread. This will default to false in a future API release, so clients shouldnexplicitly send true if that is the desired behavior.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "filter[]",
					"description": "Used when generating u201cvisibleu201d in the API response. See the explanationnunder the index API action",
					"type": "string"
				},
				{
					"in": "query",
					"name": "filter_mode",
					"description": "Used when generating u201cvisibleu201d in the API response. See the explanationnunder the index API actionnn        n        n          Allowed values: and, or, default or",
					"type": "string"
				},
				{
					"in": "query",
					"name": "interleave_submissions",
					"description": "(Obsolete) Submissions are no longer linked to conversations. Thisnparameter is ignored.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "scope",
					"description": "Used when generating u201cvisibleu201d in the API response. See the explanationnunder the index API actionnn        n        n          Allowed values: unread, starred, archived",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			},
			"put": {
				"summary": "Edit a conversation",
				"description": "",
				"operationId": "edit-a-conversation",
				"parameters": [{
					"in": "query",
					"name": "conversation[starred]",
					"description": "Toggle the starred state of the current user&#39;s view of thenconversation.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "conversation[subject]",
					"description": "Change the subject of this conversation",
					"type": "string"
				},
				{
					"in": "query",
					"name": "conversation[subscribed]",
					"description": "Toggle the current user&#39;s subscription to the conversation (only validnfor group conversations). If unsubscribed, the user will still have accessnto the latest messages, but the conversation won&#39;t be automaticallynflagged as unread, nor will it jump to the top of the inbox.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "conversation[workflow_state]",
					"description": "Change the state of this conversationnn        n        n          Allowed values: read, unread, archived",
					"type": "string"
				},
				{
					"in": "query",
					"name": "filter[]",
					"description": "Used when generating u201cvisibleu201d in the API response. See the explanationnunder the index API action",
					"type": "string"
				},
				{
					"in": "query",
					"name": "filter_mode",
					"description": "Used when generating u201cvisibleu201d in the API response. See the explanationnunder the index API actionnn        n        n          Allowed values: and, or, default or",
					"type": "string"
				},
				{
					"in": "query",
					"name": "scope",
					"description": "Used when generating u201cvisibleu201d in the API response. See the explanationnunder the index API actionnn        n        n          Allowed values: unread, starred, archived",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			}
		},
		"/conversations/{id}/add_message": {
			"post": {
				"summary": "Add a message",
				"description": "",
				"operationId": "add-a-message",
				"parameters": [{
					"in": "query",
					"name": "attachment_ids[]",
					"description": "An array of attachments ids. These must be files that have been previouslynuploaded to the sender&#39;s u201cconversation attachmentsu201d folder.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "body",
					"description": "The message to be sent.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "included_messages[]",
					"description": "no description",
					"type": "string"
				},
				{
					"in": "query",
					"name": "media_comment_id",
					"description": "Media comment id of an audio of video file to be associated with thisnmessage.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "media_comment_type",
					"description": "Type of the associated media file.nn        n        n          Allowed values: audio, video",
					"type": "string"
				},
				{
					"in": "query",
					"name": "recipients[]",
					"description": "no description",
					"type": "string"
				},
				{
					"in": "query",
					"name": "user_note",
					"description": "Will add a faculty journal entry for each recipient as long as the usernmaking the api call has permission, the recipient is a student and facultynjournals are enabled in the account.",
					"type": "boolean"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			}
		},
		"/conversations/{id}/add_recipients": {
			"post": {
				"summary": "Add recipients",
				"description": "",
				"operationId": "add-recipients",
				"parameters": [{
					"in": "query",
					"name": "recipients[]",
					"description": "An array of recipient ids. These may be user ids or course/group idsnprefixed with u201ccourse_u201d or u201cgroup_u201d respectively, e.g. recipients[]=1&recipients=2&amp;recipients[]=course_3",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			}
		},
		"/conversations/{id}/remove_messages": {
			"post": {
				"summary": "Delete a message",
				"description": "",
				"operationId": "delete-a-message",
				"parameters": [{
					"in": "query",
					"name": "remove[]",
					"description": "Array of message ids to be deleted",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["conversations"],
				"security": []
			}
		}
	},
	"definitions": []
}