{
	"swagger": "2.0",
	"info": {
		"title": "Postmark API",
		"description": "Postmark helps deliver and track transactional emails for web applications. In a nutshell, the service replaces SMTP (or Sendmail) with a far more reliable, scalable and care-free environment.",
		"termsOfService": null,
		"version": null
	},
	"host": "api.postmarkapp.com",
	"basePath": "\/",
	"schemes": [
		"http"
	],
	"produces": [
		"application\/json"
	],
	"consumes": [
		"application\/json"
	],
	"paths": {
		"\/startups": {
			"get": {
				"summary": "Startups On AngelList",
				"description": "Returns the firehose of fundraising companies on AngelList. Results are paginated and ordered by the date on which the round was listed.",
				"operationId": "getStartups",
				"parameters": [
					{
						"name": "filter",
						"in": "query",
						"description": "Keyword to filter search by",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Start Response"
					}
				},
				"tags": [
					"Startups",
					" Businesses",
					" Companies"
				]
			}
		},
		"\/search": {
			"get": {
				"summary": "Link Search",
				"description": "Search links receiving clicks across bitly by content, language, location, and more.",
				"operationId": "searchLinks",
				"parameters": [
					{
						"name": "cities",
						"in": "query",
						"description": "show links active in this city (ordered like country-state-city, e.g. us-il-chicago).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "domain",
						"in": "query",
						"description": "restrict results to this web domain (like bitly.com).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "fields",
						"in": "query",
						"description": "which fields to return in the response (comma-separated). May be any of: domain, initial_epoch, h2, h3, site, lastindexed, keywords, last_indexed_epoch, title, initial, summaryText, content, score, summaryTitle, type, description, cities, lang, url, referrer, aggregate_link, lastseen, page, ogtitle, aggregate_link. By default, all will be returned.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "full_domain",
						"in": "query",
						"description": "restrict results to this full web domain (like blog.bitly.com).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "lang",
						"in": "query",
						"description": "favor results in this language (two letter ISO code).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "which result to start with (defaults to 0).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "string to query for.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Links Response"
					}
				},
				"tags": [
					"Links",
					" URL",
					" URL Shortener",
					" Search"
				]
			}
		},
		"sendmsg\/": {
			"get": {
				"summary": "Send Message",
				"description": "The Clickatell HTTP\/S API provides just about the simplest way of programming your connection to Clickatell, and if you need to overcome a firewall problem HTTP\/S is almost certainly your best solution.",
				"operationId": "",
				"parameters": [
					{
						"name": "api_id",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "password",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "text",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "The user id sending message.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" SMS"
				]
			}
		},
		"send.aspx": {
			"get": {
				"summary": "Send SMS Via HTTP",
				"description": "The HTTP interface to send text messages can be accessed using GET or POST. All parameters must be URL Encoded and sent as UTF-8 text.",
				"operationId": "",
				"parameters": [
					{
						"name": "Content",
						"in": "query",
						"description": "The message you want to send. Mobile networks only support characters listed in the GSM character set, but for consistency all characters must be UTF-8 encoded when sending through the API.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "From",
						"in": "query",
						"description": "The text or phone number displayed when a text message is received on a phone. This can be either a 12 digit number or 11 characters long. You can set a default by logging in to Clockwork.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "Key",
						"in": "query",
						"description": "Your API key, available by logging in (with your username and password) to Clockwork.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "Long",
						"in": "query",
						"description": "Set this to 1 and we\u2019ll stick together multiple messages giving you up to 459 characters, rather than the standard 160 (each recipient will cost up to 3 message credits)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "Up to 50 comma separated numbers. Each number should start with an international country code without any leading zeros or plus symbols.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" SMS"
				]
			}
		},
		"email_addresses": {
			"put": {
				"summary": "Add Email Address",
				"description": "Adding a new email addresses as an alias for an account",
				"operationId": "",
				"parameters": [
					{
						"name": "email_address",
						"in": "query",
						"description": "An email address",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"email_addresses\/email": {
			"post": {
				"summary": "Modify Email",
				"description": "Modifiying a given email address",
				"operationId": "",
				"parameters": [
					{
						"name": "email",
						"in": "query",
						"description": "One of the email addresses associated to the account",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"email_addressestest": {
			"get": {
				"summary": "Email Addresses",
				"description": "List of email addressed used by an account",
				"operationId": "",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"files": {
			"get": {
				"summary": "Get Files",
				"description": "Listings of files found as email attachments",
				"operationId": "",
				"parameters": [
					{
						"name": "bcc",
						"in": "query",
						"description": "Email address of a contact BCC'ed on the messages.",
						"type": "string"
					},
					{
						"name": "cc",
						"in": "query",
						"description": "Email address of a contact CC'ed on the messages.",
						"type": "string"
					},
					{
						"name": "date_after",
						"in": "query",
						"description": "Only include files attached to messages sent after a given timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
						"type": "string"
					},
					{
						"name": "date_before",
						"in": "query",
						"description": "Only include files attached to messages sent before a given timestamp. The value this filter is applied to is the Date: header of the message which refers to the time the message is sent from the origin.",
						"type": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "Email address of the contact for whom you want the latest files exchanged with. By \"exchanged with contact X\" we mean any email received from contact X, sent to contact X or sent by anyone to both contact X and the source owner.",
						"type": "string"
					},
					{
						"name": "file_name",
						"in": "query",
						"description": "Search for files based on their name. You can filter names using typical shell wildcards such as *, ? and [] or regular expressions by enclosing the search expression in a leading \/ and trailing \/. For example, *.pdf would give you all PDF files while \/\\.jpe?g$\/ would return all files whose name ends with .jpg or .jpeg",
						"type": "string"
					},
					{
						"name": "file_size_max",
						"in": "query",
						"description": "Search for files based on their size (in bytes).",
						"type": "string"
					},
					{
						"name": "file_size_min",
						"in": "query",
						"description": "Search for files based on their size (in bytes).",
						"type": "string"
					},
					{
						"name": "from",
						"in": "query",
						"description": "Email address of a contact files have been received from.",
						"type": "string"
					},
					{
						"name": "group_by_revisions",
						"in": "query",
						"description": "If set to 1, the list will do an intelligent grouping of files to reflect occurrences of the same document. The grouping algorithm is exactly the same as the one used to get file revisions but only the occurrences matching the filters applied to the list will be included in the results.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "indexed_after",
						"in": "query",
						"description": "Only include files attached to messages indexed after a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
						"type": "string"
					},
					{
						"name": "indexed_before",
						"in": "query",
						"description": "Only include files attached to messages indexed before a given timestamp. This is not the same as the date of the email, it is the time Context.IO indexed this message.",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "The maximum number of results to return.  The maximum limit is 100.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Start the list at this offset (zero-based).",
						"type": "string"
					},
					{
						"name": "sort_order",
						"in": "query",
						"description": "The sort order of the returned results. Possible values are asc and desc",
						"type": "string"
					},
					{
						"name": "source",
						"in": "query",
						"description": "Filter messages by the account source label.",
						"type": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Email address of a contact files have been sent to.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email",
					" Files"
				]
			}
		},
		"files\/file_id": {
			"get": {
				"summary": "Get File",
				"description": "Details for a given file",
				"operationId": "",
				"parameters": [
					{
						"name": "file_id",
						"in": "path",
						"description": "Unique id of a file",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email",
					" Files"
				]
			}
		},
		"messages\/": {
			"post": {
				"summary": "Send Message",
				"description": "Sends a message by assembling it from the components. Note that you can specify most parameters multiple times, HTTP supports this out of the box. This makes sense for parameters like cc, to or attachment.",
				"operationId": "",
				"parameters": [
					{
						"name": "attachment",
						"in": "query",
						"description": "File attachment. You can post multiple attachment\nvalues. Important: You must use multipart\/form-data\nencoding when sending attachments.",
						"type": "string"
					},
					{
						"name": "bcc",
						"in": "query",
						"description": "Same as To but for Bcc",
						"type": "string"
					},
					{
						"name": "cc",
						"in": "query",
						"description": "Same as To but for Cc",
						"type": "string"
					},
					{
						"name": "from",
						"in": "query",
						"description": "Email address for From header",
						"type": "string"
					},
					{
						"name": "h:X-My-Header",
						"in": "query",
						"description": "h: prefix followed by an arbitrary value allows to append\na custom MIME header to the message (X-My-Header\nin this case). For example, h:Reply-To to specify Reply-To\naddress.",
						"type": "string"
					},
					{
						"name": "html",
						"in": "query",
						"description": "Body of the message. (HTML version)",
						"type": "string"
					},
					{
						"name": "inline",
						"in": "query",
						"description": "Attachment with inline disposition. Can be used to\nsend inline images (see example).\nYou can post multiple inline values.",
						"type": "string"
					},
					{
						"name": "o:campaign",
						"in": "query",
						"description": "Id of the campaign the message belongs to. See\nCampaign Analytics for details.",
						"type": "string"
					},
					{
						"name": "o:deliverytime",
						"in": "query",
						"description": "Desired time of delivery. See Date Format. Note:\nMessages can be scheduled for a maximum of 3 days in the\nfuture.",
						"type": "string"
					},
					{
						"name": "o:dkim",
						"in": "query",
						"description": "Enables\/disables DKIM signatures on per-message basis.\nPass yes or no",
						"type": "string"
					},
					{
						"name": "o:tag",
						"in": "query",
						"description": "Tag string. See Tagging for more information.",
						"type": "string"
					},
					{
						"name": "o:testmode",
						"in": "query",
						"description": "Enables sending in test mode. Pass yes if needed.\nSee Sending in Test Mode",
						"type": "string"
					},
					{
						"name": "o:tracking",
						"in": "query",
						"description": "Toggles tracking on a per-message basis, see\nTracking Messages for details. Pass yes or no.",
						"type": "string"
					},
					{
						"name": "o:tracking-clicks",
						"in": "query",
						"description": "Toggles clicks tracking on a per-message basis. Has higher\npriority than domain-level setting. Pass yes, no\nor htmlonly.",
						"type": "string"
					},
					{
						"name": "o:tracking-opens",
						"in": "query",
						"description": "Toggles opens tracking on a per-message basis. Has higher\npriority than domain-level setting. Pass yes or no.",
						"type": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "Message subject",
						"type": "string"
					},
					{
						"name": "text",
						"in": "query",
						"description": "Body of the message. (text version)",
						"type": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Email address of the recipient(s).\nExample: &quot;Bob &lt;bob&#64;host.com&gt;&quot;. You can use commas to\nseparate multiple recipients.",
						"type": "string"
					},
					{
						"name": "v:my-var",
						"in": "query",
						"description": "v: prefix followed by an arbitrary name allows to\nattach a custom JSON data to the message.\nSee Attaching Data to Messages for more information.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/{message_id}": {
			"get": {
				"summary": "Retrieving a Message",
				"description": "Retrieving a Message",
				"operationId": "",
				"parameters": [
					{
						"name": "message_id",
						"in": "query",
						"description": "The ID of the Message.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "thread_id",
						"in": "query",
						"description": "One of the filter parameters available on messages is thread. Given a thread_id value, the API call will will return all messages in the thread.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"sources\/": {
			"get": {
				"summary": "Sources",
				"description": "Search sources by name. Returns a list of sources objects",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "autosuggest",
						"in": "query",
						"description": "If true, partial matches will be returned starting from 3 characters, i.e. the query Bar will match the topic Barack Obama. This is intended for use in autosuggest dropdowns.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "If true, return only licensed sources with fully licensed content. If false, return only sources with aggregated content. If left out, return all sources you have access to.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Limit the media type of the returned items. Value is a space delimited list of media types. See Source module for a list of valid media types.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "Query string to search on",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "List of sources to retrieve items from. Valid sources are specified as a space delimited list of source GUIDs.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of sources.Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" sources"
				]
			}
		},
		"sources\/{label}": {
			"post": {
				"summary": "Modify Source",
				"description": " Modify a data source on a given account",
				"operationId": "",
				"parameters": [
					{
						"name": "expunge_on_deleted_flag",
						"in": "query",
						"description": "By default, we don't filter out messages flagged as deleted. Set this parameter to  1 to turn on this filtering.",
						"type": "string"
					},
					{
						"name": "force_status_check",
						"in": "query",
						"description": "Set to 1 to create an IMAP connection and reset the source status to to one reported by the IMAP backend. Don't combine this with other parameters.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "Unique id of an account accessible through your API key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "lable",
						"in": "path",
						"description": "The label property of the source instance. You can use 0 as an alias for the first source of an account.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "password",
						"in": "query",
						"description": "New password for this source. Ignored if any of the provider_* parameters are set below.",
						"type": "string"
					},
					{
						"name": "provider_consumer_key",
						"in": "query",
						"description": "The OAuth2 Client ID or OAuth1 consumer key used to obtain the the token and token secret above for that account. That consumer key and secret must be configured in your Context.IO account, see oauth_providers",
						"type": "string"
					},
					{
						"name": "provider_refresh_token",
						"in": "query",
						"description": "An OAuth2 refresh token obtained from the IMAP account provider to be used to authentify on this email account.",
						"type": "string"
					},
					{
						"name": "provider_token",
						"in": "query",
						"description": "An OAuth1 token obtained from the IMAP account provider to be used to authentify on this email account.",
						"type": "string"
					},
					{
						"name": "provider_token_secret",
						"in": "query",
						"description": "An OAuth1 token secret obtained from the IMAP account provider to be used to authentify on this email account..",
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "If the status of the source is TEMP_DISABLED or DISABLED. You can do a POST\/PUT with status set to 1 to reset it.",
						"type": "string"
					},
					{
						"name": "sync_all_folders",
						"in": "query",
						"description": "By default, we filter out some folders like 'Deleted Items' and 'Drafts'. Set this parameter to  1 to turn off this filtering and show every single folder.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"threads\/": {
			"get": {
				"summary": "Getting Threads with a Tag",
				"description": "Getting Threads with a Tag",
				"operationId": "",
				"parameters": [
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "You can list all of the threads with a given tag using a Tag Filter. The tag parameter can be a tag ID, such as 4zv7pgvihjvuptbwv57kiz62 or a tag name, like inbox or hiking.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"threads\/{thread_id}": {
			"put": {
				"summary": "Updating Tags & Performing Actions",
				"description": "Updating Tags & Performing Actions",
				"operationId": "",
				"parameters": [
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "thread_id",
						"in": "query",
						"description": "ID of the thread.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"sms\/rest\/{environment}\/{senderAddress}\/requests\/": {
			"get": {
				"summary": "Send An SMS",
				"description": "The Global SMS service allows sending SMS messages to mobile phones and receive text messages from a webservice for a specific number.",
				"operationId": "",
				"parameters": [
					{
						"name": "account",
						"in": "query",
						"description": "Used for accounting, your subaccount id from Developer Garden portal",
						"type": "string",
						"format": "string"
					},
					{
						"name": "address",
						"in": "query",
						"description": "Recipient phone numbers as JSON array, each number must have the format \"tel:+1630000001\" where \"+16\" is your country code.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "clientCorrelator",
						"in": "query",
						"description": "String uniquely identifies this create SMS request. If there is a communication failure during the request, using the same clientCorrelator when retrying the request allows the operator to avoid sending the same SMS twice.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "environment",
						"in": "path",
						"description": "premium, mock, or sandbox",
						"type": "string",
						"format": "string"
					},
					{
						"name": "outboundEncoding",
						"in": "query",
						"description": "Allowed values are \"7bitGSM\" and \"16bitUCS2\", if parameter is not supplied standard GSM 7bit is used.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "outboundSMSBinaryMessage.message",
						"in": "query",
						"description": "xsd:base64Binary short message content in binary format. This is not a GSMA-Standard parameter.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "outboundSMSFlashMessage.flashMessage",
						"in": "query",
						"description": "Short message content. Will be send as flash SMS.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "outboundSMSTextMessage.message",
						"in": "query",
						"description": "Short message content.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "receiptRequest.callbackData",
						"in": "query",
						"description": "String will be passed back in this notification, so you can use it to identify the message the receipt relates to.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "receiptRequest.notifyURL",
						"in": "query",
						"description": "URL to which you would like a notification of delivery sent. The format of this notification is shown below.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "senderAddress",
						"in": "query",
						"description": "String is the address to whom a responding SMS may be sent",
						"type": "string",
						"format": "string"
					},
					{
						"name": "senderName",
						"in": "query",
						"description": "The URL-escaped name of the sender to appear on the terminal is the address to whom a responding SMS may be sent.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" SMS"
				]
			}
		},
		"sendMMS\/": {
			"get": {
				"summary": "Send MMS",
				"description": "The Send MMS service allows sending MMS messages to mobile phones.",
				"operationId": "",
				"parameters": [
					{
						"name": "account",
						"in": "query",
						"description": "Account ID of the sub-account that should be billed for the service use. If the parameter is not specified, the main account is billed.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "attachment",
						"in": "query",
						"description": "Base64 encoded attachment to send. (optional)  Attachments of arbitrary type (Picture, Sound, Video, Text) are supported. The file type has to be specified through contentType. Furthermore, the file name has to be specified through filename.  At least one of the fields, message and attachment, has to be present.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "contentType",
						"in": "query",
						"description": "File type of the attachment, if an attachment is to be sent.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "environment",
						"in": "path",
						"description": "is one of \"production\", \"sandbox\" or \"mock\"",
						"type": "string",
						"format": "string"
					},
					{
						"name": "filename",
						"in": "query",
						"description": "File name of the attachment, if an attachment is to be sent. (optional)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": " text message. (optional). At least one of the fields, message and attachment, has to be present.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "number",
						"in": "query",
						"description": "Recipient phone numbers, separated by commas (\",\").",
						"type": "string",
						"format": "string"
					},
					{
						"name": "originator",
						"in": "query",
						"description": "The sender as displayed to the recipient. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "The subject line.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" SMS",
					" MMS"
				]
			}
		},
		"\/auth": {
			"post": {
				"summary": "Check auth configuration",
				"description": "Check auth configuration",
				"operationId": "check-auth-configuration",
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/build": {
			"post": {
				"summary": "Build an image from Dockerfile via stdin",
				"description": "Build an image from Dockerfile via stdin",
				"operationId": "build-an-image-from-dockerfile-via-stdin",
				"parameters": [
					{
						"name": "Content-type",
						"in": "query",
						"description": "should be set to application\/tar.",
						"type": "string"
					},
					{
						"name": "forcerm",
						"in": "query",
						"description": "always remove intermediate containers (includes rm)Request Headers:",
						"type": "string"
					},
					{
						"name": "nocache",
						"in": "query",
						"description": "do not use the cache when building the image",
						"type": "string"
					},
					{
						"name": "pull",
						"in": "query",
						"description": "attempt to pull the image even if an older image exists locally",
						"type": "string"
					},
					{
						"name": "q",
						"in": "query",
						"description": "suppress verbose build output",
						"type": "string"
					},
					{
						"name": "rm",
						"in": "query",
						"description": "remove intermediate containers after a successful build (default behavior)",
						"type": "string"
					},
					{
						"name": "t",
						"in": "query",
						"description": "repository name (and optionally a tag) to be applied to        the resulting image in case of success",
						"type": "string"
					},
					{
						"name": "X-Registry-Config",
						"in": "query",
						"description": "base64-encoded ConfigFile objec",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/commit": {
			"post": {
				"summary": "Create a new image from a container's changes",
				"description": "Create a new image from a container's changes",
				"operationId": "create-a-new-image-from-a-containers-changes",
				"parameters": [
					{
						"name": "author",
						"in": "query",
						"description": "author (e.g., John Hannibal Smith    &lt;hannibal@a-team.com&gt;)",
						"type": "string"
					},
					{
						"name": "comment",
						"in": "query",
						"description": "commit message",
						"type": "string"
					},
					{
						"name": "container",
						"in": "query",
						"description": "source container",
						"type": "string"
					},
					{
						"name": "repo",
						"in": "query",
						"description": "repository",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "tag",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/create": {
			"post": {
				"summary": "Create a container",
				"description": "Create a container",
				"operationId": "create-a-container",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"description": "Assign the specified name to the container. Must    match \/?[a-zA-Z0-9_-]+.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/json": {
			"get": {
				"summary": "List containers",
				"description": "List containers",
				"operationId": "list-containers",
				"parameters": [
					{
						"name": "all",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, Show all containers.        Only running containers are shown by default (i.e., this defaults to false)",
						"type": "string"
					},
					{
						"name": "before",
						"in": "query",
						"description": "Show only containers created before Id, include        non-running ones.",
						"type": "string"
					},
					{
						"name": "exited",
						"in": "query",
						"description": "&lt;int&gt; -- containers with exit code of &lt;int&gt;",
						"type": "string"
					},
					{
						"name": "filters",
						"in": "query",
						"description": "a json encoded value of the filters (a map[string][]string) to process on the containers list. Available filters:",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Show limit last created        containers, include non-running ones.",
						"type": "string"
					},
					{
						"name": "since",
						"in": "query",
						"description": "Show only containers created since Id, include        non-running ones.",
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, Show the containers        sizes",
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "(restarting|running|paused|exited)",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}": {
			"delete": {
				"summary": "Remove a container",
				"description": "Remove a container",
				"operationId": "remove-a-container",
				"parameters": [
					{
						"name": "force",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, Kill then remove the container.        Default false",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "v",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, Remove the volumes        associated to the container. Default false",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/attach": {
			"post": {
				"summary": "Attach to a container",
				"description": "Attach to a container",
				"operationId": "attach-to-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "logs",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, return logs. Default false",
						"type": "string"
					},
					{
						"name": "stderr",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, if logs=true, return        stderr log, if stream=true, attach to stderr. Default false",
						"type": "string"
					},
					{
						"name": "stdin",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, if stream=true, attach        to stdin. Default false",
						"type": "string"
					},
					{
						"name": "stdout",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, if logs=true, return        stdout log, if stream=true, attach to stdout. Default false",
						"type": "string"
					},
					{
						"name": "stream",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, return stream.        Default false",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error\nStream details:\nWhen using the TTY setting is enabled in\nPOST \/containers\/create\n,\nthe stream is the raw data from the process PTY and client's stdin.\nWhen the TTY is disabled, then the stream is multiplexed to separate\nstdout and stderr.\nThe format is a Header and a Payload (frame).\nHEADER\nThe header will contain the information on which stream write the\nstream (stdout or stderr). It also contain the size of the\nassociated frame encoded on the last 4 bytes (uint32).\nIt is encoded on the first 8 bytes like this:\nheader := [8]byte{STREAM_TYPE, 0, 0, 0, SIZE1, SIZE2, SIZE3, SIZE4}\n\nSTREAM_TYPE can be:"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/changes": {
			"get": {
				"summary": "Inspect changes on a container's filesystem",
				"description": "Inspect changes on a container's filesystem",
				"operationId": "inspect-changes-on-a-containers-filesystem",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/copy": {
			"post": {
				"summary": "Copy files or folders from a container",
				"description": "Copy files or folders from a container",
				"operationId": "copy-files-or-folders-from-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/exec": {
			"post": {
				"summary": "Image tarball format",
				"description": "Image tarball format",
				"operationId": "image-tarball-format",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/export": {
			"get": {
				"summary": "Export a container",
				"description": "Export a container",
				"operationId": "export-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/json": {
			"get": {
				"summary": "Inspect a container",
				"description": "Inspect a container",
				"operationId": "inspect-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/kill": {
			"post": {
				"summary": "Kill a container",
				"description": "Kill a container",
				"operationId": "kill-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/logs": {
			"get": {
				"summary": "Get container logs",
				"description": "Get container logs",
				"operationId": "get-container-logs",
				"parameters": [
					{
						"name": "follow",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, return stream. Default false",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "stderr",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, show stderr log. Default false",
						"type": "string"
					},
					{
						"name": "stdout",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, show stdout log. Default false",
						"type": "string"
					},
					{
						"name": "tail",
						"in": "query",
						"description": "Output specified number of lines at the end of logs: all or &lt;number&gt;. Default all",
						"type": "string"
					},
					{
						"name": "timestamps",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, print timestamps for        every log line. Default false",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/pause": {
			"post": {
				"summary": "Pause a container",
				"description": "Pause a container",
				"operationId": "pause-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/resize?h=&lt;height&gt;&amp;w=&lt;width&gt;": {
			"post": {
				"summary": "Resize a container TTY",
				"description": "Resize a container TTY",
				"operationId": "resize-a-container-tty",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "Cannot resize container"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "No such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/restart": {
			"post": {
				"summary": "Restart a container",
				"description": "Restart a container",
				"operationId": "restart-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "t",
						"in": "query",
						"description": "number of seconds to wait before killing the container",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/start": {
			"post": {
				"summary": "Start a container",
				"description": "Start a container",
				"operationId": "start-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already started"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/stop": {
			"post": {
				"summary": "Stop a container",
				"description": "Stop a container",
				"operationId": "stop-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "t",
						"in": "query",
						"description": "number of seconds to wait before killing the container",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/top": {
			"get": {
				"summary": "List processes running inside a container",
				"description": "List processes running inside a container",
				"operationId": "list-processes-running-inside-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "ps_args",
						"in": "query",
						"description": "ps arguments to use (e.g., aux)",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/unpause": {
			"post": {
				"summary": "Unpause a container",
				"description": "Unpause a container",
				"operationId": "unpause-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/containers\/{id}\/wait": {
			"post": {
				"summary": "Wait a container",
				"description": "Wait a container",
				"operationId": "wait-a-container",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/events": {
			"get": {
				"summary": "Monitor Docker's events",
				"description": "Monitor Docker's events",
				"operationId": "monitor-dockers-events",
				"parameters": [
					{
						"name": "container",
						"in": "query",
						"description": "&lt;string&gt; -- container to filter",
						"type": "string"
					},
					{
						"name": "event",
						"in": "query",
						"description": "&lt;string&gt; -- event to filter",
						"type": "string"
					},
					{
						"name": "filters",
						"in": "query",
						"description": "a json encoded value of the filters (a map[string][]string) to process on the event list. Available filters:",
						"type": "string"
					},
					{
						"name": "image",
						"in": "query",
						"description": "&lt;string&gt; -- image to filter",
						"type": "string"
					},
					{
						"name": "since",
						"in": "query",
						"description": "timestamp used for polling",
						"type": "string"
					},
					{
						"name": "until",
						"in": "query",
						"description": "timestamp used for polling",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such container"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/exec\/{id}\/json": {
			"get": {
				"summary": "Exec Inspect",
				"description": "Exec Inspect",
				"operationId": "exec-inspect",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such exec instance"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/exec\/{id}\/resize": {
			"post": {
				"summary": "Exec Resize",
				"description": "Exec Resize",
				"operationId": "exec-resize",
				"parameters": [
					{
						"name": "h",
						"in": "query",
						"description": "height of tty session",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "w",
						"in": "query",
						"description": "width",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such exec instance"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/exec\/{id}\/start": {
			"post": {
				"summary": "Exec Start",
				"description": "Exec Start",
				"operationId": "exec-start",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such exec instance\nStream details:\nSimilar to the stream behavior of POST \/container\/(id)\/attach API"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/create": {
			"post": {
				"summary": "Create an image",
				"description": "Create an image",
				"operationId": "create-an-image",
				"parameters": [
					{
						"name": "fromImage",
						"in": "query",
						"description": "name of the image to pull",
						"type": "string"
					},
					{
						"name": "fromSrc",
						"in": "query",
						"description": "source to import.  The value may be a URL from which the image        can be retrieved or - to read the image from the request body.",
						"type": "string"
					},
					{
						"name": "registry",
						"in": "query",
						"description": "the registry to pull fromRequest Headers:",
						"type": "string"
					},
					{
						"name": "repo",
						"in": "query",
						"description": "repository",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "tag",
						"type": "string"
					},
					{
						"name": "X-Registry-Auth",
						"in": "query",
						"description": "base64-encoded AuthConfig object",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such exec instance\nStream details:\nSimilar to the stream behavior of POST \/container\/(id)\/attach API"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/get": {
			"get": {
				"summary": "Get a tarball containing all images.",
				"description": "Get a tarball containing all images.",
				"operationId": "get-a-tarball-containing-all-images",
				"responses": {
					"200": {
						"description": "no error"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such exec instance\nStream details:\nSimilar to the stream behavior of POST \/container\/(id)\/attach API"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/json": {
			"get": {
				"summary": "List Images",
				"description": "List Images",
				"operationId": "list-images",
				"parameters": [
					{
						"name": "all",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, default false",
						"type": "string"
					},
					{
						"name": "dangling",
						"in": "query",
						"description": "true",
						"type": "string"
					},
					{
						"name": "filters",
						"in": "query",
						"description": "a json encoded value of the filters (a map[string][]string) to process on the images list. Available filters:",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"201": {
						"description": "no error"
					},
					"404": {
						"description": "no such exec instance\nStream details:\nSimilar to the stream behavior of POST \/container\/(id)\/attach API"
					},
					"406": {
						"description": "impossible to attach (container not running)"
					},
					"400": {
						"description": "bad parameter"
					},
					"304": {
						"description": "container already stopped"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/load": {
			"post": {
				"summary": "Load a tarball with a set of images and tags into docker",
				"description": "Load a tarball with a set of images and tags into docker",
				"operationId": "load-a-tarball-with-a-set-of-images-and-tags-into-docker",
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/search": {
			"get": {
				"summary": "Search images",
				"description": "Search images",
				"operationId": "search-images",
				"parameters": [
					{
						"name": "term",
						"in": "query",
						"description": "term to search",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/{name}": {
			"delete": {
				"summary": "Remove an image",
				"description": "Remove an image",
				"operationId": "remove-an-image",
				"parameters": [
					{
						"name": "force",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, default false",
						"type": "string"
					},
					{
						"name": "name",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "noprune",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, default false",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"404": {
						"description": "no such image"
					},
					"409": {
						"description": "conflict"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/{name}\/get": {
			"get": {
				"summary": "Get a tarball containing all images in a repository",
				"description": "Get a tarball containing all images in a repository",
				"operationId": "get-a-tarball-containing-all-images-in-a-repository",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"404": {
						"description": "no such image"
					},
					"409": {
						"description": "conflict"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/{name}\/history": {
			"get": {
				"summary": "Get the history of an image",
				"description": "Get the history of an image",
				"operationId": "get-the-history-of-an-image",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"404": {
						"description": "no such image"
					},
					"409": {
						"description": "conflict"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/{name}\/json": {
			"get": {
				"summary": "Inspect an image",
				"description": "Inspect an image",
				"operationId": "inspect-an-image",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"404": {
						"description": "no such image"
					},
					"409": {
						"description": "conflict"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/{name}\/push": {
			"post": {
				"summary": "Push an image on the registry",
				"description": "Push an image on the registry",
				"operationId": "push-an-image-on-the-registry",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "the tag to associate with the image on the registry, optional",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"404": {
						"description": "no such image"
					},
					"409": {
						"description": "conflict"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/images\/{name}\/tag": {
			"post": {
				"summary": "Tag an image into a repository",
				"description": "Tag an image into a repository",
				"operationId": "tag-an-image-into-a-repository",
				"parameters": [
					{
						"name": "force",
						"in": "query",
						"description": "1\/True\/true or 0\/False\/false, default false",
						"type": "string"
					},
					{
						"name": "name",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "repo",
						"in": "query",
						"description": "The repository to tag in",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "The new tag name",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"404": {
						"description": "no such image"
					},
					"409": {
						"description": "conflict"
					},
					"201": {
						"description": "no error"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/info": {
			"get": {
				"summary": "Display system-wide information",
				"description": "Display system-wide information",
				"operationId": "display-systemwide-information",
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"404": {
						"description": "no such image"
					},
					"409": {
						"description": "conflict"
					},
					"201": {
						"description": "no error"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/version": {
			"get": {
				"summary": "Show the docker version information",
				"description": "Show the docker version information",
				"operationId": "show-the-docker-version-information",
				"responses": {
					"200": {
						"description": "no error"
					},
					"500": {
						"description": "server error"
					},
					"404": {
						"description": "no such image"
					},
					"409": {
						"description": "conflict"
					},
					"201": {
						"description": "no error"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"\/_ping": {
			"get": {
				"summary": "Ping the docker server",
				"description": "Ping the docker server",
				"operationId": "ping-the-docker-server",
				"responses": {
					"200": {
						"description": "OK"
					},
					"500": {
						"description": "server error"
					},
					"404": {
						"description": "no such image"
					},
					"409": {
						"description": "conflict"
					},
					"201": {
						"description": "no error"
					},
					"400": {
						"description": "bad parameter"
					}
				},
				"tags": [
					""
				]
			}
		},
		"accounts": {
			"put": {
				"summary": "Updating an Email Sub-Account ",
				"description": "Updating an Email Sub-Account ",
				"operationId": "",
				"parameters": [
					{
						"name": "address",
						"in": "query",
						"description": "Address.",
						"type": "string"
					},
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the master account (Only the master account can create sub-accounts)",
						"type": "string"
					},
					{
						"name": "bounceurl",
						"in": "query",
						"description": "Bounce Postback URL.",
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "City.",
						"type": "string"
					},
					{
						"name": "companyname",
						"in": "query",
						"description": "Required. Name of the company assigned to this account.",
						"type": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "Two-letter English abbreviation, based on the ISO 3166 standard.",
						"type": "string"
					},
					{
						"name": "generatenewapikey",
						"in": "query",
						"description": "Used to create a new API key for an existing account (1 or 0).",
						"type": "string"
					},
					{
						"name": "password",
						"in": "query",
						"description": "Required. Account password to be assigned. May be passed as clear text or MD5-encrypted with md5- as a prefix.\nValid values and Examples:\nClear text: Gat3keep3r!\nMD5-encrypted: md5-025656084871ac56716d3a9ae15c9e01",
						"type": "string"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "Required. Phone number for the account.",
						"type": "string"
					},
					{
						"name": "spamurl",
						"in": "query",
						"description": "Spam Postback URL.",
						"type": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "State.",
						"type": "string"
					},
					{
						"name": "timezone",
						"in": "query",
						"description": "The timezone of the account, in [+\/-]h.mm format.\nValid values and Examples:\nEastern Time (USA\/Canada): -5.00\nChina\/Hong Kong\/Singapore: +8.00",
						"type": "string"
					},
					{
						"name": "tracklinks",
						"in": "query",
						"description": "Toggle click tracking (1 or 0).",
						"type": "string"
					},
					{
						"name": "trackopens",
						"in": "query",
						"description": "Toggle open tracking (1 or 0).",
						"type": "string"
					},
					{
						"name": "trackunsubscribes",
						"in": "query",
						"description": "Toggle automatic list-unsubscribe support.",
						"type": "string"
					},
					{
						"name": "unsubscribeurl",
						"in": "query",
						"description": "Unsubscribe postback URL.",
						"type": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Required. Account username to be updated",
						"type": "string"
					},
					{
						"name": "zipcode",
						"in": "query",
						"description": "Zip.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"accounts\/delete": {
			"post": {
				"summary": "Deleting an Email Sub-Account",
				"description": "Deleting an Email Sub-Account",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the master account (Only the master account can create sub-accounts)",
						"type": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Required. Account username to be updated",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"opens\/count": {
			"get": {
				"summary": "Email Open Count",
				"description": "Returns total number of opens for the specified account for the specified date range. Including a date range is highly recommended.",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Email address of recipient for filtering.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required.\u00a0End date\/time in full,\u00a0ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "\u00a0Email address of sender for filtering. Must be on the current Approved Sender list. \u00a0if using a GET request, it is best practice to encode special characters such as the &#8220;at symbol&#8221; (@).",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required.\u00a0Start date\/time in full,\u00a0ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"recipients\/activate": {
			"post": {
				"summary": "Activate Recipient(s)",
				"description": "Activating a specified Recipient\u2019s status",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Required. Recipient&#8217;s Email address; can retrieve status for more than one Email address by specifying a comma-delimited list of Email addresses",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"recipients\/status": {
			"get": {
				"summary": "Retrieve Recipient(s) Status",
				"description": "Retrieve Recipient(s) Status",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Required. Recipient&#8217;s Email address. Can retrieve status for more than one Email address by specifying a comma-delimited list of Email addresses.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/bounces": {
			"get": {
				"summary": "Retrieve Email Bounces",
				"description": "Retrieving the Email SPAM Complaints",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "bounce_code - Indicates the code associated with the bounced Email.",
						"in": "query",
						"description": "",
						"type": "string"
					},
					{
						"name": "bounce_code_id - The numeric code determined by the bounce processor.",
						"in": "query",
						"description": "",
						"type": "string"
					},
					{
						"name": "bounce_rule - Indicates the rule that caused this email to bounce.",
						"in": "query",
						"description": "",
						"type": "string"
					},
					{
						"name": "bounce_type",
						"in": "query",
						"description": "Type of bounce for filtering.\nValid Values:\nhard\nsoft",
						"type": "string"
					},
					{
						"name": "bounce_type_id - Indicates whether the bounce type is a hard or soft bounce.\nValid Values:\n1 - Hard Bounce\n2 - Soft Bounce",
						"in": "query",
						"description": "",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Email address of recipient for filtering.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "noheaders",
						"in": "query",
						"description": "Determines whether or not headers are included in the response.\nValid values:\n1 = Exclude bounce header content from the response.\n0 = Default.  Include headers in response.",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "sender_id",
						"in": "query",
						"description": "Identifying number of the sender.",
						"type": "string"
					},
					{
						"name": "startindex",
						"in": "query",
						"description": "Number indicating where to begin reporting results.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/bounces\/count": {
			"get": {
				"summary": "Retrieve Count of Email Bounces",
				"description": "Retrieving a total count of Email bounces using the API requires specific syntax for the REST API.",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required.\u00a0End\u00a0date\/time range in full,\u00a0ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/clicks": {
			"get": {
				"summary": "Reports on Clicks",
				"description": "Returns a list of links clicked for the specified account during the specified date range. Including a date range is highly recommended.",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Email address of recipient for filtering.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "startindex",
						"in": "query",
						"description": "Starting index value (optional).",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email",
					" Reporting"
				]
			}
		},
		"reports\/clicks\/count": {
			"get": {
				"summary": "Retrieve Count of Email Links Clicked",
				"description": "Retrieving a total of Email links clicked",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "domain\u00a0",
						"in": "query",
						"description": "Domain of the recipient, such as &#8220;gmail.com&#8221; or &#8220;comcast.net&#8221;",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Email address of recipient for filtering\u0010.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering\u0010.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required.\u00a0Start date\/time range in full, ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/clicks\/count\/unique": {
			"get": {
				"summary": "Retrieve Count of Email Links Clicked",
				"description": "Retrieving a total of Email links clicked",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "domain\u00a0",
						"in": "query",
						"description": "Domain of the recipient, such as &#8220;gmail.com&#8221; or &#8220;comcast.net&#8221;",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Email address of recipient for filtering\u0010.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering\u0010.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required.\u00a0Start date\/time range in full, ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/clicks\/unique": {
			"get": {
				"summary": "Unique Click Report",
				"description": "Returns a list of unique links clicked for the specified account during the specified date range. Including a date range is highly recommended.",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Email address of recipient for filtering.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "startindex",
						"in": "query",
						"description": "Starting index value (optional).",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/complaints": {
			"get": {
				"summary": "Retrieve Email SPAM Complaints",
				"description": "Retrieve Email SPAM Complaints",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "startindex",
						"in": "query",
						"description": "Number indicating where to begin reporting results.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/complaints\/count": {
			"get": {
				"summary": "Retrieve Count of Email SPAM Complaints",
				"description": "Retrieving a total count of Email complaints ",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required.\u00a0Start date\/time range in full,\u00a0ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/delivered": {
			"get": {
				"summary": "Retrieve Emails Delivered",
				"description": "Retrieve Emails Delivered",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "startindex",
						"in": "query",
						"description": "Number indicating where to begin reporting results.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/delivered\/count": {
			"get": {
				"summary": "Retrieve Count of Emails Delivered",
				"description": "Retrieve Count of Emails Delivered",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. Timestamp for the end of the report.",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/issues": {
			"get": {
				"summary": "Retrieve Email Issues",
				"description": "Retrieve Email Issues",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Email address of recipient for filtering.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "sender_id",
						"in": "query",
						"description": "Identifying number of the sender.",
						"type": "string"
					},
					{
						"name": "startindex",
						"in": "query",
						"description": "Number indicating where to begin reporting results.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/issues\/count": {
			"get": {
				"summary": "Retrieve Count of Email Issues",
				"description": "Retrieving a total count of Email issues",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. Timestamp for the end of the report.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Timestamp for the start of the report.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/opens\/count\/unique": {
			"get": {
				"summary": "Retrieve Count of Email Opens",
				"description": "Returns total number of unique opens for the specified account for the specified date range. Including a date range is highly recommended.",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Email address of recipient for filtering.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required.\u00a0End date\/time in full,\u00a0ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "\u00a0Email address of sender for filtering. Must be on the current Approved Sender list. \u00a0if using a GET request, it is best practice to encode special characters such as the &#8220;at symbol&#8221; (@).",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required.\u00a0Start date\/time in full,\u00a0ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/sent": {
			"get": {
				"summary": "Retrieve Emails Sent",
				"description": "Retrieve Emails Sent",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "startindex",
						"in": "query",
						"description": "Number indicating where to begin reporting results.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"reports\/sent\/count": {
			"get": {
				"summary": "Retrieve Count of Emails Sent",
				"description": "Retrieve Count of Emails Sent",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with the desired information.",
						"type": "string"
					},
					{
						"name": "endtime",
						"in": "query",
						"description": "Required. End date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "Email address of sender for filtering.",
						"type": "string"
					},
					{
						"name": "starttime",
						"in": "query",
						"description": "Required. Start date\/time range in full, ISO 8601 format",
						"type": "string"
					},
					{
						"name": "[X-HeaderName]",
						"in": "query",
						"description": "Name of searchable custom X-header. X-header names are in the format X-[name of header]. X-header values are the search parameter to find in the X-header field. Be sure to url-encode the search value.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"send": {
			"post": {
				"summary": "Send Email",
				"description": "Sending Email",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account which will send the message.",
						"type": "string"
					},
					{
						"name": "bcc",
						"in": "query",
						"description": "Address(es) to blind copy the email to",
						"type": "string"
					},
					{
						"name": "bodyhtml",
						"in": "query",
						"description": "The text\/html version of the email; this field may be encoded in 7-bit, 8-bit, quoted-printable, or base64.\nNotes:\n&#8211; Even though bodytext and bodyhtml are both optional, at least one of them must be provided for the email to be valid.\n&#8211; If sending non-ASCII characters within your content, we recommend using Base64 encoding, as this has proven the most reliable way to preserve special characters across email providers.",
						"type": "string"
					},
					{
						"name": "bodytext",
						"in": "query",
						"description": "The plain\/text version of the email; this field may be encoded in Base64 (recommended), quoted-printable, 8-bit, or 7-bit.\nNotes:\n&#8211; Even though bodytext and bodyhtml are both optional, at least one of them must be provided for the email to be valid.\n&#8211; If sending non-ASCII characters within your content\u00a0you must Base64-encode it first, as this has proven the most reliable way to preserve special characters across email providers.",
						"type": "string"
					},
					{
						"name": "cc",
						"in": "query",
						"description": "Address(es) to copy the email to",
						"type": "string"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "Additional comments about the message.",
						"type": "string"
					},
					{
						"name": "from",
						"in": "query",
						"description": "Required. Sender email address",
						"type": "string"
					},
					{
						"name": "importance",
						"in": "query",
						"description": "A hint from the originator on how important the message is. Can take values of either high, normal or low. Not related to transmission speed.",
						"type": "string"
					},
					{
						"name": "inreplyto",
						"in": "query",
						"description": "One or more message identifier(s) of the original message(s) to which the current message is a reply.",
						"type": "string"
					},
					{
						"name": "keywords",
						"in": "query",
						"description": "A comma-separated list of important words and phrases useful for recipient.",
						"type": "string"
					},
					{
						"name": "messageid",
						"in": "query",
						"description": "A unique message identifier that can be passed in via the api and override the Dyn automatically generated message id.",
						"type": "string"
					},
					{
						"name": "priority",
						"in": "query",
						"description": "Values are either normal, urgent, or non-urgent. This header can influence transmission speed and delivery.",
						"type": "string"
					},
					{
						"name": "references",
						"in": "query",
						"description": "The message identifier(s) of other message(s) to which the current message may be related.",
						"type": "string"
					},
					{
						"name": "replyby",
						"in": "query",
						"description": "The date and time by which a reply is requested. Date-time should be in local time format such as Thu, 13 Feb 2013 23:32:54 -0330.",
						"type": "string"
					},
					{
						"name": "replyto",
						"in": "query",
						"description": "The email address for the recipient to reply to. If left blank, defaults to the from address. The format can either be an email address or a properly formatted from header (example: &#8220;From Name&#8221; &lt;example@email.com&gt;).",
						"type": "string"
					},
					{
						"name": "resent-date",
						"in": "query",
						"description": "The date and time that a message is resent in the same format as replyby.",
						"type": "string"
					},
					{
						"name": "resent-from",
						"in": "query",
						"description": "The email address of the person who has resent the message, or on whose behalf the message has been resent.",
						"type": "string"
					},
					{
						"name": "resent-messageid",
						"in": "query",
						"description": "Contains a message identifier for a resent message.",
						"type": "string"
					},
					{
						"name": "resent-replyto",
						"in": "query",
						"description": "Resent Reply-to in the same format as the replyto header.",
						"type": "string"
					},
					{
						"name": "resent-sender",
						"in": "query",
						"description": "The email address of the person who has resent the message, if this is different from the resent-from value.",
						"type": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "This is the email address of the agent responsible for sending the message. This is an optional header and only relevant when the &#8216;from&#8217; email address is different to the &#8216;sender&#8217; email address.",
						"type": "string"
					},
					{
						"name": "sensitivity",
						"in": "query",
						"description": "How sensitive it is to disclose this message with values that can be either personal, private or company confidential.",
						"type": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "Required. The subject of the email being sent.",
						"type": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Required. Address(es) the email will be sent to",
						"type": "string"
					},
					{
						"name": "xheaders",
						"in": "query",
						"description": "Any additional custom X-headers to send in the email",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"suppressions": {
			"post": {
				"summary": "Add Email Address to Suppression List ",
				"description": "Adding one or more recipients to the suppression list",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account where suppressed address(es) are to be added.",
						"type": "string"
					},
					{
						"name": "emailaddress",
						"in": "query",
						"description": "Required. Email address of recipient to suppress; for multiple addresses, specify a comma-delimited list of email addresses.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"suppressions\/count": {
			"get": {
				"summary": "Retrieve Suppression Count",
				"description": "Retrieving the count of Email addresses on the suppression list",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the account with desired information.",
						"type": "string"
					},
					{
						"name": "enddate",
						"in": "query",
						"description": "End date\/time range in full, ISO 8601 format.",
						"type": "string"
					},
					{
						"name": "startdate",
						"in": "query",
						"description": "Start date\/time range in full, ISO 8601 format.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"xheaders": {
			"post": {
				"summary": "Update Email X-Headers ",
				"description": "Updating the custom x-headers of an Email account",
				"operationId": "",
				"parameters": [
					{
						"name": "apikey",
						"in": "query",
						"description": "Required. API key of the master account (Only the master account can create sub-accounts)",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"attachments\/upload\/": {
			"get": {
				"summary": "Upload Attachment",
				"description": "The upload attachment command is used to upload an attachment for sending.  ",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "your api key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "file",
						"in": "query",
						"description": "The file name being uploaded",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "username",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/add-contact": {
			"get": {
				"summary": "Add Existing Subscriber To List",
				"description": "Add Existing Subscriber To List",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "listname",
						"in": "query",
						"description": "name of list you wish to add subscriber to (separate by semi-colon to add to multiple lists)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/create-contact": {
			"get": {
				"summary": "Create New Subscriber",
				"description": "Create New Subscriber",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "your api key found on the Account screen",
						"type": "string",
						"format": "string"
					},
					{
						"name": "birthdate",
						"in": "query",
						"description": "date of birth of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "city of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "country of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "email address of subscriber\/recipient",
						"type": "string",
						"format": "string"
					},
					{
						"name": "firstname",
						"in": "query",
						"description": "first name of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "gender",
						"in": "query",
						"description": "male or female",
						"type": "string",
						"format": "string"
					},
					{
						"name": "lastname",
						"in": "query",
						"description": " last name of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "listname",
						"in": "query",
						"description": "the name of the list or lists (separated by semi-colon) the subscriber will be added to - if blank, it will just create the subscriber. If the list does not exist it will raise an error and fail",
						"type": "string",
						"format": "string"
					},
					{
						"name": "organizationname",
						"in": "query",
						"description": "organization name the subscriber works for",
						"type": "string",
						"format": "string"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "phone number for the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "postalcode",
						"in": "query",
						"description": "the zip or postal code of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "the state or province for the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "the zip or postal code of the subscriber",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "title",
						"in": "query",
						"description": "the title for the subscriber (Mr., Mrs, Miss, etc)",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/create-lists": {
			"get": {
				"summary": "Create New List",
				"description": "Create New List",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "listname",
						"in": "query",
						"description": "name of list you wish to create",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/delete": {
			"get": {
				"summary": "Delete Existing List",
				"description": "Delete Existing List",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "listname",
						"in": "query",
						"description": "name of list you wish to delete",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/delete-contact": {
			"get": {
				"summary": "Delete Existing Subscriber",
				"description": "Delete Existing Subscriber",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "email address of subscriber\/recipient (separate by semi-colon to remove multiple)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/remove-contact": {
			"get": {
				"summary": "Remove Existing Subscriber From List",
				"description": "Remove Existing Subscriber From List",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "listname",
						"in": "query",
						"description": "name of list you wish to remove subscriber from (separate by semi-colon to remove from multiple lists)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/upload-contacts": {
			"get": {
				"summary": "Create Multiple Subscriber From CSV File",
				"description": "Create Multiple Subscriber From CSV File",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "birthdate",
						"in": "query",
						"description": "date of birth of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "city of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "country of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "email address of subscriber\/recipient",
						"type": "string",
						"format": "string"
					},
					{
						"name": "firstname",
						"in": "query",
						"description": "first name of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "gender",
						"in": "query",
						"description": "male or female",
						"type": "string",
						"format": "string"
					},
					{
						"name": "lastname",
						"in": "query",
						"description": "last name of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "listname",
						"in": "query",
						"description": "the name of the list or lists (separated by semi-colon) the subscriber will be added to - if blank, it will just create the subscriber. If the list does not exist it will raise an error and fail",
						"type": "string",
						"format": "string"
					},
					{
						"name": "organizationname",
						"in": "query",
						"description": "organization name the subscriber works for",
						"type": "string",
						"format": "string"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "phone number for the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "postalcode",
						"in": "query",
						"description": "the zip or postal code of the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "the state or province for the subscriber",
						"type": "string",
						"format": "string"
					},
					{
						"name": "title",
						"in": "query",
						"description": "the title for the subscriber (Mr., Mrs, Miss, etc)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"mailer\/account-details": {
			"get": {
				"summary": "Account Details",
				"description": "The Account Details command is used to determine how much credit you have left.  ",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"mailer\/channel\/delete": {
			"get": {
				"summary": "Deleting Channel",
				"description": "Deleting Channel",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "format",
						"in": "query",
						"description": "csv or xml",
						"type": "string",
						"format": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "channel name to delete",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"mailer\/channel\/list": {
			"get": {
				"summary": "Listing of Active Channels",
				"description": "Listing of Active Channels",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "format",
						"in": "query",
						"description": "csv or xml",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"mailer\/list\/bounced": {
			"get": {
				"summary": "Bounced",
				"description": "This api will return you the list of email addresses which are currently in your block list. ",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"mailer\/list\/complaint": {
			"get": {
				"summary": "Complaint",
				"description": "This api will return you the list of email addresses which are currently in your block list. ",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"mailer\/lists\/unsubscribed": {
			"get": {
				"summary": "Unsubscribed",
				"description": "This api will return you the list of email addresses which are currently in your block list. ",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"mailer\/send\/": {
			"get": {
				"summary": "Send Email",
				"description": "api.elasticemail.com",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "your api key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "body_html",
						"in": "query",
						"description": "html email body",
						"type": "string",
						"format": "string"
					},
					{
						"name": "body_text",
						"in": "query",
						"description": "text email body",
						"type": "string",
						"format": "string"
					},
					{
						"name": "channel",
						"in": "query",
						"description": "an id field (max 60 chars) that can be used for reporting",
						"type": "string",
						"format": "string"
					},
					{
						"name": "charset",
						"in": "query",
						"description": "text value of encoding for example: iso-8859-1, windows-1251, utf-8, us-ascii, windows-1250",
						"type": "string",
						"format": "string"
					},
					{
						"name": "encodingtype",
						"in": "query",
						"description": "0 for None, 1 for Raw7Bit, 2 for Raw8Bit, 3 for QuotedPrintable, 4 for Base64 (Default), 5 for Uue  note that you can also provide the text version such as \"Raw7Bit\" for value 1. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "from",
						"in": "query",
						"description": "from email address",
						"type": "string",
						"format": "string"
					},
					{
						"name": "from_name",
						"in": "query",
						"description": "display name for from email address",
						"type": "string",
						"format": "string"
					},
					{
						"name": "lists",
						"in": "query",
						"description": "the name of a contact list you would like to send to. Separate multiple contact lists by commas",
						"type": "string",
						"format": "string"
					},
					{
						"name": "merge_firstname",
						"in": "query",
						"description": "if sending to a template you can send merge_ fields to merge data with the template. Template fields are entered with {firstname}, {lastname} etc.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "merge_lastname",
						"in": "query",
						"description": "if sending to a template you can send merge_ fields to merge data with the template. Template fields are entered with {firstname}, {lastname} etc.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "reply_to",
						"in": "query",
						"description": "email address to reply to",
						"type": "string",
						"format": "string"
					},
					{
						"name": "reply_to_name",
						"in": "query",
						"description": "display name of the reply to address",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sender",
						"in": "query",
						"description": "email address of the sender",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sender_name",
						"in": "query",
						"description": "display name sender ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "email subject ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "template",
						"in": "query",
						"description": "the name of an email template you have created in your account. If you send a template",
						"type": "string",
						"format": "string"
					},
					{
						"name": "time_offset_minutes",
						"in": "query",
						"description": "number of minutes in the future this email should be sent ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "semi colon separated list of email recipients (each email is treated separately, like a BCC)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "your account email address",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"mailer\/status\/log": {
			"get": {
				"summary": "Log Activity",
				"description": "The detailed activity log api allows you to get detailed information from your activity log on the emails that you have sent. Information can be narrowed by email status, channel and datetime.",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "channel",
						"in": "query",
						"description": "If you included a channel name when submitting your requests you can filter here. If you did not submit a specific channel it is defaulted to the \"from\" email address.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "compress",
						"in": "query",
						"description": "True if you want the results returned as a compressed zip file",
						"type": "string",
						"format": "string"
					},
					{
						"name": "format",
						"in": "query",
						"description": "xml or csv",
						"type": "string",
						"format": "string"
					},
					{
						"name": "from",
						"in": "query",
						"description": "Server time in the format: 5\/19\/2011 10:54:20 PM",
						"type": "string",
						"format": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "One of the following status values: 0 or all, 1 for ReadyToSend, 2 for InProgress, 4 for Bounced, 5 for Sent, 6 for Opened, 7 for Clicked, 8 for Unsubscribed, 9 for Abuse Report",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Server time in the format: 5\/19\/2011 10:54:20 PM",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"mailer\/status\/{message_id}": {
			"get": {
				"summary": "Get Status",
				"description": "Get the status of an email message",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "message_id",
						"in": "path",
						"description": "The ID of the email message.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "showdelivered",
						"in": "query",
						"description": "true - This will return all the recipients who succeeded. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "showdetails",
						"in": "query",
						"description": "true  - This will return all recipients for each status.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "showerrors",
						"in": "query",
						"description": "true - This will return all the recipients who bounced with details on why",
						"type": "string",
						"format": "string"
					},
					{
						"name": "showfailed",
						"in": "query",
						"description": "true - This will return all the recipients who bounced. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "showpending",
						"in": "query",
						"description": "true - This will return all the recipients still in progress. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "showstats",
						"in": "query",
						"description": "Show stats.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "Your user name.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"Article\/search": {
			"get": {
				"summary": "Article Search",
				"description": " read-only service for the retrieval of magazine and website content from the Hearst Magazines Content Management System. Contains a list of parameters and sample responses.",
				"operationId": "",
				"parameters": [
					{
						"name": "ad_category_id",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "article_category_id",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "article_section_id",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "article_type_id",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "keywords",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "pages",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "print_issue_date",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "publish_date_begin",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "shape",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "site_id",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "title",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "url_name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "_callback",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "_pretty",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" articles"
				]
			}
		},
		"AdCategory\/search": {
			"get": {
				"summary": "Search Ad Categories",
				"description": "A read-only service for the retrieval of Ad Category content from the Hearst Magazines Content Management System.",
				"operationId": "",
				"parameters": [
					{
						"name": "article_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "organization_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "parent_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "prefix",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "site_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "_callback",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "_pretty",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" category"
				]
			}
		},
		"ArticleSection\/search": {
			"get": {
				"summary": "Article Section Search",
				"description": "A read-only service for the retrieval of Article Section content from the Hearst Magazines Content Management System. Contains a list of parameters and sample responses.",
				"operationId": "",
				"parameters": [
					{
						"name": "description",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "full_name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "full_path",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "keywords",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "parent_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "prefix",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "site_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "_callback",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "_pretty",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" article",
					" sections"
				]
			}
		},
		"ArticleImage\/search": {
			"get": {
				"summary": "Article Image Search",
				"description": "A read-only service for the retrieval of Article Image content from the Hearst Magazines Content Management System. Contains a list of parameters and sample responses.",
				"operationId": "",
				"parameters": [
					{
						"name": "caption",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "keywords",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "shape",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "site_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "_callback",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "_pretty",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" articles",
					" images"
				]
			}
		},
		"ArticleType\/search": {
			"get": {
				"summary": "Article Type Search",
				"description": "A read-only service for the retrieval of Article Type content from the Hearst Magazines Content Management System. Contains a list of parameters and sample responses.",
				"operationId": "",
				"parameters": [
					{
						"name": "dtd",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "organization_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "site_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "_callback",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "_pretty",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"article",
					" type"
				]
			}
		},
		"Author\/search": {
			"get": {
				"summary": "Author Search",
				"description": "A read-only service for the retrieval of Author content from the Hearst Magazines Content Management System. Contains a list of parameters and sample responses.",
				"operationId": "",
				"parameters": [
					{
						"name": "email",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "first_name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "last_name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "nick_name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "organization_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "site_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "title",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "_callback",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "_pretty",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" author"
				]
			}
		},
		"Source\/search": {
			"get": {
				"summary": "Source Search",
				"description": "A read-only service for the retrieval of Source content from the Hearst Magazines Content Management System. Contains a list of parameters and sample responses.",
				"operationId": "",
				"parameters": [
					{
						"name": "description",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "organization_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "_callback",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "_pretty",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" source"
				]
			}
		},
		"Template\/search": {
			"get": {
				"summary": "Template Search",
				"description": "A read-only Service for retrieval of Template content from the Hearst Magazines Content Management System. Contains a list of parameters and sample responses.",
				"operationId": "",
				"parameters": [
					{
						"name": "file_name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "is_top_level",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "site_id",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "total",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "_callback",
						"in": "query",
						"description": "",
						"type": "string",
						"format": "string"
					},
					{
						"name": "_pretty",
						"in": "query",
						"description": "",
						"type": "integer",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" magazine",
					" template"
				]
			}
		},
		"drafts\/": {
			"post": {
				"summary": "Creating a Draft",
				"description": "Creating a Draft",
				"operationId": "",
				"parameters": [
					{
						"name": "bcc",
						"in": "query",
						"description": "Blind carbon messages.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "body",
						"in": "query",
						"description": "Body of the message.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "cc",
						"in": "query",
						"description": "Other address to send to.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "file_ids",
						"in": "query",
						"description": "Files to associate with email.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "Subject of the message.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "thread_id",
						"in": "query",
						"description": "ID thread to associate messages.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Who the message is to.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"drafts\/{draft_id}": {
			"put": {
				"summary": "Updating a draft",
				"description": "Updating a draft",
				"operationId": "",
				"parameters": [
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"files\/": {
			"post": {
				"summary": "Uploading a new file",
				"description": "Uploading a new file",
				"operationId": "",
				"parameters": [
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"files\/{file_id}": {
			"get": {
				"summary": "Retrieving a specific files metadata",
				"description": "Retrieving a specific files metadata",
				"operationId": "",
				"parameters": [
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "Uploading a new file",
						"in": "query",
						"description": "The ID of the file.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"files\/{file_id}\/download": {
			"get": {
				"summary": "Downloading files",
				"description": "Downloading files",
				"operationId": "",
				"parameters": [
					{
						"name": "file_id",
						"in": "query",
						"description": "The ID of the file.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"send\/": {
			"get": {
				"summary": "Sending",
				"description": "Sending",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"tags\/": {
			"post": {
				"summary": "Creating Custom Tags",
				"description": "Creating Custom Tags",
				"operationId": "",
				"parameters": [
					{
						"name": "name",
						"in": "body",
						"description": "Tag name.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"tags\/{tag_id}": {
			"put": {
				"summary": "Changing custom tag names",
				"description": "Changing custom tag names",
				"operationId": "",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"description": "The name of the tag.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "namespace_id",
						"in": "query",
						"description": "Namespaces are essentially references to linked accounts. They are the top-level unit of a user\u2019s data.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"\/market_research_library\/search": {
			"get": {
				"summary": "Market Research Library Search",
				"description": "This API provides metadata for country and industry reports that are produced by ITAs trade experts and are available in ITAs online market research library.",
				"operationId": "research",
				"parameters": [
					{
						"name": "countries",
						"in": "query",
						"description": "Returns office locations based on ISO alpha-2 country codes.",
						"type": "string"
					},
					{
						"name": "industry",
						"in": "query",
						"description": "Returns market research reports for a specific industry.",
						"type": "string"
					},
					{
						"name": "keyword",
						"in": "query",
						"description": "Returns market research reports for a match in the description or title fields.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "The offset parameter defines the offset from the first result you want to fetch.",
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size parameter allows you to configure the maximum amount of hits to be returned.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Success Research"
					}
				},
				"tags": [
					"Trade",
					" Commerce",
					" Reports",
					" Research"
				]
			}
		},
		"\/ita_office_locations\/search": {
			"get": {
				"summary": "ITA Offices and Centers Search",
				"description": "This API provides contact and address information for all of ITAs domestic and international export assistance centers.",
				"operationId": "office",
				"parameters": [
					{
						"name": "city",
						"in": "query",
						"description": "Returns office locations based on city name",
						"type": "string"
					},
					{
						"name": "countries",
						"in": "query",
						"description": "Returns office locations based on ISO alpha-2 country codes.",
						"type": "string"
					},
					{
						"name": "keyword",
						"in": "query",
						"description": "Returns office locations for a match within the post or office name fields.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "The offset parameter defines the offset from the first result you want to fetch.",
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size parameter allows you to configure the maximum amount of hits to be returned. ",
						"type": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "Returns locations for export assistance centers located in a specific U.S. State or Dependent Area.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Offices Response"
					}
				},
				"tags": [
					"Trade",
					" Commerce",
					" Offices",
					" Centers",
					" Locations"
				]
			}
		},
		"\/trade_events\/search": {
			"get": {
				"summary": "Trade Events",
				"description": "Provides information on industry conferences, webinars, lectures and trade missions organized by the U.S. Dept. of Commerce",
				"operationId": "trade-events",
				"parameters": [
					{
						"name": "countries",
						"in": "query",
						"description": "Returns office locations based on ISO alpha-2 country codes.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "industry",
						"in": "query",
						"description": "Searches for specific controlled industry names",
						"type": "string",
						"format": "string"
					},
					{
						"name": "keyword",
						"in": "query",
						"description": "Searches for a match within the event_name and description fields.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "The offset parameter defines the offset from the first result you want to fetch.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size parameter allows you to configure the maximum amount of hits to be returned. ",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Event Response"
					}
				},
				"tags": [
					"Trade",
					" Events",
					" Conferences",
					" Webinars"
				]
			}
		},
		"\/trade_leads\/search": {
			"get": {
				"summary": "Overseas Contract Opportunities For US Businesses",
				"description": "The Trade Leads API provides contract opportunities for U.S. businesses selling their products and services overseas. These leads come from a variety of sources and we continue to expand the number of leads available.",
				"operationId": "opportunities",
				"parameters": [
					{
						"name": "countries",
						"in": "query",
						"description": "Returns office locations based on ISO alpha-2 country codes.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "industry",
						"in": "query",
						"description": "Searches for specific controlled industry names",
						"type": "string",
						"format": "string"
					},
					{
						"name": "keyword",
						"in": "query",
						"description": "Searches for a match within the event_name and description fields.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "The offset parameter defines the offset from the first result you want to fetch.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size parameter allows you to configure the maximum amount of hits to be returned. ",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Lead Response"
					}
				},
				"tags": [
					"U.S.",
					" Trade",
					" Government",
					" Overseas",
					" Business",
					" Contracts"
				]
			}
		},
		"\/trade_articles\/search": {
			"get": {
				"summary": "Trade News And Articles",
				"description": "The Trade News & Articles API provides in-depth news and articles written by Trade Specialists working in the Federal government. The news and articles are categorized by industry, country, and topic area. Developers can use this API to provide exporters with the latest insights into their industry and into the countries with which they would like to do business.",
				"operationId": "news",
				"parameters": [
					{
						"name": "evergreen",
						"in": "query",
						"description": "Flag to designate articles that are always relevant to particular topic.",
						"type": "boolean",
						"format": "boolean"
					},
					{
						"name": "keyword",
						"in": "query",
						"description": "Returns articles for a match in the content and title fields.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "The offset parameter defines the offset from the first result you want to fetch.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "pub_date_end",
						"in": "query",
						"description": "Returns articles created on or before a specified date.",
						"type": "string",
						"format": "date"
					},
					{
						"name": "pub_date_start",
						"in": "query",
						"description": "Returns articles created on or after a specific date.",
						"type": "string",
						"format": "date"
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size parameter allows you to configure the maximum amount of hits to be returned. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "update_date",
						"in": "query",
						"description": "Returns articles created on a specified date.",
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Article Response"
					}
				},
				"tags": [
					"Government",
					" Trade",
					" News",
					" Articles",
					" Industries"
				]
			}
		},
		"bounces\/": {
			"get": {
				"summary": "Get bounces",
				"description": "Get bounces",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "count",
						"in": "query",
						"description": "Required\n                    Number of bounces to skip",
						"type": "string"
					},
					{
						"name": "emailFilter",
						"in": "query",
						"description": "Required\n                    Number of bounces to skip",
						"type": "string"
					},
					{
						"name": "inactive",
						"in": "query",
						"description": "Required\n                    Number of bounces to skip",
						"type": "string"
					},
					{
						"name": "messageID",
						"in": "query",
						"description": "Required\n                    Number of bounces to skip",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Required\n                    Number of bounces to skip",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Required\n                    Number of bounces to skip",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Required\n                    Number of bounces to skip",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"bounces\/{address}": {
			"get": {
				"summary": "Bounce",
				"description": "Fetches a single bounce event by a given email address. This is useful to check if a given email address has bounced before.",
				"operationId": "",
				"parameters": [
					{
						"name": "address",
						"in": "path",
						"description": "The email address to get bounce request for.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"complaints\/": {
			"post": {
				"summary": "Add Complaint",
				"description": "Adds an address to the complaints table.",
				"operationId": "",
				"parameters": [
					{
						"name": "address",
						"in": "query",
						"description": "Email address to add to the complaint list.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"complaints\/{address}": {
			"get": {
				"summary": "Complaint",
				"description": "Fetches a single spam complaint by a given email address. This is useful to check if a particular user has complained.",
				"operationId": "",
				"parameters": [
					{
						"name": "address",
						"in": "query",
						"description": "Email address of the complaint to get.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists": {
			"post": {
				"summary": "Create List",
				"description": "Creates a new mailing list.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_level",
						"in": "query",
						"description": "List access level, one of: readonly (default), members, everyone",
						"type": "string",
						"format": "string"
					},
					{
						"name": "address",
						"in": "query",
						"description": "A valid email address for the mailing list, e.g. developers@mailgun.net, or Developers <devs@mg.net>",
						"type": "string",
						"format": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "A description",
						"type": "string",
						"format": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Mailing list name, e.g. Developers (optional)",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/": {
			"get": {
				"summary": "Lists",
				"description": "Returns a list of mailing lists under your account.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_level",
						"in": "query",
						"description": "List access level, one of: readonly (default), members, everyone",
						"type": "string",
						"format": "string"
					},
					{
						"name": "address",
						"in": "query",
						"description": "Find a mailing list by it\u2019s address (optional)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Description string",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Maximum number of records to return (100 by default)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "namespace_id",
						"in": "query",
						"description": "New name, e.g. My newsletter (",
						"type": "string",
						"format": "string"
					},
					{
						"name": "skip",
						"in": "query",
						"description": "Records to skip (0 by default)",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/{address}": {
			"put": {
				"summary": "Update List",
				"description": "Update mailing list properties, such as address, description or name",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/{address}\/members": {
			"get": {
				"summary": "Add To List",
				"description": "Adds a member to the mailing list.",
				"operationId": "",
				"parameters": [
					{
						"name": "address",
						"in": "query",
						"description": "Valid email address specification, e.g. Alice <alice@example.com> or just alice@example.com",
						"type": "string",
						"format": "string"
					},
					{
						"name": "Name",
						"in": "query",
						"description": "Optional member name",
						"type": "string",
						"format": "string"
					},
					{
						"name": "subscribed",
						"in": "query",
						"description": "yes to add as subscribed (default), no as unsubscribed",
						"type": "string",
						"format": "string"
					},
					{
						"name": "upsert",
						"in": "query",
						"description": "yes to update member if present, no to raise error in case of a duplicate member (default)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "vars",
						"in": "query",
						"description": "JSON-encoded dictionary string with arbitrary parameters, e.g. {\"gender\":\"female\",\"age\":27}",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/{address}\/members\/": {
			"get": {
				"summary": "List Members",
				"description": "Fetches the list of mailing list members.",
				"operationId": "",
				"parameters": [
					{
						"name": "limit",
						"in": "query",
						"description": "Maximum number of records to return (100 by default)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "skip",
						"in": "query",
						"description": "Records to skip (0 by default)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "subscribed",
						"in": "query",
						"description": "yes to list subscribed, no for unsubscribed, list all if not set",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"lists\/{address}\/members\/{member_address}": {
			"get": {
				"summary": "List Member",
				"description": "Retrieves a mailing list member.",
				"operationId": "",
				"parameters": [
					{
						"name": "address",
						"in": "query",
						"description": "Email address of commenter.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "member_address",
						"in": "query",
						"description": "Email address on the list.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages.mime": {
			"post": {
				"summary": "Posts Mime Message",
				"description": "Posts a message in MIME format. Note: you will need to build a MIME string yourself. Use a MIME library for your programming language to do this. Pass the resulting MIME string as message parameter.",
				"operationId": "",
				"parameters": [
					{
						"name": "h:X-My-Header",
						"in": "query",
						"description": "h: prefix followed by an arbitrary value allows to append\na custom MIME header to the message (X-My-Header\nin this case). For example, h:Reply-To to specify Reply-To\naddress.",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "MIME string of the message. Make sure to use\nmultipart\/form-data to send this as a file upload.",
						"type": "string"
					},
					{
						"name": "o:campaign",
						"in": "query",
						"description": "Id of the campaign the message belongs to. See\nCampaign Analytics for details.",
						"type": "string"
					},
					{
						"name": "o:deliverytime",
						"in": "query",
						"description": "Desired time of delivery. See Date Format. Note:\nMessages can be scheduled for a maximum of 3 days in the\nfuture.",
						"type": "string"
					},
					{
						"name": "o:dkim",
						"in": "query",
						"description": "Enables\/disabled DKIM signatures on per-message basis.\nPass yes or no",
						"type": "string"
					},
					{
						"name": "o:tag",
						"in": "query",
						"description": "Tag string. See Tagging for more information.",
						"type": "string"
					},
					{
						"name": "o:testmode",
						"in": "query",
						"description": "Enables sending in test mode. Pass yes if needed.\nSee Sending in Test Mode",
						"type": "string"
					},
					{
						"name": "o:tracking",
						"in": "query",
						"description": "Toggles tracking on a per-message basis, see\nTracking Messages for details. Pass yes or no.",
						"type": "string"
					},
					{
						"name": "o:tracking-clicks",
						"in": "query",
						"description": "Toggles clicks tracking on a per-message basis. Has higher\npriority than domain-level setting. Pass yes, no\nor htmlonly.",
						"type": "string"
					},
					{
						"name": "o:tracking-opens",
						"in": "query",
						"description": "Toggles opens tracking on a per-message basis. Has higher\npriority than domain-level setting. Pass yes or no.",
						"type": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Email address of the recipient(s).\nExample: &quot;Bob &lt;bob&#64;host.com&gt;&quot;. You can use commas to\nseparate multiple recipients.\nMake sure to include all To, Cc and Bcc\nrecipients of the message.",
						"type": "string"
					},
					{
						"name": "v:my-var",
						"in": "query",
						"description": "v: prefix followed by an arbitrary name allows to\nattach a custom JSON data to the message.\nSee Attaching Data to Messages for more information.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/{id}": {
			"get": {
				"summary": "Message",
				"description": "Gets a message.",
				"operationId": "",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "ID of the message.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"routes\/": {
			"post": {
				"summary": "Add Route",
				"description": "Creates a new route.",
				"operationId": "",
				"parameters": [
					{
						"name": "action",
						"in": "query",
						"description": "Route action. This action is executed when the expression evaluates to True. Example: forward(\"alice@example.com\") You can pass multiple action parameters.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "An arbitrary string.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "expression",
						"in": "query",
						"description": "A filter expression like match_recipient('.*@gmail.com')",
						"type": "string",
						"format": "string"
					},
					{
						"name": "priority",
						"in": "query",
						"description": "Integer: smaller number indicates higher priority. Higher priority routes are handled first. Defaults to 0.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"routes\/{id}": {
			"put": {
				"summary": "Updates Route",
				"description": "Updates a given route by ID. ",
				"operationId": "",
				"parameters": [
					{
						"name": "action",
						"in": "query",
						"description": "Route action. This action is executed when the expression evaluates to True. Example: forward(\"alice@example.com\") You can pass multiple action parameters.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "An arbitrary string.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "expression",
						"in": "query",
						"description": "A filter expression like match_recipient('.*@gmail.com')",
						"type": "string",
						"format": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "ID of the route.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "priority",
						"in": "query",
						"description": "Integer: smaller number indicates higher priority. Higher priority routes are handled first.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/": {
			"get": {
				"summary": "Stats",
				"description": "Returns a list of event stat items. Each record represents counts for one event per one day.",
				"operationId": "",
				"parameters": [
					{
						"name": "event",
						"in": "query",
						"description": "Name of the event to receive the stats for. Note that you can specify this parameter multiple times to fetch stats for several events at the same time (see example below)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Maximum number of records to return. (100 by default)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "skip",
						"in": "query",
						"description": "Number of records to skip. (0 by default)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "start-date",
						"in": "query",
						"description": "The date to receive the stats starting from. Should have ISO8601 format (YYYY-MM-DD).",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"tags\/{tag}": {
			"delete": {
				"summary": "Delete Tag",
				"description": "Deletes all counters for particular tag and the tag itself.",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"unsubscribes\/": {
			"post": {
				"summary": "Add to unsubscribe list.",
				"description": "Adds address to unsubscribed table.",
				"operationId": "",
				"parameters": [
					{
						"name": "address",
						"in": "query",
						"description": "The address to add to unsubscribe list.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Tag to unsubscribe from, use * to unsubscribe address from domain",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"unsubscribes\/{address}": {
			"get": {
				"summary": "Unsubscribe",
				"description": "Retreives a single unsubscribe record. Can be used to check if a given address is present in the list of unsubscribed users.",
				"operationId": "",
				"parameters": [
					{
						"name": "address",
						"in": "query",
						"description": "The email address of the person on the unsubscribe list.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"message\/": {
			"get": {
				"summary": "Message List",
				"description": "Allows you to list messages.",
				"operationId": "",
				"parameters": [
					{
						"name": "Campaign",
						"in": "query",
						"description": "Only retrieve message resources for which Campaign ID equals the specified value.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "Contact",
						"in": "query",
						"description": "Only retrieve message resources for which Contact ID equals the specified value.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "MessageState",
						"in": "query",
						"description": "Only show messages with this state.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "PlanSubscription",
						"in": "query",
						"description": "Only retrieve message resources for which PlanSubscription ID equals the specified value.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "Sender",
						"in": "query",
						"description": "Only show messages from this sender.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messagehistory\/": {
			"get": {
				"summary": "Message History",
				"description": "List message history resources ",
				"operationId": "",
				"parameters": [
					{
						"name": "Message",
						"in": "path",
						"description": "ID of message for which to show the history.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messagehistory\/{id}": {
			"get": {
				"summary": "Message History",
				"description": "Get the history of a message.",
				"operationId": "",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the message history.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messageinformation\/": {
			"get": {
				"summary": "Message Information",
				"description": "Lists the information about a message.",
				"operationId": "",
				"parameters": [
					{
						"name": "CampaignID",
						"in": "query",
						"description": "Unique numerical ID for this object.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "CampaignStatus",
						"in": "query",
						"description": "Only retrieve campaigns with status equal to specified value.\n\n                            \n                                [ Type SmallInt ]",
						"type": "string"
					},
					{
						"name": "ContactsList",
						"in": "query",
						"description": "Only retrieve campaigns sent to specified Contacts list.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "CustomCampaign",
						"in": "query",
						"description": "Only retrieve campaigns with given Custom Value.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "From",
						"in": "query",
						"description": "Only retrieve campaigns with given From header.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "FromDomain",
						"in": "query",
						"description": "Only retrieve campaigns with given domain in From header.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "FromID",
						"in": "query",
						"description": "Only retrieve campaigns with this sender ID.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "FromTS",
						"in": "query",
						"description": "Only retrieve campaigns with SendStartAt after this timestamp.\n\n                            \n                                [ Type TRFC3339DateTime ]",
						"type": "string"
					},
					{
						"name": "FromType",
						"in": "query",
						"description": "Only retrieve campaigns with FromType equal to specified value.\n\n                            \n                                [ Type LongInt ]",
						"type": "string"
					},
					{
						"name": "IsDeleted",
						"in": "query",
						"description": "Only retrieve campaigns where isDeleted matches the specified value.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "IsNewsletterTool",
						"in": "query",
						"description": "Only retrieve campaigns which were started by the newsletter tool.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "IsStarred",
						"in": "query",
						"description": "Only retrieve campaigns which were marked as starred.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "MessageStatus",
						"in": "query",
						"description": "Only retrieve messages with status equal to specified value.\n\n                            \n                                [ Type TMessageStatus ]",
						"type": "string"
					},
					{
						"name": "Period",
						"in": "query",
						"description": "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "ToTS",
						"in": "query",
						"description": "Only retrieve campaigns with SendStartAt timestamp less than the specified value.\n\n                            \n                                [ Type TRFC3339DateTime ]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messageinformation\/{id}": {
			"get": {
				"summary": "Message Information",
				"description": "Lists a message informaiton.",
				"operationId": "",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID of the message.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messagesentstatistics\/": {
			"get": {
				"summary": "Message Statistics",
				"description": "Lists the message statistics.",
				"operationId": "",
				"parameters": [
					{
						"name": "AllMessages",
						"in": "query",
						"description": "Retrieve all messages. Normally, only the first message of each campaign is retrieved.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "CampaignID",
						"in": "query",
						"description": "Unique numerical ID for this object.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "CampaignStatus",
						"in": "query",
						"description": "Only retrieve campaigns with Status equal to specified value.\n\n                            \n                                [ Type SmallInt ]",
						"type": "string"
					},
					{
						"name": "Contact",
						"in": "query",
						"description": "Only retrieve messagesentstatistics resources for which Contact equals the specified value.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "ContactsList",
						"in": "query",
						"description": "Only retrieve campaigns sent to specified Contacts list.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "CustomCampaign",
						"in": "query",
						"description": "Only retrieve campaigns with given Custom Value.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "From",
						"in": "query",
						"description": "Only retrieve campaigns with given From header.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "FromDomain",
						"in": "query",
						"description": "Only retrieve campaigns with given domain in From header.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "FromID",
						"in": "query",
						"description": "Only retrieve campaigns with this sender ID.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "FromTS",
						"in": "query",
						"description": "Only retrieve campaigns with SendStartAt after this timestamp.\n\n                            \n                                [ Type TRFC3339DateTime ]",
						"type": "string"
					},
					{
						"name": "FromType",
						"in": "query",
						"description": "Only retrieve campaigns with FromType equal to specified value.\n\n                            \n                                [ Type LongInt ]",
						"type": "string"
					},
					{
						"name": "IsDeleted",
						"in": "query",
						"description": "Only retrieve campaigns where isDeleted matches the specified value.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "IsNewsletterTool",
						"in": "query",
						"description": "Only retrieve campaigns which were started by the newsletter tool.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "IsStarred",
						"in": "query",
						"description": "Only retrieve campaigns which were marked as starred.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "MessageStatus",
						"in": "query",
						"description": "Only retrieve messages with Status equal to specified value.\n\n                            \n                                [ Type TMessageStatus ]",
						"type": "string"
					},
					{
						"name": "Period",
						"in": "query",
						"description": "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "ShowExtraData",
						"in": "query",
						"description": "[ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "ToTS",
						"in": "query",
						"description": "Only retrieve campaigns with SendStartAt timestamp less than the specified value.\n\n                            \n                                [ Type TRFC3339DateTime ]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messagesentstatistics\/{id}": {
			"get": {
				"summary": "Message Statistics",
				"description": "List message statistics.",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messagestate\/{id}": {
			"get": {
				"summary": "Message State",
				"description": "Returns message state.",
				"operationId": "",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "Id of the message.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messagestatistics\/": {
			"get": {
				"summary": "Message Statistics",
				"description": "Message Statistics",
				"operationId": "",
				"parameters": [
					{
						"name": "CampaignID",
						"in": "query",
						"description": "Unique numerical ID for this object.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "CampaignStatus",
						"in": "query",
						"description": "Only retrieve campaigns with status equal to specified value.\n\n                            \n                                [ Type SmallInt ]",
						"type": "string"
					},
					{
						"name": "ContactEmail",
						"in": "query",
						"description": "Only retrieve message statistics for this contact email address.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "ContactID",
						"in": "query",
						"description": "Unique numerical ID for this object.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "ContactListID",
						"in": "query",
						"description": "[ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "CustomCampaign",
						"in": "query",
						"description": "Only retrieve campaigns with given Custom Value.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "From",
						"in": "query",
						"description": "Only retrieve campaigns with given From header.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "FromDomain",
						"in": "query",
						"description": "Only retrieve campaigns with given domain in From header.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "FromID",
						"in": "query",
						"description": "Only retrieve campaigns with this sender ID.\n\n                            \n                                [ Type Int64 ]",
						"type": "string"
					},
					{
						"name": "FromTS",
						"in": "query",
						"description": "Only retrieve campaigns with SendStartAt after this timestamp.\n\n                            \n                                [ Type TRFC3339DateTime ]",
						"type": "string"
					},
					{
						"name": "FromType",
						"in": "query",
						"description": "Only retrieve campaigns with FromType equal to specified value.\n\n                            \n                                [ Type LongInt ]",
						"type": "string"
					},
					{
						"name": "IsDeleted",
						"in": "query",
						"description": "Only retrieve campaigns where isDeleted matches the specified value.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "IsNewsletterTool",
						"in": "query",
						"description": "Only retrieve campaigns which were started by the newsletter tool.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "IsStarred",
						"in": "query",
						"description": "Only retrieve campaigns which were marked as starred.\n\n                            \n                                [ Type TBooleanFilter ]",
						"type": "string"
					},
					{
						"name": "MessageStatus",
						"in": "query",
						"description": "Only retrieve messages with status equal to specified value.\n\n                            \n                                [ Type TMessageStatus ]",
						"type": "string"
					},
					{
						"name": "Period",
						"in": "query",
						"description": "Set FromTS and ToTS timestamps to beginning of indicated period and current timestamp, respectively.\n\n                            \n                                [ Type AnsiString ]",
						"type": "string"
					},
					{
						"name": "ToTS",
						"in": "query",
						"description": "Only retrieve campaigns with SendStartAt timestamp less than the specified value.\n\n                            \n                                [ Type TRFC3339DateTime ]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messagestatistics\/{id}": {
			"get": {
				"summary": "Message Statistics",
				"description": "Message Statistics",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"message{id}": {
			"get": {
				"summary": "Message Detail",
				"description": "View the details of a message.",
				"operationId": "",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Message ID.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"send_sms\/": {
			"get": {
				"summary": "Send SMS",
				"description": " Sending SMS text messages",
				"operationId": "",
				"parameters": [
					{
						"name": "autoconvert",
						"in": "query",
						"description": "on\tuse replacement settings from account's API Auto Replace settings page full\tall non GSM 03.38 characters will be replaced with suitable alternatives. off\tmessage content is not modified in any way.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "charset",
						"in": "query",
						"description": "Encoding of the \"text\" and \"from\" parameter value. Defaults to UTF-8",
						"type": "string",
						"format": "string"
					},
					{
						"name": "dlr-url",
						"in": "query",
						"description": "URL where automatic Delivery Request is made.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "from",
						"in": "query",
						"description": "Optional parameter that sets Sender. When not set, default Sender is used. Sender must be encoded in UTF-8",
						"type": "string",
						"format": "string"
					},
					{
						"name": "password",
						"in": "query",
						"description": "API account security key (API key) from the Messente's web page",
						"type": "string",
						"format": "string"
					},
					{
						"name": "text",
						"in": "query",
						"description": "All characters (Unicode) and long messages are supported",
						"type": "string",
						"format": "string"
					},
					{
						"name": "time_to_send",
						"in": "query",
						"description": "Optional parameter for sending message at some specific time in the future. Must be numeric Unix timestamp i.e. 1415253378. If time_to_send is set in past, message will be sent with no delays.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Receiver's phone number with country code",
						"type": "string",
						"format": "string"
					},
					{
						"name": "udh",
						"in": "query",
						"description": "SMS User Data Header",
						"type": "string",
						"format": "string"
					},
					{
						"name": "username",
						"in": "query",
						"description": "API account user name from the Messente's web page",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" SMS"
				]
			}
		},
		"create_comment\/": {
			"get": {
				"summary": "Create Comment",
				"description": "Create Comment",
				"operationId": "",
				"parameters": [
					{
						"name": "blog",
						"in": "query",
						"description": "URL of commenters blog\/website.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "body",
						"in": "query",
						"description": "Content of comment.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "commentable_id",
						"in": "query",
						"description": "ID of the material that is commented.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "email",
						"in": "query",
						"description": "Email address of commenter.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Name of commenter.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "type_of_media",
						"in": "query",
						"description": "Type of material. Valid values are \"pressrelease\", \"news\", \"blog_post\", \"event\", \"image\", \"video\", \"document\" and \"contact_person\".",
						"type": "string",
						"format": "string"
					},
					{
						"name": "unique key",
						"in": "path",
						"description": "The MyNewsDesk API Key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "user_ip",
						"in": "query",
						"description": "IP number of commenter. This is needed for easier moderation and spam protection.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" comment"
				]
			}
		},
		"list\/": {
			"get": {
				"summary": "Lists news",
				"description": "Lists news",
				"operationId": "",
				"parameters": [
					{
						"name": "archived",
						"in": "query",
						"description": "Fetch items marked as archived, this is useful for fetching old events. Example: true \u2013 Fetches all the items, including archived ones",
						"type": "string",
						"format": "string"
					},
					{
						"name": "callback",
						"in": "query",
						"description": "If format is JSON and callback is specified, the JSON response is wrapped in a function call with the specified callback name.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "format",
						"in": "query",
						"description": "Specify the format of the response: RSS 2.0, JSON or full XML.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the maximum number of items in the response. This cannot be more than 100.",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Specify which item (sequentially) should be first, skipping preceding items.",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "Specify the sort order of the result: publish date (published), latest update (updated) or creation date (created).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "pressroom",
						"in": "query",
						"description": "Set the pressroom to fetch material from. Examples: se \u2013 Swedish pressroom, uk \u2013 United Kingdom pressroom.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "type_of_media",
						"in": "query",
						"description": "Fetch material of this type only.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "unique key",
						"in": "path",
						"description": "The MyNewsDesk API Key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news"
				]
			}
		},
		"pressroom_info\/": {
			"get": {
				"summary": "Pressroom Info",
				"description": "Pressroom Info",
				"operationId": "",
				"parameters": [
					{
						"name": "pressroom",
						"in": "query",
						"description": "Set the pressroom to search in. se \u2013 Swedish pressroom, no \u2013 Norwegian pressroom and en for international pressroom.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "unique key",
						"in": "path",
						"description": "The MyNewsDesk API Key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" press"
				]
			}
		},
		"search\/": {
			"get": {
				"summary": "News Search",
				"description": "News Search",
				"operationId": "",
				"parameters": [
					{
						"name": "callback",
						"in": "query",
						"description": "If format is JSON and callback is specified, the JSON response is wrapped in a function call with the specified callback name.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "date_end",
						"in": "query",
						"description": "End date. Valid only with date modes \"between\" and \"before\". Format: YYYY-MM-DD, e.g. \"2006-12-31\".",
						"type": "string",
						"format": "string"
					},
					{
						"name": "date_mode",
						"in": "query",
						"description": "Specifies how the date parameters are used. Valid values are: \"between\", \"on\", \"before\" or \"after\".",
						"type": "string",
						"format": "string"
					},
					{
						"name": "date_on",
						"in": "query",
						"description": "Date. Valid only with date mode \"on\". Format: YYYY-MM-DD, e.g. \"2006-12-31\"",
						"type": "string",
						"format": "string"
					},
					{
						"name": "date_start",
						"in": "query",
						"description": "Start date. Valid only with date modes \"between\" and \"after\". Format: YYYY-MM-DD, e.g. \"2006-12-31\".",
						"type": "string",
						"format": "string"
					},
					{
						"name": "format",
						"in": "query",
						"description": "Specify the format of the response: RSS 2.0, JSON or full XML.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Set the maximum number of items in the response. This cannot be more than 100.",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number in the search result",
						"type": "integer",
						"format": "string"
					},
					{
						"name": "pressroom",
						"in": "query",
						"description": "Set the pressroom to search in. se \u2013 Swedish pressroom, no \u2013 Norwegian pressroom",
						"type": "string",
						"format": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "Search string. The search is performed on all text fields in the material, like the header, summary and body. Searching supports advanced queries with AND\/OR\/NOT, and wildcards (*).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "type_of_media",
						"in": "query",
						"description": "The type of material to be fetched.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "unique key",
						"in": "path",
						"description": "The MyNewsDesk API Key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news"
				]
			}
		},
		"send_email\/": {
			"get": {
				"summary": "Send Email",
				"description": "Send Email",
				"operationId": "",
				"parameters": [
					{
						"name": "from",
						"in": "query",
						"description": "Name of sender.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "item_id",
						"in": "query",
						"description": "ID of the material to be fetched.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Personal message from the sender to the recipient.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to_email",
						"in": "query",
						"description": "Recipient email address.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "type_of_media",
						"in": "query",
						"description": "The type of material to be fetched. Valid values are \"pressrelease\", \"news\", \"blog_post\",\"event\", \"image\", \"video\", \"document\" and \"contact_person\".",
						"type": "string",
						"format": "string"
					},
					{
						"name": "unique key",
						"in": "path",
						"description": "The MyNewsDesk API Key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Email",
					" Messaging"
				]
			}
		},
		"subscription\/": {
			"get": {
				"summary": "News Subscription",
				"description": "News Subscription",
				"operationId": "",
				"parameters": [
					{
						"name": "newsdesk_pressroom",
						"in": "query",
						"description": "Set the pressroom to search in. se \u2013 Swedish pressroom, no \u2013 Norwegian pressroom and en for international pressroom.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "newsdesk_subscriber_email",
						"in": "query",
						"description": "Email address of the subscriber.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "newsdesk_subscribe_to_type",
						"in": "query",
						"description": "Send a parameter with the value 1 for each type of material to be included in the subscription. At least one type is required.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "unique key",
						"in": "query",
						"description": "The MyNewsDesk API Key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" subscription"
				]
			}
		},
		"view\/": {
			"get": {
				"summary": "View News",
				"description": "View News",
				"operationId": "",
				"parameters": [
					{
						"name": "callback",
						"in": "query",
						"description": "If format is JSON and callback is specified, the JSON response is wrapped in a function call with the specified callback name.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "format",
						"in": "query",
						"description": "Specify the format of the response: JSON or full XML.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "item_id",
						"in": "query",
						"description": "ID of the material to be fetched.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "type_of_media",
						"in": "query",
						"description": "The type of material to be fetched.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "unique key",
						"in": "path",
						"description": "The MyNewsDesk API Key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news"
				]
			}
		},
		"\/topic\/{guid]\/articles\/": {
			"get": {
				"summary": "Topic Articles",
				"description": "Returns a list of articles related to the specified topic.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "article_filter_mode",
						"in": "query",
						"description": "Enables article_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "article_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of articles. Value is the name of the predefined article filter list (applicable only when article filtering is enabled via article_filter_mode).",
						"type": "string"
					},
					{
						"name": "categories",
						"in": "query",
						"description": "Limit items to the categories specified. Value is a space delimited list of dashed category names.  See Category module for more information.",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "get_topics",
						"in": "query",
						"description": "Set to true to include associated topics inline with each article. For faster response times, we recommend setting this to false unless topics are explicitly being used.",
						"type": "string"
					},
					{
						"name": "guid",
						"in": "path",
						"description": "The topic guid.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "has_images",
						"in": "query",
						"description": "Return only articles that have associated images (accessible via article\/GUID\/images). Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "languages",
						"in": "query",
						"description": "Limit items to those in the specified language. Value is a 2 letter ISO language code.",
						"type": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "Search exclusively for fully licensed, full text content. Not available without a contract. Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Limit the media type of the returned items. Value is a space delimited list of media types. See Source module for a list of valid media types.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. I.e. a pagesize of 10 and offest of 10 will return items 11-20. Used for paginating api queries.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort order for returned items. Valid values are date and relevance.",
						"type": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "List of sources to retrieve items from. Valid sources are specified as a space delimited list of source GUIDs.",
						"type": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of sources.Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topic",
					" articles"
				]
			}
		},
		"articles\/": {
			"get": {
				"summary": "Articles",
				"description": "Returns a list of articles according to the specified set of parameters.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "article_filter_mode",
						"in": "query",
						"description": "Enables article_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "article_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of articles. Value is the name of the predefined article filter list (applicable only when article filtering is enabled via article_filter_mode).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "boolean_operator",
						"in": "query",
						"description": "Indicates the boolean operation to use on search keywords that do not have explicit whitelist (+) or blacklist (-) operators on them. The value can either be and or or.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "categories",
						"in": "query",
						"description": "Limit items to the categories specified. Value is a space delimited list of dashed category names. See Category module for more information.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "exact",
						"in": "query",
						"description": "If this parameter is not specified, then stemming is applied, so that for example the query term \"ship\" matches articles containing \"shipping\", and vice versa. Specifying exact=true turns stemming off.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of publication date range for which items are searched. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "get_topics",
						"in": "query",
						"description": "Set to true to include associated topics inline with each article. For faster response times, we recommend setting this to false unless topics are explicitly being used.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "has_images",
						"in": "query",
						"description": "Sort order for returned items. Valid values are date and relevance.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "languages",
						"in": "query",
						"description": "Limit items to those in the specified language. Value is a 2 letter ISO language code.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "Search exclusively for fully licensed, full text content. Not available without a contract. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "links",
						"in": "query",
						"description": "Value is a space delimited list of article links. Articles returned must match one of links provided.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "max_length",
						"in": "query",
						"description": "Returns only articles with at most this many words. For example, max_length=200",
						"type": "string",
						"format": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Limit the media type of the returned items. Value is a space delimited list of media types. See Source module for a list of valid media types.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "min_length",
						"in": "query",
						"description": "Returns only articles with at least this many words. For example, min_length=100",
						"type": "string",
						"format": "string"
					},
					{
						"name": "mm",
						"in": "query",
						"description": "\"Minimum Match\": specifies how many of the non whitelist\/blacklist keywords must match for an article to be included in the results. Can be an integer (e.g., \"1\") or a percentage (e.g., \"50%\"). The default value requires that all words match.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "modified_since",
						"in": "query",
						"description": "Get only articles that have been modified since the supplied date. An articles modified date is the same as its creation date if it hasnt been modified. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "Specifies the set of words and phrases to search for. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "query_fields",
						"in": "query",
						"description": "Specifies which field to search when searching for articles. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "safe_search",
						"in": "query",
						"description": "Removes articles containing offensive words from search result; when set to true.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort order for returned items. Valid values are date, relevance, and modified_at.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "Limit items to the sources specified. Value is a space delimited list of source guids.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of sources.Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topics",
						"in": "query",
						"description": "Value is a space delimited list of topic guids. Articles returned must contain at least one of the topics provided.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of publication date range for which items are searched. ",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" articles"
				]
			}
		},
		"author\/": {
			"get": {
				"summary": "Author",
				"description": "Returns an author that has written content available via this API.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" author"
				]
			}
		},
		"author\/{guid}\/articles\/": {
			"get": {
				"summary": "Author Articles",
				"description": "Returns articles written by the specified author and matching the given query string.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "article_filter_mode",
						"in": "query",
						"description": "Enables article_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "article_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of articles. Value is the name of the predefined article filter list (applicable only when article filtering is enabled via article_filter_mode).",
						"type": "string"
					},
					{
						"name": "categories",
						"in": "query",
						"description": "Limit items to the categories specified. Value is a space delimited list of dashed category names.  See Category module for more information.",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "get_topics",
						"in": "query",
						"description": "Set to true to include associated topics inline with each article. For faster response times, we recommend setting this to false unless topics are explicitly being used.",
						"type": "string"
					},
					{
						"name": "guid",
						"in": "path",
						"description": "The guid for the author.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "has_images",
						"in": "query",
						"description": "Return only articles that have associated images (accessible via article\/GUID\/images). Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "languages",
						"in": "query",
						"description": "Limit items to those in the specified language. Value is a 2 letter ISO language code.",
						"type": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "Search exclusively for fully licensed, full text content. Not available without a contract. Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Limit the media type of the returned items. Value is a space delimited list of media types. See Source module for a list of valid media types.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort order for returned items. Valid values are date and relevance.",
						"type": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "List of sources to retrieve items from. Valid sources are specified as a space delimited list of source GUIDs.",
						"type": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of sources.Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string"
					},
					{
						"name": "topics",
						"in": "query",
						"description": "List of topics to retrieve items from. Valid topics are specified as a space delimited list of topic GUIDs.",
						"type": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" author",
					" articles"
				]
			}
		},
		"author\/{guid}\/topics\/": {
			"get": {
				"summary": "Author Topics",
				"description": "Gets a list of topics related to an author.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "guid",
						"in": "path",
						"description": "The guid for the author.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "topics",
						"in": "query",
						"description": "List of topics to retrieve items from. Valid topics are specified as a space delimited list of topic GUIDs.",
						"type": "string"
					},
					{
						"name": "topic_classifications",
						"in": "query",
						"description": "Limit results to those with the specified topic classification. Value is a space delimited list of topic classifications.",
						"type": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string"
					},
					{
						"name": "topic_subclassifications",
						"in": "query",
						"description": "Limit results to those with the specified topic sub-classification. Value is a space delimited list of topic sub-classifications.",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" author",
					" topics"
				]
			}
		},
		"categories\/": {
			"get": {
				"summary": "Categories",
				"description": "Search for categories",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "autosuggest",
						"in": "query",
						"description": "If true, partial matches will be returned, i.e. the query pol will match the category politics. This is intended for use in autosuggest dropdowns.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "The query string to find categories matching.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" categories"
				]
			}
		},
		"category\/dashed-name\/sources\/": {
			"get": {
				"summary": "Category Sources",
				"description": "Gets a list of sources that write most frequently about the category specified by the dashed name",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Space delimited list of media types to retreive articles from. See source module for a complete list of valid media types. Examples are mainstream and blog.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "List of sources to retrieve items from. Valid sources are specified as a space delimited list of source GUIDs.",
						"type": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of sources.Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					" news",
					" category",
					" sources"
				]
			}
		},
		"category\/dashed-name\/topics\/": {
			"get": {
				"summary": "Category Topics",
				"description": "Gets a list of topics within the category specified by the dashed name.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "topic_classifications",
						"in": "query",
						"description": "Limit results to those with the specified topic classification. Value is a space delimited list of topic classifications.",
						"type": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string"
					},
					{
						"name": "topic_subclassifications",
						"in": "query",
						"description": "Limit results to those with the specified topic sub-classification. Value is a space delimited list of topic sub-classifications.",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" categories",
					" topics"
				]
			}
		},
		"category\/{category-name]\/stories\/": {
			"get": {
				"summary": "Category Stories",
				"description": "Find the top news stories related to a given category. A story is a collection of similar articles.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "article_filter_mode",
						"in": "query",
						"description": "Enables article_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "article_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of articles. Value is the name of the predefined article filter list (applicable only when article filtering is enabled via article_filter_mode).",
						"type": "string"
					},
					{
						"name": "cluster_size",
						"in": "query",
						"description": "Number of articles returned for each story",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "get_topics",
						"in": "query",
						"description": "Set to true to include associated topics inline with each article. For faster response times, we recommend setting this to false unless topics are explicitly being used.",
						"type": "string"
					},
					{
						"name": "has_images",
						"in": "query",
						"description": "Return only articles that have associated images (accessible via article\/GUID\/images). Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "languages",
						"in": "query",
						"description": "Limit items to those with the specified language. Value is a 2 letter ISO.",
						"type": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "Search exclusively for fully licensed, full text content. Not available without a contract. Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Limit the media type of the returned items. Value is a space delimited list of media types. See Source module for a list of valid media types.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "List of sources to retrieve items from. Valid sources are specified as a space delimited list of source GUIDs.",
						"type": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Restricts the query to a predefined list of sources. Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" stories",
					" categories"
				]
			}
		},
		"category\/{dashed-name}\/articles\/": {
			"get": {
				"summary": "Category Articles",
				"description": "Search for articles within the category specified by dashed name.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "article_filter_mode",
						"in": "query",
						"description": "Enables article_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "article_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of articles. Value is the name of the predefined article filter list (applicable only when article filtering is enabled via article_filter_mode).",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "get_topics",
						"in": "query",
						"description": "Set to true to include associated topics inline with each article. For faster response times, we recommend setting this to false unless topics are explicitly being used.",
						"type": "string"
					},
					{
						"name": "has_images",
						"in": "query",
						"description": "Return only articles that have associated images (accessible via article\/GUID\/images). Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "languages",
						"in": "query",
						"description": "Limit items to those with the specified language. Value is a 2 letter ISO.",
						"type": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "Search exclusively for fully licensed, full text content. Not available without a contract. Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Limit the media type of the returned items. Value is a space delimited list of media types. See Source module for a list of valid media types.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort order for returned items. Valid values are date and relevance.",
						"type": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "List of sources to retrieve items from. Valid sources are specified as a space delimited list of source GUIDs.",
						"type": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Restricts the query to a predefined list of sources. Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" articles categories"
				]
			}
		},
		"category\/{dashed-name}\/images\/": {
			"get": {
				"summary": "Category Images",
				"description": "Gets images related to the specified category.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "safe_search",
						"in": "query",
						"description": "Returns only images marked as safe when set to true.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" categories",
					" images"
				]
			}
		},
		"image\/{guid}\/": {
			"get": {
				"summary": "Image",
				"description": "Returns the image specified by the given GUID.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "guid",
						"in": "path",
						"description": "The guid for the image.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" images"
				]
			}
		},
		"images\/": {
			"get": {
				"summary": "Search Images",
				"description": "Returns images matched by the query string",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "Query string you want to search for.",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" images"
				]
			}
		},
		"source\/": {
			"get": {
				"summary": "Source",
				"description": "Returns the source represented by the specified GUID.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "GUID",
						"in": "path",
						"description": "GUID representing news source",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" sources"
				]
			}
		},
		"source\/{GUID}\/articles\/": {
			"get": {
				"summary": "Source Articles",
				"description": "Returns a list of articles provided by the specified source",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "article_filter_mode",
						"in": "query",
						"description": "Enables article_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "article_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of articles. Value is the name of the predefined article filter list (applicable only when article filtering is enabled via article_filter_mode).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "categories",
						"in": "query",
						"description": "Limit items to the categories specified. Value is a space delimited list of dashed category names. See Category module for more information.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string",
						"format": "string"
					},
					{
						"name": "get_topics",
						"in": "query",
						"description": "Set to true to include associated topics inline with each article. For faster response times, we recommend setting this to false unless topics are explicitly being used.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "has_images",
						"in": "query",
						"description": "Return only articles that have associated images (accessible via article\/GUID\/images). Valid values are \"True\" or \"False\"",
						"type": "string",
						"format": "string"
					},
					{
						"name": "languages",
						"in": "query",
						"description": "Limit items to those in the specified language. Value is a 2 letter ISO language code.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "Search exclusively for fully licensed, full text content. Not available without a contract. Valid values are \"True\" or \"False\".",
						"type": "string",
						"format": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Limit the media type of the returned items. Value is a space delimited list of media types. See Source module for a list of valid media types.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort order for returned items. Valid values are date and relevance.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topics",
						"in": "query",
						"description": "List of topics to retrieve items from. Valid topics are specified as a space delimited list of topic GUIDs.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" sources"
				]
			}
		},
		"source\/{GUID}\/topics\/": {
			"get": {
				"summary": "Source Topics",
				"description": "Returns a list of topics related to the source specified by the given GUID.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topics",
						"in": "query",
						"description": "List of topics to retrieve items from. Valid topics are specified as a space delimited list of topic GUIDs.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_classifications",
						"in": "query",
						"description": "Limit results to those with the specified topic classification. Value is a space delimited list of topic classifications.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_subclassifications",
						"in": "query",
						"description": "Limit results to those with the specified topic sub-classification. Value is a space delimited list of topic sub-classifications.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" sources",
					" topics"
				]
			}
		},
		"stories\/": {
			"get": {
				"summary": "Stories",
				"description": "Returns the top stories related to the specified query. A story is a group of similar articles. By default, stories are sorted by a combination of recency and importance. If the from_date and\/or to_date parameters are specified, stories are sorted by importance only.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "article_filter_mode",
						"in": "query",
						"description": "Enables article_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "article_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of articles. Value is the name of the predefined article filter list (applicable only when article filtering is enabled via article_filter_mode).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "boolean_operator",
						"in": "query",
						"description": "Indicates the boolean operation to use on search keywords that do not have explicit whitelist (+) or blacklist (-) operators on them. The value can either be and or or.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "categories",
						"in": "query",
						"description": "Limit items to the categories specified. Value is a space delimited list of dashed category names. See Category module for more information.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "cluster_size",
						"in": "query",
						"description": "Number of articles returned for each story",
						"type": "string",
						"format": "string"
					},
					{
						"name": "exact",
						"in": "query",
						"description": "If this parameter is not specified, then stemming is applied, so that for example the query term \"ship\" matches articles containing \"shipping\", and vice versa. Specifying exact=true turns stemming off.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of publication date range for which items are searched. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "get_topics",
						"in": "query",
						"description": "Set to true to include associated topics inline with each article. For faster response times, we recommend setting this to false unless topics are explicitly being used.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "has_images",
						"in": "query",
						"description": "Sort order for returned items. Valid values are date and relevance.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "languages",
						"in": "query",
						"description": "Limit items to those in the specified language. Value is a 2 letter ISO language code.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "Search exclusively for fully licensed, full text content. Not available without a contract. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "links",
						"in": "query",
						"description": "Value is a space delimited list of article links. Articles returned must match one of links provided.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "max_length",
						"in": "query",
						"description": "Returns only articles with at most this many words. For example, max_length=200",
						"type": "string",
						"format": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Limit the media type of the returned items. Value is a space delimited list of media types. See Source module for a list of valid media types.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "min_length",
						"in": "query",
						"description": "Returns only articles with at least this many words. For example, min_length=100",
						"type": "string",
						"format": "string"
					},
					{
						"name": "mm",
						"in": "query",
						"description": "\"Minimum Match\": specifies how many of the non whitelist\/blacklist keywords must match for an article to be included in the results. Can be an integer (e.g., \"1\") or a percentage (e.g., \"50%\"). The default value requires that all words match.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "modified_since",
						"in": "query",
						"description": "Get only articles that have been modified since the supplied date. An articles modified date is the same as its creation date if it hasnt been modified. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "Specifies the set of words and phrases to search for. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "query_fields",
						"in": "query",
						"description": "Specifies which field to search when searching for articles. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "safe_search",
						"in": "query",
						"description": "Removes articles containing offensive words from search result; when set to true.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sort order for returned items. Valid values are date, relevance, and modified_at.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "Limit items to the sources specified. Value is a space delimited list of source guids.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of sources.Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topics",
						"in": "query",
						"description": "Value is a space delimited list of topic guids. Articles returned must contain at least one of the topics provided.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string",
						"format": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of publication date range for which items are searched. ",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" stories",
					" collections"
				]
			}
		},
		"topic\/{guide{\/images\/": {
			"get": {
				"summary": "Topic Images",
				"description": "Returns images related to the specified topic.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "guid",
						"in": "path",
						"description": "The topic guid.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topics",
					" images"
				]
			}
		},
		"topic\/{guid}\/": {
			"get": {
				"summary": "Topic",
				"description": "Return the topic specified by the given GUID. ",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topics"
				]
			}
		},
		"topic\/{guid}\/sources\/": {
			"get": {
				"summary": "Topic Sources",
				"description": "The guid for the topic.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. I.e. a pagesize of 10 and offest of 10 will return items 11-20. Used for paginating api queries.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "List of sources to retrieve items from. Valid sources are specified as a space delimited list of source GUIDs.",
						"type": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of sources.Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string"
					},
					{
						"name": "Topic Sources",
						"in": "path",
						"description": "The guid for the topic.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topics",
					" sources"
				]
			}
		},
		"topic\/{guid}\/topics\/": {
			"get": {
				"summary": "Related Topics",
				"description": "Returns a list of topics related to the topic specified.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "guid",
						"in": "query",
						"description": "The guid for the topic.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. I.e. a pagesize of 10 and offest of 10 will return items 11-20. Used for paginating api queries.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "topics",
						"in": "query",
						"description": "List of topics to retrieve items from. Valid topics are specified as a space delimited list of topic GUIDs.",
						"type": "string"
					},
					{
						"name": "topic_classifications",
						"in": "query",
						"description": "Limit results to those with the specified topic classification. Value is a space delimited list of topic classifications.",
						"type": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string"
					},
					{
						"name": "topic_subclassifications",
						"in": "query",
						"description": "Limit results to those with the specified topic sub-classification. Value is a space delimited list of topic sub-classifications.",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topics"
				]
			}
		},
		"topic\/{guid}\/tweets\/": {
			"get": {
				"summary": "Related Tweets",
				"description": "Returns a list of real-time tweets related to the specified topic.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "guid",
						"in": "path",
						"description": "The guid for the topic.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of tweets to skip before beginning the result set. I.e. a pagesize of 10 and offest of 10 will return articles 11-20. Useful for paginating api queries.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of tweets to return.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" related",
					" tweets",
					" twitter"
				]
			}
		},
		"topic\/{guid}\/videos\/": {
			"get": {
				"summary": "Topic Videos",
				"description": "Returns a list of videos related to the specified topic.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "categories",
						"in": "query",
						"description": "Limit videos to the categories specified. Values are a space delimited list of dashed category names.",
						"type": "string"
					},
					{
						"name": "guid",
						"in": "path",
						"description": "The guid for the topic.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of videos to skip before beginning the result set. I.e. a pagesize of 10 and offset of 10 will return videos 11-20. Useful for paginating api queries.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of videos to return.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topics",
					" videos"
				]
			}
		},
		"topic\/{topic_guid}\/stories\/": {
			"get": {
				"summary": "Topic Stories",
				"description": "Find the top stories that are happening for a given topic. A story is a collection of similar articles.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "article_filter_mode",
						"in": "query",
						"description": "Enables article_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "article_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of articles. Value is the name of the predefined article filter list (applicable only when article filtering is enabled via article_filter_mode).",
						"type": "string"
					},
					{
						"name": "categories",
						"in": "query",
						"description": "Limit items to the categories specified. Value is a space delimited list of dashed category names.  See Category module for more information.",
						"type": "string"
					},
					{
						"name": "cluster_size",
						"in": "query",
						"description": "Number of articles returned for each story",
						"type": "string"
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "get_topics",
						"in": "query",
						"description": "Set to true to include associated topics inline with each article. For faster response times, we recommend setting this to false unless topics are explicitly being used.",
						"type": "string"
					},
					{
						"name": "has_images",
						"in": "query",
						"description": "Return only articles that have associated images (accessible via article\/GUID\/images). Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "languages",
						"in": "query",
						"description": "Limit items to those in the specified language. Value is a 2 letter ISO language code.",
						"type": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "Search exclusively for fully licensed, full text content. Not available without a contract. Valid values are \"True\" or \"False\".",
						"type": "string"
					},
					{
						"name": "media_types",
						"in": "query",
						"description": "Limit the media type of the returned items. Value is a space delimited list of media types. See Source module for a list of valid media types.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. I.e. a pagesize of 10 and offest of 10 will return items 11-20. Used for paginating api queries.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "sources",
						"in": "query",
						"description": "List of sources to retrieve items from. Valid sources are specified as a space delimited list of source GUIDs.",
						"type": "string"
					},
					{
						"name": "source_countries",
						"in": "query",
						"description": "Search against only sources from the specified countries. Value is a space delimited list of 2 character ISO 3166-1 country codes.",
						"type": "string"
					},
					{
						"name": "source_filter_mode",
						"in": "query",
						"description": "Enables source_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "source_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of sources.Value is the name of the predefined source filter list (applicable only when source filtering is enabled via source_filter_mode).",
						"type": "string"
					},
					{
						"name": "topic_guid",
						"in": "path",
						"description": "The topic guid.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topic",
					" stories"
				]
			}
		},
		"topics\/": {
			"get": {
				"summary": "Search Topics",
				"description": "Search for a specific topics.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "exact",
						"in": "query",
						"description": "If true, the topic name must match the query exactly. If false, partial matches are returned.",
						"type": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "The query string to find topics for.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topics"
				]
			}
		},
		"topics\/extract\/": {
			"get": {
				"summary": "Extract Related Topics",
				"description": "Returns a list of topics extracted from the input query.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "The string to extract topics from",
						"type": "string"
					},
					{
						"name": "topics",
						"in": "query",
						"description": "List of topics to retrieve items from. Valid topics are specified as a space delimited list of topic GUIDs.",
						"type": "string"
					},
					{
						"name": "topic_classifications",
						"in": "query",
						"description": "Limit results to those with the specified topic classification. Value is a space delimited list of topic classifications.",
						"type": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string"
					},
					{
						"name": "topic_subclassifications",
						"in": "query",
						"description": "Limit results to those with the specified topic sub-classification. Value is a space delimited list of topic sub-classifications.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topics",
					" related",
					" extract"
				]
			}
		},
		"topics\/related\/": {
			"get": {
				"summary": "Related Topics",
				"description": "Given some search criteria, returns a list of topics related to those criteria.",
				"operationId": "",
				"parameters": [
					{
						"name": "access_key",
						"in": "query",
						"description": "Unique API access key",
						"type": "string"
					},
					{
						"name": "from_date, to_date",
						"in": "query",
						"description": "Find topics that were trending (written about more than usual) during the specified date range. For example, from_date=-1DAY finds topics that have been trending over the past day.",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of topics to skip before beginning the result set. I.e. a pagesize of 10 and offest of 10 will return topics 11-20. Useful for paginating api queries.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of topics to return.",
						"type": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "Find topics related to these keywords.",
						"type": "string"
					},
					{
						"name": "topics",
						"in": "query",
						"description": "List of topics to retrieve items from. Valid topics are specified as a space delimited list of topic GUIDs.",
						"type": "string"
					},
					{
						"name": "topic_classifications",
						"in": "query",
						"description": "Limit results to those with the specified topic classification. Value is a space delimited list of topic classifications.",
						"type": "string"
					},
					{
						"name": "topic_filter_mode",
						"in": "query",
						"description": "Enables topic_filter_name and indicates filtering type. Allowed values are whitelist or blacklist",
						"type": "string"
					},
					{
						"name": "topic_filter_name",
						"in": "query",
						"description": "Limit items to a predefined list of topics. Value is the name of the predefined topic filter list (applicable only when topic filtering is enabled via topic_filter_mode).",
						"type": "string"
					},
					{
						"name": "topic_subclassifications",
						"in": "query",
						"description": "Limit results to those with the specified topic sub-classification. Value is a space delimited list of topic sub-classifications.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" topics",
					" related"
				]
			}
		},
		"videos\/": {
			"get": {
				"summary": "Videos",
				"description": "Returns videos matching the given query string",
				"operationId": "",
				"parameters": [
					{
						"name": "from_date",
						"in": "query",
						"description": "Beginning of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					},
					{
						"name": "licensed",
						"in": "query",
						"description": "Return only licensed videos. Only valid value is true. When not included, all videos are returned.",
						"type": "string"
					},
					{
						"name": "maxduration",
						"in": "query",
						"description": "Maximum duration for searched videos (in milliseconds)",
						"type": "string"
					},
					{
						"name": "minduration",
						"in": "query",
						"description": "Minimum duration for searched videos (in milliseconds)",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Number of items to skip before beginning the result set. For example, a pagesize of 10 and an offset of 10 will return items 11-20.",
						"type": "string"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "Number of items to return.",
						"type": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "Query that you want to search on.",
						"type": "string"
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "End of date range for which items are searched. Format: yyyy-mm-dd [hh:mm:ss]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" videos"
				]
			}
		},
		"local\/": {
			"get": {
				"summary": "Local",
				"description": "Pull list of localities.",
				"operationId": "",
				"parameters": [
					{
						"name": "key",
						"in": "query",
						"description": "API Key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" local"
				]
			}
		},
		"local\/{city}\/All\/{time_period}": {
			"get": {
				"summary": "Local",
				"description": "Search local news.",
				"operationId": "",
				"parameters": [
					{
						"name": "city",
						"in": "path",
						"description": "Filters articles published in that city. See available cities below. i.e. London, New%20York,%20NY, Toronto",
						"type": "string",
						"format": "string"
					},
					{
						"name": "key",
						"in": "query",
						"description": "API Key",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sort_by",
						"in": "query",
						"description": "One of the following: [default, fb_likes, fb_shares, fb_comments, fb_total, twitter, linkedin, fb_tw_and_li, nw_score, nw_max_score]. Defaults to default",
						"type": "string",
						"format": "string"
					},
					{
						"name": "time_period",
						"in": "path",
						"description": "Filters articles published within the last X hours. X can be 1, 3, 12, 24 or 168 hours)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "video_only",
						"in": "query",
						"description": "true or false. Defaults to false.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" local"
				]
			}
		},
		"publisher\/": {
			"get": {
				"summary": "Publisher",
				"description": "Pull publishers.",
				"operationId": "",
				"parameters": [
					{
						"name": "key",
						"in": "query",
						"description": "API Key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" publisher"
				]
			}
		},
		"publisher\/{publisher}\/{time_period}": {
			"get": {
				"summary": "Publisher",
				"description": "Search news by publisiher.",
				"operationId": "",
				"parameters": [
					{
						"name": "key",
						"in": "query",
						"description": "API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "publisher",
						"in": "path",
						"description": "Returns all articles published within that domain or subdomain.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sort_by",
						"in": "query",
						"description": "One of the following: [default, fb_likes, fb_shares, fb_comments, fb_total, twitter, linkedin, fb_tw_and_li, nw_score, nw_max_score]. Defaults to default",
						"type": "string",
						"format": "string"
					},
					{
						"name": "time_period",
						"in": "path",
						"description": "Filters articles published within the last X hours. X can be 1, 3, 12, 24 or 168 hours)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "video_only",
						"in": "query",
						"description": "true or false. Defaults to false.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" publisher"
				]
			}
		},
		"region\/": {
			"get": {
				"summary": "Region",
				"description": "Retrieve list of regions",
				"operationId": "",
				"parameters": [
					{
						"name": "key",
						"in": "query",
						"description": "API Key",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" region"
				]
			}
		},
		"region\/{region}\/{category}\/{time_period}": {
			"get": {
				"summary": "Region",
				"description": "Search news by region",
				"operationId": "",
				"parameters": [
					{
						"name": "category",
						"in": "path",
						"description": "Filters articles by {category}.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "key",
						"in": "query",
						"description": "API key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "region",
						"in": "path",
						"description": "Filters articles published in that {region}",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sort_by",
						"in": "query",
						"description": "One of the following: [default, fb_likes, fb_shares, fb_comments, fb_total, twitter, linkedin, fb_tw_and_li, nw_score, nw_max_score]. Defaults to default",
						"type": "string",
						"format": "string"
					},
					{
						"name": "time_period",
						"in": "path",
						"description": "Filters articles published within the last X hours. X can be 1, 3, 12, 24 or 168 hours)",
						"type": "string",
						"format": "string"
					},
					{
						"name": "video_only",
						"in": "query",
						"description": "true or false. Defaults to false.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" region"
				]
			}
		},
		"sms\/{format}": {
			"get": {
				"summary": "Send Message",
				"description": "Nexmo makes it simple to send and receive a high volume of SMS anywhere in the world within minutes.",
				"operationId": "",
				"parameters": [
					{
						"name": "api_key",
						"in": "query",
						"description": "Your API Key.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "api_secret",
						"in": "query",
						"description": "Your API Secret.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "client-ref",
						"in": "query",
						"description": "Include any reference string for your reference. Useful for your internal reports (40 characters max).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "format",
						"in": "path",
						"description": "XML or JSON",
						"type": "string",
						"format": "string"
					},
					{
						"name": "from",
						"in": "query",
						"description": "Sender address may be alphanumeric (Ex: from=MyCompany20). Restrictions may apply, depending on the destination. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "message-class",
						"in": "query",
						"description": "Set to 0 for Flash SMS.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "network-code",
						"in": "query",
						"description": "Force the recipient network operator MCCMNC, make sure to supply the correct information otherwise the message won't be delivered.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "status-report-req",
						"in": "query",
						"description": "Set to 1 if you want to receive a delivery report (DLR) for this request. Make sure to configure your \"Callback URL\" in your \"API Settings\"",
						"type": "string",
						"format": "string"
					},
					{
						"name": "text",
						"in": "query",
						"description": "Body of the text message (with a maximum length of 3200 characters), UTF-8 and URL encoded value. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "Mobile number in international format, and one recipient per request.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "ttl",
						"in": "query",
						"description": "Message life span in milliseconds.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "type_of_media",
						"in": "query",
						"description": "This can be omitted for text (default), but is required when sending a Binary (binary), WAP Push (wappush), Unicode message (unicode), vcal (vcal) or vcard (vcard).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "vcard",
						"in": "query",
						"description": "vcard text body correctly formatted.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" SMS"
				]
			}
		},
		"articlesearch\/": {
			"get": {
				"summary": "Articles",
				"description": "With the Article Search API, you can search New York Times articles from Sept. 18, 1851 to today, retrieving headlines, abstracts, lead paragraphs, links to associated multimedia and other article metadata. ",
				"operationId": "",
				"parameters": [
					{
						"name": "api-key",
						"in": "query",
						"description": "Your Article Search API key is valid for version 1 and version 2 of the API.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "begin_date",
						"in": "query",
						"description": "YYYYMMDD - Restricts responses to results with publication dates of the date specified or later.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "callback",
						"in": "query",
						"description": "The name of the function the API call results will be passed to. Required when using JSONP.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "end_date",
						"in": "query",
						"description": "YYYYMMDD - Restricts responses to results with publication dates of the date specified or earlier.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "facet_field",
						"in": "query",
						"description": "Specifies the sets of facet values to include in the facets array at the end of response, which collects the facet values from all the search results. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "facet_filter",
						"in": "query",
						"description": "When set to true, facet counts will respect any applied filters (fq, date range, etc.) in addition to the main query term. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "fl",
						"in": "query",
						"description": "Limits the fields returned in your search results. ",
						"type": "string",
						"format": "string"
					},
					{
						"name": "fq",
						"in": "query",
						"description": "Filtered search query using standard Lucene syntax.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "hl",
						"in": "query",
						"description": "nables highlighting in search results. When set to true, the query term (q) is highlighted in the headline and lead_paragraph fields.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The value of page corresponds to a set of 10 results (it does not indicate the starting number of the result set).",
						"type": "string",
						"format": "string"
					},
					{
						"name": "q",
						"in": "query",
						"description": "Search query term. Search is performed on the article body, headline and byline.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "response-format",
						"in": "query",
						"description": "To use JSONP, you must set a callback function with the callback parameter.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "By default, search results are sorted by their relevance to the query term (q). Use the sort parameter to sort by pub_date.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" articles"
				]
			}
		},
		"mostpopular\/v2\/": {
			"get": {
				"summary": "Most Popular",
				"description": "With the Most Popular API, you can get links and metadata for the blog posts and articles that are most frequently e-mailed, shared and viewed by NYTimes.com readers.",
				"operationId": "",
				"parameters": [
					{
						"name": "api-key",
						"in": "query",
						"description": "The API key used for the query",
						"type": "string",
						"format": "string"
					},
					{
						"name": "resource-type",
						"in": "path",
						"description": "mostemailed | mostshared | mostviewed - The mostemailed and mostviewed resource types correspond to the Most Popular module on the NYTimes.com home page.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "section",
						"in": "query",
						"description": "all-sections | One or more section names, separated by semicolons",
						"type": "string",
						"format": "string"
					},
					{
						"name": "time-period",
						"in": "query",
						"description": "Number of days: 1 | 7 | 30  Corresponds to a day, a week or a month of content",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"news",
					" popular"
				]
			}
		},
		"{auth_id}\/Message\/": {
			"post": {
				"summary": "Send Message",
				"description": "This API enables you to send messages via Plivo\u2019s SMS service.",
				"operationId": "",
				"parameters": [
					{
						"name": "dst",
						"in": "query",
						"description": "The number to which the message needs to be sent. Regular phone numbers must be prefixed with the country code but without the + sign. For e.g, a USA phone number would be, `15677654321`, with '1' denoting the country code. Multiple numbers can be added by using a delimiter.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "log",
						"in": "query",
						"description": "If set to false, the content of this message will not be logged on the Plivo infrastructure and the dst value will be masked. (e.g., 141XXXXX528) Defaults to true.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "method",
						"in": "query",
						"description": "The method used to call the url. Defaults to POST.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "src",
						"in": "query",
						"description": "The phone number to be used as the caller id (with the country code). For e.g. a USA number, `15671234567`. If you're sending messages to U.S. and Canada, you need to use the numbers you purchased with Plivo.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "text",
						"in": "query",
						"description": "The text to send encoded in Unicode UTF-8. The API accepts up to 1000 bytes of UTF-8 encoded text in a single API request. The text will be automatically split into multiple parts and sent if it will not fit into a single SMS. See notes below for more details.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "This API enables you to send messages via Plivo\u2019s SMS service.",
						"in": "path",
						"description": "AUTH TOKEN Your Plivo AUTH ID and AUTH TOKEN can be found when you login to your dashboard.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "The type of message. Should be 'sms' for a text message. Defaults to 'sms'.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "url",
						"in": "query",
						"description": "The URL to which with the status of the message is sent.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" SMS"
				]
			}
		},
		"{auth_id}\/Message\/{message_uuid}\/": {
			"get": {
				"summary": "Message",
				"description": "Get details of a single message.",
				"operationId": "",
				"parameters": [
					{
						"name": "auth_id",
						"in": "query",
						"description": "AUTH TOKEN Your Plivo AUTH ID and AUTH TOKEN can be found when you login to your dashboard.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "message_uuid",
						"in": "path",
						"description": "The message unique id.",
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" SMS"
				]
			}
		},
		"bounce\/{bounceid}": {
			"get": {
				"summary": "Get a single bounce",
				"description": "Get a single bounce",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"bounces\/{bounceid}\/activate": {
			"get": {
				"summary": "Activate a bounce",
				"description": "Activate a bounce",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"bounces\/{bounceid}\/dump": {
			"get": {
				"summary": "Get bounce dump",
				"description": "Get bounce dump",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"deliverystats\/": {
			"get": {
				"summary": "Get delivery stats",
				"description": "Get delivery stats",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"email\/": {
			"post": {
				"summary": "Send Email",
				"description": "Send a single email",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "Attachments",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Bcc",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Cc",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "From",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Headers",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "HtmlBody",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "ReplyTo",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Subject",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Tag",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "TextBody",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "To",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "TrackOpens",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"email\/batch\/": {
			"post": {
				"summary": "Send batch emails",
				"description": "Send batch emails",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "Attachments",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Bcc",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Cc",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "From",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Headers",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "HtmlBody",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "ReplyTo",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Subject",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "Tag",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "TextBody",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "To",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "TrackOpens",
						"in": "body",
						"description": "List of attachments",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/inbound\/": {
			"get": {
				"summary": "Inbound message search",
				"description": "Inbound message search",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "count",
						"in": "query",
						"description": "Filter by status (blocked or processed)",
						"type": "string"
					},
					{
						"name": "fromemail",
						"in": "query",
						"description": "Filter by status (blocked or processed)",
						"type": "string"
					},
					{
						"name": "mailboxhash",
						"in": "query",
						"description": "Filter by status (blocked or processed)",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Filter by status (blocked or processed)",
						"type": "string"
					},
					{
						"name": "recipient",
						"in": "query",
						"description": "Filter by status (blocked or processed)",
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "Filter by status (blocked or processed)",
						"type": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "Filter by status (blocked or processed)",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter by status (blocked or processed)",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/inbound\/{messageid}\/bypass": {
			"get": {
				"summary": "Bypass rules for a blocked inbound message",
				"description": "Bypass rules for a blocked inbound message",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level priveledges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level priveledges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/inbound\/{messageid}\/details": {
			"get": {
				"summary": "Inbound message details",
				"description": "Inbound message details",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "messageid",
						"in": "path",
						"description": "The message ID.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/outbound\/": {
			"get": {
				"summary": "Outbound message search",
				"description": "Outbound message search",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "count",
						"in": "query",
						"description": "Filter by email subject",
						"type": "string"
					},
					{
						"name": "fromemail",
						"in": "query",
						"description": "Filter by email subject",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Filter by email subject",
						"type": "string"
					},
					{
						"name": "recipient",
						"in": "query",
						"description": "Filter by email subject",
						"type": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "Filter by email subject",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter by email subject",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/outbound\/opens": {
			"get": {
				"summary": "Message opens",
				"description": "Message opens",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "client_company",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "client_family",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "client_name",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "count",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "os_company",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "os_family",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "os_name",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "platform",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "recipient",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "region",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter by full name of city messages were opened in, i.e. Minneapolis, Philadelphia",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/outbound\/opens\/{messageid}\/": {
			"get": {
				"summary": "Opens for a single message",
				"description": "Opens for a single message",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "count",
						"in": "query",
						"description": "Required\n                    Number of messages to skip",
						"type": "string"
					},
					{
						"name": "messageid",
						"in": "path",
						"description": "The message ID.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Required\n                    Number of messages to skip",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/outbound\/{messageid}\/details": {
			"get": {
				"summary": "Outbound message details",
				"description": "Outbound message details",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "messageid",
						"in": "path",
						"description": "The message ID.",
						"type": "string",
						"format": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"messages\/outbound\/{messageid}\/dump": {
			"get": {
				"summary": "Outbound message dump",
				"description": "Outbound message dump",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/outbound\/": {
			"get": {
				"summary": "Get outbound overview",
				"description": "Get outbound overview",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/outbound\/bounces\/": {
			"get": {
				"summary": "Get bounce counts",
				"description": "Get bounce counts",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/outbound\/opens\/": {
			"get": {
				"summary": "Get email open counts",
				"description": "Get email open counts",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/outbound\/opens\/emailclients\/": {
			"get": {
				"summary": "Get email client usage",
				"description": "Get email client usage",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/outbound\/opens\/platforms\/": {
			"get": {
				"summary": "Get email platform usage",
				"description": "Get email platform usage",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/outbound\/opens\/readtimes\/": {
			"get": {
				"summary": "Get email read times",
				"description": "Get email read times",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/outbound\/sends\/": {
			"get": {
				"summary": "Get sent counts",
				"description": "Get sent counts",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/outbound\/spam\/": {
			"get": {
				"summary": "Get spam complaints",
				"description": "Get spam complaints",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		},
		"stats\/outbound\/tracked\/": {
			"get": {
				"summary": "Get tracked email counts",
				"description": "Get tracked email counts",
				"operationId": "",
				"parameters": [
					{
						"name": "Accept",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Filter stats up to the date specified. e.g. 2014-02-01",
						"type": "string"
					},
					{
						"name": "X-Postmark-Server-Token",
						"in": "header",
						"description": "requiredThis request requires server level privileges. This token can be found on the Credentials tab under your Postmark server.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					"Messaging",
					" Email"
				]
			}
		}
	},
	"definitions": [
	]
}