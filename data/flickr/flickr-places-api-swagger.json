{
	"swagger": "2.0",
	"info": {
		"title": "Flickr Places API",
		"description": "The API for managing Flickr Places",
		"termsOfService": "https://www.flickr.com/services/api/tos/",
		"version": null
	},
	"host": "www.flickr.com",
	"basePath": "/services/rest/",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/?method=flickr.places.find": {
			"get": {
				"summary": "flickr.places.find",
				"description": "<div class=MethodDescription>Return a list of place IDs for a query string.<br /><br />rnThe flickr.places.find method is <b>not</b> a geocoder. It will round <q>up</q> to the nearest place type to which place IDs apply. For example, if you pass it a street level address it will return the city that contains the address rather than the street, or building, itself.</div>",
				"operationId": "methodflickrplacesfind",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "query",
					"description": "The query string to use for place ID lookups",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required parameter missing - One or more required parameters was not included with the API call."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.findByLatLon": {
			"get": {
				"summary": "flickr.places.findByLatLon",
				"description": "<div class=MethodDescription>Return a place ID for a latitude, longitude and accuracy triple.<br /><br />rnThe flickr.places.findByLatLon method is not meant to be a (reverse) geocoder in the traditional sense. It is designed to allow users to find photos for places and will round up to the nearest place type to which corresponding place IDs apply.<br /><br />rnFor example, if you pass it a street level coordinate it will return the city that contains the point rather than the street, or building, itself.<br /><br />rnIt will also truncate latitudes and longitudes to three decimal points.rnrn</div>",
				"operationId": "methodflickrplacesfindbylatlon",
				"parameters": [{
					"in": "query",
					"name": "accuracy",
					"description": "Recorded accuracy level of the location information. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. The default is 16.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "lat",
					"description": "The latitude whose valid range is -90 to 90. Anything more than 4 decimal places will be truncated.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "lon",
					"description": "The longitude whose valid range is -180 to 180. Anything more than 4 decimal places will be truncated.",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required arguments missing - One or more required parameters was not included with the API request."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Not a valid latitude - The latitude argument failed validation."
					},
					"3": {
						"description": "Not a valid longitude - The longitude argument failed validation."
					},
					"4": {
						"description": "Not a valid accuracy - The accuracy argument failed validation."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.getChildrenWithPhotosPublic": {
			"get": {
				"summary": "flickr.places.getChildrenWithPhotosPublic",
				"description": "<div class=MethodDescription>Return a list of locations with public photos that are parented by a Where on Earth (WOE) or Places ID.</div>",
				"operationId": "methodflickrplacesgetchildrenwithphotospublic",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_id",
					"description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "woe_id",
					"description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required parameter missing - One or more required parameter is missing from the API call."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Not a valid Places ID - An invalid Places (or WOE) ID was passed with the API call."
					},
					"3": {
						"description": "Place not found - No place could be found for the Places (or WOE) ID passed to the API call."
					},
					"4": {
						"description": "Not a valid accuracy - The accuracy argument failed validation."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.getInfo": {
			"get": {
				"summary": "flickr.places.getInfo",
				"description": "<div class=MethodDescription>Get informations about a place.</div>",
				"operationId": "methodflickrplacesgetinfo",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_id",
					"description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "woe_id",
					"description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required parameter missing - One or more required parameter is missing from the API call."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Not a valid Places ID - An invalid Places (or WOE) ID was passed with the API call."
					},
					"3": {
						"description": "Place not found - No place could be found for the Places (or WOE) ID passed to the API call."
					},
					"4": {
						"description": "Not a valid accuracy - The accuracy argument failed validation."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.getInfoByUrl": {
			"get": {
				"summary": "flickr.places.getInfoByUrl",
				"description": "<div class=MethodDescription>Lookup information about a place, by its flickr.com/places URL.</div>",
				"operationId": "methodflickrplacesgetinfobyurl",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "url",
					"description": "A flickr.com/places URL in the form of /country/region/city. For example: /Canada/Quebec/Montreal",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required parameter missing - One or more required parameter is missing from the API call."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Place URL required. - The flickr.com/places URL was not passed with the API method."
					},
					"3": {
						"description": "Place not found. - Unable to find a valid place for the places URL."
					},
					"4": {
						"description": "Not a valid accuracy - The accuracy argument failed validation."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.getPlaceTypes": {
			"get": {
				"summary": "flickr.places.getPlaceTypes",
				"description": "<div class=MethodDescription>Fetches a list of available place types for Flickr.</div>",
				"operationId": "methodflickrplacesgetplacetypes",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required parameter missing - One or more required parameter is missing from the API call."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Place URL required. - The flickr.com/places URL was not passed with the API method."
					},
					"3": {
						"description": "Place not found. - Unable to find a valid place for the places URL."
					},
					"4": {
						"description": "Not a valid accuracy - The accuracy argument failed validation."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.getShapeHistory": {
			"get": {
				"summary": "flickr.places.getShapeHistory",
				"description": "<div class=MethodDescription>Return an historical list of all the shape data generated for a Places or Where on Earth (WOE) ID.</div>",
				"operationId": "methodflickrplacesgetshapehistory",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_id",
					"description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "woe_id",
					"description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required parameter missing - One or more required parameter is missing from the API call."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Not a valid Places ID - An invalid Places (or WOE) ID was passed with the API call."
					},
					"3": {
						"description": "Place not found - No place could be found for the Places (or WOE) ID passed to the API call."
					},
					"4": {
						"description": "Not a valid accuracy - The accuracy argument failed validation."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.getTopPlacesList": {
			"get": {
				"summary": "flickr.places.getTopPlacesList",
				"description": "<div class=MethodDescription>Return the top 100 most geotagged places for a day.</div>",
				"operationId": "methodflickrplacesgettopplaceslist",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "date",
					"description": "A valid date in YYYY-MM-DD format. The default is yesterday.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_id",
					"description": "Limit your query to only those top places belonging to a specific Flickr Places identifier.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_type_id",
					"description": "The numeric ID for a specific place type to cluster photos by. Valid place type IDs are :22: neighbourhood7: locality8: region12: country29: continent",
					"type": "string"
				},
				{
					"in": "query",
					"name": "woe_id",
					"description": "Limit your query to only those top places belonging to a specific Where on Earth (WOE) identifier.",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required parameter missing - One or more required parameters with missing from your request."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Not a valid place type. - An unknown or unsupported place type ID was passed with your request."
					},
					"3": {
						"description": "Not a valid date. - The date argument passed with your request is invalid."
					},
					"4": {
						"description": "Not a valid Place ID - An invalid Places (or WOE) identifier was included with your request."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.placesForBoundingBox": {
			"get": {
				"summary": "flickr.places.placesForBoundingBox",
				"description": "<div class=MethodDescription>Return all the locations of a matching place type for a bounding box.<br /><br />rnrnThe maximum allowable size of a bounding box (the distance between the SW and NE corners) is governed by the place type you are requesting. Allowable sizes are as follows:rnrn<ul>rn<li><strong>neighbourhood</strong>: 3km (1.8mi)</li>rn<li><strong>locality</strong>: 7km (4.3mi)</li>rn<li><strong>county</strong>: 50km (31mi)</li>rn<li><strong>region</strong>: 200km (124mi)</li>rn<li><strong>country</strong>: 500km (310mi)</li>rn<li><strong>continent</strong>: 1500km (932mi)</li>rn</ul></div>",
				"operationId": "methodflickrplacesplacesforboundingbox",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "bbox",
					"description": "A comma-delimited list of 4 values defining the Bounding Box of the area that will be searched. The 4 values represent the bottom-left corner of the box and the top-right corner, minimum_longitude, minimum_latitude, maximum_longitude, maximum_latitude.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_type",
					"description": "The name of place type to using as the starting point to search for places in a bounding box. Valid placetypes are:neighbourhoodlocalitycountyregioncountrycontinentThe place_type argument has been deprecated in favor of the place_type_id argument. It wont go away but it will not be added to new methods. A complete list of place type IDs is available using the flickr.places.getPlaceTypes method. (While optional, you must pass either a valid place type or place type ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_type_id",
					"description": "The numeric ID for a specific place type to cluster photos by. Valid place type IDs are :22: neighbourhood7: locality8: region12: country29: continent(While optional, you must pass either a valid place type or place type ID.)",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required parameters missing - One or more required parameter is missing from the API call."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Not a valid bbox - The bbox argument was incomplete or incorrectly formatted"
					},
					"3": {
						"description": "Not a valid place type - An invalid place type was included with your request."
					},
					"4": {
						"description": "Bounding box exceeds maximum allowable size for place type - The bounding box passed along with your request was too large for the request place type."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.placesForContacts": {
			"get": {
				"summary": "flickr.places.placesForContacts",
				"description": "<div class=MethodDescription>Return a list of the top 100 unique places clustered by a given placetype for a users contacts. </div>",
				"operationId": "methodflickrplacesplacesforcontacts",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "contacts",
					"description": "Search your contacts. Either all or ff for just friends and family. (Default is all)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "max_taken_date",
					"description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "max_upload_date",
					"description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "min_taken_date",
					"description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "min_upload_date",
					"description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_id",
					"description": "A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (Place ID 4KO02SibApitvSBieQ).(While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_type",
					"description": "A specific place type to cluster photos by. Valid place types are :neighbourhood (and neighborhood)localityregioncountrycontinentThe place_type argument has been deprecated in favor of the place_type_id argument. It wont go away but it will not be added to new methods. A complete list of place type IDs is available using the flickr.places.getPlaceTypes method. (While optional, you must pass either a valid place type or place type ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_type_id",
					"description": "The numeric ID for a specific place type to cluster photos by. Valid place type IDs are :22: neighbourhood7: locality8: region12: country29: continent(While optional, you must pass either a valid place type or place type ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "threshold",
					"description": "The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.For example if your contacts only have 3 photos taken in the locality of Montreal (WOE ID 3534) but your threshold is set to 5 then those photos will be rolled up and included instead with a place record for the region of Quebec (WOE ID 2344924).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "woe_id",
					"description": "A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (WOE ID 23424977).(While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Places for contacts are not available at this time - Places for contacts have been disabled or are otherwise not available."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Required parameter missing - One or more of the required parameters was not included with your request."
					},
					"3": {
						"description": "Not a valid place type. - An invalid place type was included with your request."
					},
					"4": {
						"description": "Not a valid Place ID - An invalid Places (or WOE) identifier was included with your request."
					},
					"5": {
						"description": "Not a valid threshold - The threshold passed was invalid. "
					},
					"6": {
						"description": "Not a valid contacts type - Contacts must be either all or ff (friends and family)."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.placesForTags": {
			"get": {
				"summary": "flickr.places.placesForTags",
				"description": "<div class=MethodDescription>Return a list of the top 100 unique places clustered by a given placetype for set of tags or machine tags. </div>",
				"operationId": "methodflickrplacesplacesfortags",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "machine_tags",
					"description": "Aside from passing in a fully formed machine tag, there is a special syntax for searching on specific properties.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "machine_tag_mode",
					"description": "Either any for an OR combination of tags, or all for an AND combination. Defaults to any if not specified.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "max_taken_date",
					"description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "max_upload_date",
					"description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "min_taken_date",
					"description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "min_upload_date",
					"description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_id",
					"description": "A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (Place ID 4KO02SibApitvSBieQ).(While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_type_id",
					"description": "The numeric ID for a specific place type to cluster photos by. Valid place type IDs are :22: neighbourhood7: locality8: region12: country29: continent",
					"type": "string"
				},
				{
					"in": "query",
					"name": "tags",
					"description": "A comma-delimited list of tags. Photos with one or more of the tags listed will be returned.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "tag_mode",
					"description": "Either any for an OR combination of tags, or all for an AND combination. Defaults to any if not specified.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "threshold",
					"description": "The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.For example if you only have 3 photos taken in the locality of Montreal (WOE ID 3534) but your threshold is set to 5 then those photos will be rolled up and included instead with a place record for the region of Quebec (WOE ID 2344924).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "woe_id",
					"description": "A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (WOE ID 23424977).(While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Places for contacts are not available at this time - Places for contacts have been disabled or are otherwise not available."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Required parameter missing - One or more of the required parameters was not included with your request."
					},
					"3": {
						"description": "Not a valid place type. - An invalid place type was included with your request."
					},
					"4": {
						"description": "Not a valid Place ID - An invalid Places (or WOE) identifier was included with your request."
					},
					"5": {
						"description": "Not a valid threshold - The threshold passed was invalid. "
					},
					"6": {
						"description": "Not a valid contacts type - Contacts must be either all or ff (friends and family)."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.placesForUser": {
			"get": {
				"summary": "flickr.places.placesForUser",
				"description": "<div class=MethodDescription>Return a list of the top 100 unique places clustered by a given placetype for a user. </div>",
				"operationId": "methodflickrplacesplacesforuser",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "max_taken_date",
					"description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "max_upload_date",
					"description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "min_taken_date",
					"description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "min_upload_date",
					"description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_id",
					"description": "A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (Place ID 4KO02SibApitvSBieQ).(While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_type",
					"description": "A specific place type to cluster photos by. Valid place types are :neighbourhood (and neighborhood)localityregioncountrycontinent(While optional, you must pass either a valid place type or place type ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_type_id",
					"description": "The numeric ID for a specific place type to cluster photos by. Valid place type IDs are :22: neighbourhood7: locality8: region12: country29: continentThe place_type argument has been deprecated in favor of the place_type_id argument. It wont go away but it will not be added to new methods. A complete list of place type IDs is available using the flickr.places.getPlaceTypes method. (While optional, you must pass either a valid place type or place type ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "threshold",
					"description": "The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.For example if you only have 3 photos taken in the locality of Montreal (WOE ID 3534) but your threshold is set to 5 then those photos will be rolled up and included instead with a place record for the region of Quebec (WOE ID 2344924).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "woe_id",
					"description": "A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (WOE ID 23424977).(While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Places for user are not available at this time - Places for user have been disabled or are otherwise not available."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Required parameter missing - One or more of the required parameters was not included with your request."
					},
					"3": {
						"description": "Not a valid place type - An invalid place type was included with your request."
					},
					"4": {
						"description": "Not a valid Place ID - An invalid Places (or WOE) identifier was included with your request."
					},
					"5": {
						"description": "Not a valid threshold - The threshold passed was invalid. "
					},
					"6": {
						"description": "Not a valid contacts type - Contacts must be either all or ff (friends and family)."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.resolvePlaceId": {
			"get": {
				"summary": "flickr.places.resolvePlaceId",
				"description": "<div class=MethodDescription>Find Flickr Places information by Place ID.<br /><br />rnThis method has been deprecated. It wont be removed but you should use <a href=/services/api/flickr.places.getInfo.html>flickr.places.getInfo</a> instead.</div>",
				"operationId": "methodflickrplacesresolveplaceid",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_id",
					"description": "A Flickr Places ID",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Places for user are not available at this time - Places for user have been disabled or are otherwise not available."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Place ID required. - "
					},
					"3": {
						"description": "Place not found. - "
					},
					"4": {
						"description": "Not a valid Place ID - An invalid Places (or WOE) identifier was included with your request."
					},
					"5": {
						"description": "Not a valid threshold - The threshold passed was invalid. "
					},
					"6": {
						"description": "Not a valid contacts type - Contacts must be either all or ff (friends and family)."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.resolvePlaceURL": {
			"get": {
				"summary": "flickr.places.resolvePlaceURL",
				"description": "<div class=MethodDescription>Find Flickr Places information by Place URL.<br /><br />rnThis method has been deprecated. It wont be removed but you should use <a href=/services/api/flickr.places.getInfoByUrl.html>flickr.places.getInfoByUrl</a> instead.rn</div>",
				"operationId": "methodflickrplacesresolveplaceurl",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "url",
					"description": "A Flickr Places URL.  Flickr Place URLs are of the form /country/region/city",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Places for user are not available at this time - Places for user have been disabled or are otherwise not available."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Place URL required. - "
					},
					"3": {
						"description": "Place not found. - "
					},
					"4": {
						"description": "Not a valid Place ID - An invalid Places (or WOE) identifier was included with your request."
					},
					"5": {
						"description": "Not a valid threshold - The threshold passed was invalid. "
					},
					"6": {
						"description": "Not a valid contacts type - Contacts must be either all or ff (friends and family)."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.places.tagsForPlace": {
			"get": {
				"summary": "flickr.places.tagsForPlace",
				"description": "<div class=MethodDescription>Return a list of the top 100 unique tags for a Flickr Places or Where on Earth (WOE) ID</div>",
				"operationId": "methodflickrplacestagsforplace",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "max_taken_date",
					"description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "max_upload_date",
					"description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "min_taken_date",
					"description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "min_upload_date",
					"description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "place_id",
					"description": "A Flickr Places identifier to use to filter photo clusters.(While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "woe_id",
					"description": "A Where on Earth identifier to use to filter photo clusters.(While optional, you must pass either a valid Places ID or a WOE ID.)",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Required parameter missing - One or more parameters was not included with the API request"
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					},
					"2": {
						"description": "Not a valid Places ID - An invalid Places (or WOE) identifier was included with your request."
					},
					"3": {
						"description": "Place not found - An invalid Places (or WOE) identifier was included with your request."
					},
					"4": {
						"description": "Not a valid Place ID - An invalid Places (or WOE) identifier was included with your request."
					},
					"5": {
						"description": "Not a valid threshold - The threshold passed was invalid. "
					},
					"6": {
						"description": "Not a valid contacts type - Contacts must be either all or ff (friends and family)."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					}
				},
				"tags": [""],
				"security": []
			}
		}
	},
	"definitions": []
}