{
	"swagger": "2.0",
	"info": {
		"title": "Flickr Contacts API",
		"description": "The API for managing Flickr Contacts",
		"termsOfService": "https://www.flickr.com/services/api/tos/",
		"version": null
	},
	"host": "www.flickr.com",
	"basePath": "/services/rest/",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/?method=flickr.contacts.getList": {
			"get": {
				"summary": "flickr.contacts.getList",
				"description": "<div class=MethodDescription>Get a list of contacts for the calling user.</div>",
				"operationId": "methodflickrcontactsgetlist",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "filter",
					"description": "An optional filter of the results. The following values are valid:&nbsp;tfriendstOnly contacts who are friends (and not family)tfamilytOnly contacts who are family (and not friends)tbothtOnly contacts who are both friends and familytneithertOnly contacts who are neither friends nor family",
					"type": "string"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The page of results to return. If this argument is omitted, it defaults to 1.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "per_page",
					"description": "Number of photos to return per page. If this argument is omitted, it defaults to 1000. The maximum allowed value is 1000.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "The order in which to sort the returned contacts. Defaults to name. The possible values are: name and time.",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Invalid sort parameter. - The possible values are: name and time."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.contacts.getListRecentlyUploaded": {
			"get": {
				"summary": "flickr.contacts.getListRecentlyUploaded",
				"description": "<div class=MethodDescription>Return a list of contacts for a user who have recently uploaded photos along with the total count of photos uploaded.<br /><br />rnrnThis method is still considered experimental. We dont plan for it to change or to go away but so long as this notice is present you should write your code accordingly.</div>",
				"operationId": "methodflickrcontactsgetlistrecentlyuploaded",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "date_lastupload",
					"description": "Limits the resultset to contacts that have uploaded photos since this date. The date should be in the form of a Unix timestamp.The default offset is (1) hour and the maximum (24) hours.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "filter",
					"description": "Limit the result set to all contacts or only those who are friends or family. Valid options are:ff friends and familyall all your contactsDefault value is all.",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "Invalid sort parameter. - The possible values are: name and time."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.contacts.getPublicList": {
			"get": {
				"summary": "flickr.contacts.getPublicList",
				"description": "<div class=MethodDescription>Get the contact list for a user.</div>",
				"operationId": "methodflickrcontactsgetpubliclist",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The page of results to return. If this argument is omitted, it defaults to 1.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "per_page",
					"description": "Number of photos to return per page. If this argument is omitted, it defaults to 1000. The maximum allowed value is 1000.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "user_id",
					"description": "The NSID of the user to fetch the contact list for.",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "User not found - The specified user NSID was not a valid user."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/?method=flickr.contacts.getTaggingSuggestions": {
			"get": {
				"summary": "flickr.contacts.getTaggingSuggestions",
				"description": "<div class=MethodDescription>Get suggestions for tagging people in photos based on the calling users contacts.</div>",
				"operationId": "methodflickrcontactsgettaggingsuggestions",
				"parameters": [{
					"in": "query",
					"name": "api_key",
					"description": "Your API application key. See here for more details.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The page of results to return. If this argument is omitted, it defaults to 1.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "per_page",
					"description": "Number of contacts to return per page. If this argument is omitted, all contacts will be returned.",
					"type": "string"
				}],
				"responses": {
					"1": {
						"description": "User not found - The specified user NSID was not a valid user."
					},
					"95": {
						"description": "SSL is required - SSL is required to access the Flickr API."
					},
					"96": {
						"description": "Invalid signature - The passed signature was invalid."
					},
					"97": {
						"description": "Missing signature - The call required signing but no signature was sent."
					},
					"98": {
						"description": "Login failed / Invalid auth token - The login details or auth token passed were invalid."
					},
					"99": {
						"description": "User not logged in / Insufficient permissions - The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
					},
					"100": {
						"description": "Invalid API Key - The API key passed was not valid or has expired."
					},
					"105": {
						"description": "Service currently unavailable - The requested service is temporarily unavailable."
					},
					"106": {
						"description": "Write operation failed - The requested operation failed due to a temporary issue."
					},
					"111": {
						"description": "Format xxx not found - The requested response format was not found."
					},
					"112": {
						"description": "Method xxx not found - The requested method was not found."
					},
					"114": {
						"description": "Invalid SOAP envelope - The SOAP envelope send in the request could not be parsed."
					},
					"115": {
						"description": "Invalid XML-RPC Method Call - The XML-RPC request document could not be parsed."
					},
					"116": {
						"description": "Bad URL found - One or more arguments contained a URL that has been used for abuse on Flickr."
					}
				},
				"tags": [""],
				"security": []
			}
		}
	},
	"definitions": []
}