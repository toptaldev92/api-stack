{
	"swagger": "2.0",
	"info": {
		"title": "Google App State API",
		"description": "The Google App State API.",
		"contact": {
			"name": "Google",
			"url": "https://google.com"
		},
		"version": "v1"
	},
	"host": "www.googleapis.com",
	"basePath": "/appstate/v1",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/states": {
			"get": {
				"summary": "",
				"description": "Lists all the states keys, and optionally the state data.",
				"operationId": "appstate.states.list",
				"parameters": [{
					"in": "query",
					"name": "includeData",
					"description": "Whether to include the full data in addition to the version number",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/states/{stateKey}": {
			"delete": {
				"summary": "",
				"description": "Deletes a key and the data associated with it. The key is removed and no longer counts against the key quota. Note that since this method is not safe in the face of concurrent modifications, it should only be used for development and testing purposes. Invoking this method in shipping code can result in data loss and data corruption.",
				"operationId": "appstate.states.delete",
				"parameters": [{
					"in": "path",
					"name": "stateKey",
					"description": "The key for the data to be retrieved.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Retrieves the data corresponding to the passed key. If the key does not exist on the server, an HTTP 404 will be returned.",
				"operationId": "appstate.states.get",
				"parameters": [{
					"in": "path",
					"name": "stateKey",
					"description": "The key for the data to be retrieved.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Update the data associated with the input key if and only if the passed version matches the currently stored version. This method is safe in the face of concurrent writes. Maximum per-key size is 128KB.",
				"operationId": "appstate.states.update",
				"parameters": [{
					"in": "query",
					"name": "currentStateVersion",
					"description": "The version of the app state your application is attempting to update. If this does not match the current version, this method will return a conflict error. If there is no data stored on the server for this key, the update will succeed irrespective of the value of this parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "stateKey",
					"description": "The key for the data to be retrieved.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/states/{stateKey}/clear": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Clears (sets to empty) the data for the passed key if and only if the passed version matches the currently stored version. This method results in a conflict error on version mismatch.",
				"operationId": "appstate.states.clear",
				"parameters": [{
					"in": "query",
					"name": "currentDataVersion",
					"description": "The version of the data to be cleared. Version strings are returned by the server.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "stateKey",
					"description": "The key for the data to be retrieved.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		}
	},
	"definitions": {
		"GetResponse": {
			"properties": {
				"currentStateVersion": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"data": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"stateKey": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ListResponse": {
			"properties": {
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"maximumKeyCount": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"UpdateRequest": {
			"properties": {
				"data": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"WriteResult": {
			"properties": {
				"currentStateVersion": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"stateKey": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		}
	}
}