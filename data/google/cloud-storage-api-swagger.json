{
	"swagger": "2.0",
	"info": {
		"title": "Cloud Storage API",
		"description": "Lets you store and retrieve potentially-large, immutable data objects.",
		"contact": {
			"name": "Google",
			"url": "https://google.com"
		},
		"version": "v1beta2"
	},
	"host": "www.googleapis.com",
	"basePath": "/storage/v1beta2",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/b": {
			"get": {
				"summary": "",
				"description": "Retrieves a list of buckets for a given project.",
				"operationId": "storage.buckets.list",
				"parameters": [{
					"in": "query",
					"name": "maxResults",
					"description": "Maximum number of buckets to return.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "A previously-returned page token representing part of the larger set of results to view.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "project",
					"description": "A valid API project identifier.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to noAcl.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Creates a new bucket.",
				"operationId": "storage.buckets.insert",
				"parameters": [{
					"in": "query",
					"name": "project",
					"description": "A valid API project identifier.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}": {
			"delete": {
				"summary": "",
				"description": "Permanently deletes an empty bucket.",
				"operationId": "storage.buckets.delete",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the return of the bucket metadata conditional on whether the buckets current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the return of the bucket metadata conditional on whether the buckets current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns metadata for the specified bucket.",
				"operationId": "storage.buckets.get",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the return of the bucket metadata conditional on whether the buckets current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the return of the bucket metadata conditional on whether the buckets current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to noAcl.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"patch": {
				"summary": "",
				"description": "Updates a bucket. This method supports patch semantics.",
				"operationId": "storage.buckets.patch",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the return of the bucket metadata conditional on whether the buckets current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the return of the bucket metadata conditional on whether the buckets current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to full.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates a bucket.",
				"operationId": "storage.buckets.update",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the return of the bucket metadata conditional on whether the buckets current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the return of the bucket metadata conditional on whether the buckets current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to full.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}/acl": {
			"get": {
				"summary": "",
				"description": "Retrieves ACL entries on the specified bucket.",
				"operationId": "storage.bucketAccessControls.list",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Creates a new ACL entry on the specified bucket.",
				"operationId": "storage.bucketAccessControls.insert",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}/acl/{entity}": {
			"delete": {
				"summary": "",
				"description": "Permanently deletes the ACL entry for the specified entity on the specified bucket.",
				"operationId": "storage.bucketAccessControls.delete",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns the ACL entry for the specified entity on the specified bucket.",
				"operationId": "storage.bucketAccessControls.get",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"patch": {
				"summary": "",
				"description": "Updates an ACL entry on the specified bucket. This method supports patch semantics.",
				"operationId": "storage.bucketAccessControls.patch",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates an ACL entry on the specified bucket.",
				"operationId": "storage.bucketAccessControls.update",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}/defaultObjectAcl": {
			"get": {
				"summary": "",
				"description": "Retrieves default object ACL entries on the specified bucket.",
				"operationId": "storage.defaultObjectAccessControls.list",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "If present, only return default ACL listing if the buckets current metageneration matches this value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "If present, only return default ACL listing if the buckets current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Creates a new default object ACL entry on the specified bucket.",
				"operationId": "storage.defaultObjectAccessControls.insert",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}/defaultObjectAcl/{entity}": {
			"delete": {
				"summary": "",
				"description": "Permanently deletes the default object ACL entry for the specified entity on the specified bucket.",
				"operationId": "storage.defaultObjectAccessControls.delete",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns the default object ACL entry for the specified entity on the specified bucket.",
				"operationId": "storage.defaultObjectAccessControls.get",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"patch": {
				"summary": "",
				"description": "Updates a default object ACL entry on the specified bucket. This method supports patch semantics.",
				"operationId": "storage.defaultObjectAccessControls.patch",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates a default object ACL entry on the specified bucket.",
				"operationId": "storage.defaultObjectAccessControls.update",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}/o": {
			"get": {
				"summary": "",
				"description": "Retrieves a list of objects matching the criteria.",
				"operationId": "storage.objects.list",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of the bucket in which to look for objects.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "delimiter",
					"description": "Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "A previously-returned page token representing part of the larger set of results to view.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "prefix",
					"description": "Filter results to objects whose names begin with this prefix.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to noAcl.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "versions",
					"description": "If true, lists all versions of a file as distinct results.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Stores new data blobs and associated metadata.",
				"operationId": "storage.objects.insert",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of the bucket in which to store the new object. Overrides the provided object metadatas bucket value, if any.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationMatch",
					"description": "Makes the operation conditional on whether the objects current generation matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects current generation does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "name",
					"description": "Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadatas name value, if any.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}/o/watch": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Watch for changes on all objects in a bucket.",
				"operationId": "storage.objects.watchAll",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of the bucket in which to look for objects.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "delimiter",
					"description": "Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "A previously-returned page token representing part of the larger set of results to view.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "prefix",
					"description": "Filter results to objects whose names begin with this prefix.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to noAcl.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "versions",
					"description": "If true, lists all versions of a file as distinct results.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}/o/{object}": {
			"delete": {
				"summary": "",
				"description": "Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.",
				"operationId": "storage.objects.delete",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of the bucket in which the object resides.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationMatch",
					"description": "Makes the operation conditional on whether the objects current generation matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects current generation does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Retrieves objects or their associated metadata.",
				"operationId": "storage.objects.get",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of the bucket in which the object resides.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationMatch",
					"description": "Makes the operation conditional on whether the objects generation matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects generation does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to noAcl.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"patch": {
				"summary": "",
				"description": "Updates a data blobs associated metadata. This method supports patch semantics.",
				"operationId": "storage.objects.patch",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of the bucket in which the object resides.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationMatch",
					"description": "Makes the operation conditional on whether the objects current generation matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects current generation does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to full.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates a data blobs associated metadata.",
				"operationId": "storage.objects.update",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of the bucket in which the object resides.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationMatch",
					"description": "Makes the operation conditional on whether the objects current generation matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects current generation does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to full.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}/o/{object}/acl": {
			"get": {
				"summary": "",
				"description": "Retrieves ACL entries on the specified object.",
				"operationId": "storage.objectAccessControls.list",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Creates a new ACL entry on the specified object.",
				"operationId": "storage.objectAccessControls.insert",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{bucket}/o/{object}/acl/{entity}": {
			"delete": {
				"summary": "",
				"description": "Permanently deletes the ACL entry for the specified entity on the specified object.",
				"operationId": "storage.objectAccessControls.delete",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns the ACL entry for the specified entity on the specified object.",
				"operationId": "storage.objectAccessControls.get",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"patch": {
				"summary": "",
				"description": "Updates an ACL entry on the specified object. This method supports patch semantics.",
				"operationId": "storage.objectAccessControls.patch",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates an ACL entry on the specified object.",
				"operationId": "storage.objectAccessControls.update",
				"parameters": [{
					"in": "path",
					"name": "bucket",
					"description": "Name of a bucket.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "entity",
					"description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "generation",
					"description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "object",
					"description": "Name of the object.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{destinationBucket}/o/{destinationObject}/compose": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Concatenates a list of existing objects into a new object in the same bucket.",
				"operationId": "storage.objects.compose",
				"parameters": [{
					"in": "path",
					"name": "destinationBucket",
					"description": "Name of the bucket in which to store the new object.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "destinationObject",
					"description": "Name of the new object.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationMatch",
					"description": "Makes the operation conditional on whether the objects current generation matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the operation conditional on whether the objects current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Copies an object to a destination in the same location. Optionally overrides metadata.",
				"operationId": "storage.objects.copy",
				"parameters": [{
					"in": "path",
					"name": "destinationBucket",
					"description": "Name of the bucket in which to store the new object. Overrides the provided object metadatas bucket value, if any.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "destinationObject",
					"description": "Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadatas name value, if any.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationMatch",
					"description": "Makes the operation conditional on whether the destination objects current generation matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifGenerationNotMatch",
					"description": "Makes the operation conditional on whether the destination objects current generation does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationMatch",
					"description": "Makes the operation conditional on whether the destination objects current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifMetagenerationNotMatch",
					"description": "Makes the operation conditional on whether the destination objects current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifSourceGenerationMatch",
					"description": "Makes the operation conditional on whether the source objects generation matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifSourceGenerationNotMatch",
					"description": "Makes the operation conditional on whether the source objects generation does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifSourceMetagenerationMatch",
					"description": "Makes the operation conditional on whether the source objects current metageneration matches the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "ifSourceMetagenerationNotMatch",
					"description": "Makes the operation conditional on whether the source objects current metageneration does not match the given value.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "projection",
					"description": "Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "sourceBucket",
					"description": "Name of the bucket in which to find the source object.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "sourceGeneration",
					"description": "If present, selects a specific revision of the source object (as opposed to the latest version, the default).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "sourceObject",
					"description": "Name of the source object.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/channels/stop": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Stop watching resources through this channel",
				"operationId": "storage.channels.stop",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		}
	},
	"definitions": {
		"Bucket": {
			"properties": {
				"acl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"cors": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"defaultObjectAcl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"lifecycle": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"location": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"logging": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"metageneration": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"name": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"owner": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"selfLink": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"storageClass": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"timeCreated": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"versioning": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"website": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"BucketAccessControl": {
			"properties": {
				"bucket": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"domain": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"email": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"entity": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"entityId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"role": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"selfLink": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"BucketAccessControls": {
			"properties": {
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Buckets": {
			"properties": {
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Channel": {
			"properties": {
				"address": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"expiration": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"params": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"payload": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"resourceId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"resourceUri": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"token": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"type": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ComposeRequest": {
			"properties": {
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"sourceObjects": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Object": {
			"properties": {
				"acl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bucket": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"cacheControl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"componentCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"contentDisposition": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"contentEncoding": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"contentLanguage": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"contentType": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"crc32c": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"generation": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"md5Hash": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"mediaLink": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"metadata": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"metageneration": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"name": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"owner": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"selfLink": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"size": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"storageClass": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"timeDeleted": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"updated": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ObjectAccessControl": {
			"properties": {
				"bucket": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"domain": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"email": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"entity": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"entityId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"generation": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"object": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"role": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"selfLink": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ObjectAccessControls": {
			"properties": {
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Objects": {
			"properties": {
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prefixes": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		}
	}
}