{
	"swagger": "2.0",
	"info": {
		"title": "YouTube Data API",
		"description": "Programmatic access to YouTube features.",
		"contact": {
			"name": "Google",
			"url": "https://google.com"
		},
		"version": "v3"
	},
	"host": "www.googleapis.com",
	"basePath": "/youtube/v3",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/activities": {
			"get": {
				"summary": "",
				"description": "Returns a list of channel activity events that match the request criteria. For example, you can retrieve events associated with a particular channel, events associated with the users subscriptions and Google+ friends, or the YouTube home page feed, which is customized for each user.",
				"operationId": "youtube.activities.list",
				"parameters": [{
					"in": "query",
					"name": "channelId",
					"description": "The channelId parameter specifies a unique YouTube channel ID. The API will then return a list of that channels activities.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "home",
					"description": "Set this parameters value to true to retrieve the activity feed that displays on the YouTube home page for the currently authenticated user.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "Set this parameters value to true to retrieve a feed of the authenticated users activities.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more activity resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.nnIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a activity resource, the snippet property contains other properties that identify the type of activity, a display title for the a",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "publishedAfter",
					"description": "The publishedAfter parameter specifies the earliest date and time that an activity could have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be included in the result set. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "publishedBefore",
					"description": "The publishedBefore parameter specifies the date and time before which an activity must have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be excluded from the result set. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "regionCode",
					"description": "The regionCode parameter instructs the API to return results for the specified country. The parameter value is an ISO 3166-1 alpha-2 country code. YouTube uses this value when the authorized users previous activity on YouTube does not provide enough information to generate the activity feed.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Posts a bulletin for a specific channel. (The user submitting the request must be authorized to act on the channels behalf.)nnNote: Even though an activity resource can contain information about actions like a user rating a video or marking a video as a favorite, you need to use other API methods to generate those activity resources. For example, you would use the APIs videos.rate() method to rate a video and the playlistItems.insert() method to mark a video as a favorite.",
				"operationId": "youtube.activities.insert",
				"parameters": [{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet and contentDetails.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/captions": {
			"delete": {
				"summary": "",
				"description": "Deletes a specified caption track.",
				"operationId": "youtube.captions.delete",
				"parameters": [{
					"in": "query",
					"name": "debugProjectIdOverride",
					"description": "The debugProjectIdOverride parameter should be used for mimicking a request for a certain project ID",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter identifies the caption track that is being deleted. The value is a caption track ID as identified by the id property in a caption resource.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOf",
					"description": "ID of the Google+ Page for the channel that the request is be on behalf of",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns a list of caption tracks that are associated with a specified video. Note that the API response does not contain the actual captions and that the captions.download method provides the ability to retrieve a caption track.",
				"operationId": "youtube.captions.list",
				"parameters": [{
					"in": "query",
					"name": "debugProjectIdOverride",
					"description": "The debugProjectIdOverride parameter should be used for mimicking a request for a certain project ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of IDs that identify the caption resources that should be retrieved. Each ID must identify a caption track associated with the specified video.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOf",
					"description": "ID of the Google+ Page for the channel that the request is on behalf of.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more caption resource parts that the API response will include. The part names that you can include in the parameter value are id and snippet.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoId",
					"description": "The videoId parameter specifies the YouTube video ID of the video for which the API should return caption tracks.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Uploads a caption track.",
				"operationId": "youtube.captions.insert",
				"parameters": [{
					"in": "query",
					"name": "debugProjectIdOverride",
					"description": "The debugProjectIdOverride parameter should be used for mimicking a request for a certain project ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOf",
					"description": "ID of the Google+ Page for the channel that the request is be on behalf of",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies the caption resource parts that the API response will include. Set the parameter value to snippet.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "sync",
					"description": "The sync parameter indicates whether YouTube should automatically synchronize the caption file with the audio track of the video. If you set the value to true, YouTube will disregard any time codes that are in the uploaded caption file and generate new time codes for the captions.nnYou should set the sync parameter to true if you are uploading a transcript, which has no time codes, or if you suspect the time codes in your file are incorrect and want YouTube to try to fix them.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates a caption track. When updating a caption track, you can change the tracks draft status, upload a new caption file for the track, or both.",
				"operationId": "youtube.captions.update",
				"parameters": [{
					"in": "query",
					"name": "debugProjectIdOverride",
					"description": "The debugProjectIdOverride parameter should be used for mimicking a request for a certain project ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOf",
					"description": "ID of the Google+ Page for the channel that the request is be on behalf of",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include. Set the property value to snippet if you are updating the tracks draft status. Otherwise, set the property value to id.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "sync",
					"description": "Note: The API server only processes the parameter value if the request contains an updated caption file.nnThe sync parameter indicates whether YouTube should automatically synchronize the caption file with the audio track of the video. If you set the value to true, YouTube will automatically synchronize the caption track with the audio track.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/captions/{id}": {
			"get": {
				"summary": "",
				"description": "Downloads a caption track. The caption track is returned in its original format unless the request specifies a value for the tfmt parameter and in its original language unless the request specifies a value for the tlang parameter.",
				"operationId": "youtube.captions.download",
				"parameters": [{
					"in": "query",
					"name": "debugProjectIdOverride",
					"description": "The debugProjectIdOverride parameter should be used for mimicking a request for a certain project ID",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "id",
					"description": "The id parameter identifies the caption track that is being retrieved. The value is a caption track ID as identified by the id property in a caption resource.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOf",
					"description": "ID of the Google+ Page for the channel that the request is be on behalf of",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "tfmt",
					"description": "The tfmt parameter specifies that the caption track should be returned in a specific format. If the parameter is not included in the request, the track is returned in its original format.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "tlang",
					"description": "The tlang parameter specifies that the API response should return a translation of the specified caption track. The parameter value is an ISO 639-1 two-letter language code that identifies the desired caption language. The translation is generated by using machine translation, such as Google Translate.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/channelBanners/insert": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Uploads a channel banner image to YouTube. This method represents the first two steps in a three-step process to update the banner image for a channel:nn- Call the channelBanners.insert method to upload the binary image data to YouTube. The image must have a 16:9 aspect ratio and be at least 2120x1192 pixels.n- Extract the url propertys value from the response that the API returns for step 1.n- Call the channels.update method to update the channels branding settings. Set the brandingSettings.image.bannerExternalUrl propertys value to the URL obtained in step 2.",
				"operationId": "youtube.channelBanners.insert",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/channels": {
			"get": {
				"summary": "",
				"description": "Returns a collection of zero or more channel resources that match the request criteria.",
				"operationId": "youtube.channels.list",
				"parameters": [{
					"in": "query",
					"name": "categoryId",
					"description": "The categoryId parameter specifies a YouTube guide category, thereby requesting YouTube channels associated with that category.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "forUsername",
					"description": "The forUsername parameter specifies a YouTube username, thereby requesting the channel associated with that username.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "hl",
					"description": "The hl parameter should be used for filter out the properties that are not in the given language. Used for the brandingSettings part.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of the YouTube channel ID(s) for the resource(s) that are being retrieved. In a channel resource, the id property specifies the channels YouTube channel ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "managedByMe",
					"description": "Set this parameters value to true to instruct the API to only return channels managed by the content owner that the onBehalfOfContentOwner parameter specifies. The user must be authenticated as a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "Set this parameters value to true to instruct the API to only return channels owned by the authenticated user.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "mySubscribers",
					"description": "Set this parameters value to true to retrieve a list of channels that subscribed to the authenticated users channel.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, statistics, topicDetails, and invideoPromotion.nnIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channel resource, the contentDetails property contains other properties, such as the",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates a channels metadata.",
				"operationId": "youtube.channels.update",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are id and invideoPromotion.nnNote that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/channelSections": {
			"delete": {
				"summary": "",
				"description": "Deletes a channelSection.",
				"operationId": "youtube.channelSections.delete",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube channelSection ID for the resource that is being deleted. In a channelSection resource, the id property specifies the YouTube channelSection ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns channelSection resources that match the API request criteria.",
				"operationId": "youtube.channelSections.list",
				"parameters": [{
					"in": "query",
					"name": "channelId",
					"description": "The channelId parameter specifies a YouTube channel ID. The API will only return that channels channelSections.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "hl",
					"description": "The hl parameter indicates that the snippet.localized property values in the returned channelSection resources should be in the specified language if localized values for that language are available. For example, if the API request specifies hl=de, the snippet.localized properties in the API response will contain German titles if German titles are available. Channel owners can provide localized channel section titles using either the channelSections.insert or channelSections.update method.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of the YouTube channelSection ID(s) for the resource(s) that are being retrieved. In a channelSection resource, the id property specifies the YouTube channelSection ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "Set this parameters value to true to retrieve a feed of the authenticated users channelSections.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more channelSection resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.nnIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channelSection resource, the snippet property contains other properties, such as a display title for the channelSection. ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Adds a channelSection for the authenticated users channel.",
				"operationId": "youtube.channelSections.insert",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet and contentDetails.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Update a channelSection.",
				"operationId": "youtube.channelSections.update",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet and contentDetails.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/comments": {
			"delete": {
				"summary": "",
				"description": "Deletes a comment.",
				"operationId": "youtube.comments.delete",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the comment ID for the resource that should be deleted.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns a list of comments that match the API request parameters.",
				"operationId": "youtube.comments.list",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of comment IDs for the resources that should be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.nnNote: This parameter is not supported for use in conjunction with the id parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page of the result that can be retrieved.nnNote: This parameter is not supported for use in conjunction with the id parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "parentId",
					"description": "The parentId parameter specifies the ID of the comment for which replies should be retrieved.nnNote: Currently YouTube features only one level of replies (ie replies to top level comments). However replies to replies may be supported in the future.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies the comment resource parts that the API response will include. Supported values are id and snippet.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "textFormat",
					"description": "Set this parameters value to html or plainText to instruct the API to return the comments left by users formatted as HTML or as plain text.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Creates a new comment.nnNote: to create a top level comment it is also necessary to create a comment thread. Both are accomplished through the commentThreads resource.",
				"operationId": "youtube.comments.insert",
				"parameters": [{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are id and snippet. However only snippet contains properties that can be set.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Modifies an existing comment.",
				"operationId": "youtube.comments.update",
				"parameters": [{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are id and snippet. However only snippet contains properties that can be updated.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/comments/markAsSpam": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Expresses the callers opinion that a comment is spam.",
				"operationId": "youtube.comments.markAsSpam",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of IDs of comments which should get flagged as spam.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/comments/setModerationStatus": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Sets the moderation status of one or more comments.",
				"operationId": "youtube.comments.setModerationStatus",
				"parameters": [{
					"in": "query",
					"name": "banAuthor",
					"description": "The banAuthor paramter, if set to true, adds the author of the comment to the ban list. This means all future comments of the author will autmomatically be rejected.nnNote: This parameter is only valid in combination with moderationStatus rejected.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of IDs of comments whose moderation status should be updated.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "moderationStatus",
					"description": "Determines the new moderation status of the specified comments.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/commentThreads": {
			"get": {
				"summary": "",
				"description": "Returns a list of comment threads that match the API request parameters.",
				"operationId": "youtube.commentThreads.list",
				"parameters": [{
					"in": "query",
					"name": "allThreadsRelatedToChannelId",
					"description": "The allThreadsRelatedToChannelId parameter instructs the API to return the comment threads of all videos of the channel and the channel comments as well.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "channelId",
					"description": "The channelId parameter instructs the API to return the comment threads for all the channel comments (not including comments left on videos).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of comment thread IDs for the resources that should be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.nnNote: This parameter is not supported for use in conjunction with the id parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "moderationStatus",
					"description": "Set this parameter to limit the returned comment threads to a particular moderation state.nnNote: This parameter is not supported for use in conjunction with the id parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "order",
					"description": "The order parameter specifies the order in which the API response should list comment threads. Valid values are: n- time - Comment threads are ordered by time. This is the default behavior.n- relevance - Comment threads are ordered by relevance.Note: This parameter is not supported for use in conjunction with the id parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page of the result that can be retrieved.nnNote: This parameter is not supported for use in conjunction with the id parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies the commentThread resource parts that the API response will include. Supported values are id, snippet and replies.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "searchTerms",
					"description": "The searchTerms parameter instructs the API to limit the returned comments to those which contain the specified search terms.nnNote: This parameter is not supported for use in conjunction with the id parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "textFormat",
					"description": "Set this parameters value to html or plainText to instruct the API to return the comments left by users in html formatted or in plain text.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoId",
					"description": "The videoId parameter instructs the API to return the comment threads for the video specified by the video id.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Creates a new comment thread and top level comment.",
				"operationId": "youtube.commentThreads.insert",
				"parameters": [{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are id and snippet. However only snippet contains properties that can be set.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "shareOnGooglePlus",
					"description": "The shareOnGooglePlus determines whether this thread should also be posted on Google+.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Modifies an existing comment.",
				"operationId": "youtube.commentThreads.update",
				"parameters": [{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are id, snippet and replies. However only snippet contains properties that can be updated.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/guideCategories": {
			"get": {
				"summary": "",
				"description": "Returns a list of categories that can be associated with YouTube channels.",
				"operationId": "youtube.guideCategories.list",
				"parameters": [{
					"in": "query",
					"name": "hl",
					"description": "The hl parameter specifies the language that will be used for text values in the API response.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of the YouTube channel category ID(s) for the resource(s) that are being retrieved. In a guideCategory resource, the id property specifies the YouTube channel category ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more guideCategory resource properties that the API response will include. The part names that you can include in the parameter value are id and snippet.nnIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a guideCategory resource, the snippet property contains other properties, such as the categorys title. If you set part=snippet, the API resp",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "regionCode",
					"description": "The regionCode parameter instructs the API to return the list of guide categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/i18nLanguages": {
			"get": {
				"summary": "",
				"description": "Returns a list of supported languages.",
				"operationId": "youtube.i18nLanguages.list",
				"parameters": [{
					"in": "query",
					"name": "hl",
					"description": "The hl parameter specifies the language that should be used for text values in the API response.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more i18nLanguage resource properties that the API response will include. The part names that you can include in the parameter value are id and snippet.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/i18nRegions": {
			"get": {
				"summary": "",
				"description": "Returns a list of supported regions.",
				"operationId": "youtube.i18nRegions.list",
				"parameters": [{
					"in": "query",
					"name": "hl",
					"description": "The hl parameter specifies the language that should be used for text values in the API response.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more i18nRegion resource properties that the API response will include. The part names that you can include in the parameter value are id and snippet.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/liveBroadcasts": {
			"delete": {
				"summary": "",
				"description": "Deletes a broadcast.",
				"operationId": "youtube.liveBroadcasts.delete",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube live broadcast ID for the resource that is being deleted.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns a list of YouTube broadcasts that match the API request parameters.",
				"operationId": "youtube.liveBroadcasts.list",
				"parameters": [{
					"in": "query",
					"name": "broadcastStatus",
					"description": "The broadcastStatus parameter filters the API response to only include broadcasts with the specified status.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of YouTube broadcast IDs that identify the broadcasts being retrieved. In a liveBroadcast resource, the id property specifies the broadcasts ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "The mine parameter can be used to instruct the API to only return broadcasts owned by the authenticated user. Set the parameter value to true to only retrieve your own broadcasts.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Creates a broadcast.",
				"operationId": "youtube.liveBroadcasts.insert",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part properties that you can include in the parameter value are id, snippet, contentDetails, and status.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates a broadcast. For example, you could modify the broadcast settings defined in the liveBroadcast resources contentDetails object.",
				"operationId": "youtube.liveBroadcasts.update",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part properties that you can include in the parameter value are id, snippet, contentDetails, and status.nnNote that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a broadcasts privacy status is def",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/liveBroadcasts/bind": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Binds a YouTube broadcast to a stream or removes an existing binding between a broadcast and a stream. A broadcast can only be bound to one video stream.",
				"operationId": "youtube.liveBroadcasts.bind",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the unique ID of the broadcast that is being bound to a video stream.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "streamId",
					"description": "The streamId parameter specifies the unique ID of the video stream that is being bound to a broadcast. If this parameter is omitted, the API will remove any existing binding between the broadcast and a video stream.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/liveBroadcasts/control": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Controls the settings for a slate that can be displayed in the broadcast stream.",
				"operationId": "youtube.liveBroadcasts.control",
				"parameters": [{
					"in": "query",
					"name": "displaySlate",
					"description": "The displaySlate parameter specifies whether the slate is being enabled or disabled.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube live broadcast ID that uniquely identifies the broadcast in which the slate is being updated.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "offsetTimeMs",
					"description": "The offsetTimeMs parameter specifies a positive time offset when the specified slate change will occur. The value is measured in milliseconds from the beginning of the broadcasts monitor stream, which is the time that the testing phase for the broadcast began. Even though it is specified in milliseconds, the value is actually an approximation, and YouTube completes the requested action as closely as possible to that time.nnIf you do not specify a value for this parameter, then YouTube performs ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "walltime",
					"description": "The walltime parameter specifies the wall clock time at which the specified slate change will occur. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/liveBroadcasts/transition": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Changes the status of a YouTube live broadcast and initiates any processes associated with the new status. For example, when you transition a broadcasts status to testing, YouTube starts to transmit video to that broadcasts monitor stream. Before calling this method, you should confirm that the value of the status.streamStatus property for the stream bound to your broadcast is active.",
				"operationId": "youtube.liveBroadcasts.transition",
				"parameters": [{
					"in": "query",
					"name": "broadcastStatus",
					"description": "The broadcastStatus parameter identifies the state to which the broadcast is changing. Note that to transition a broadcast to either the testing or live state, the status.streamStatus must be active for the stream that the broadcast is bound to.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the unique ID of the broadcast that is transitioning to another status.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more liveBroadcast resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/liveStreams": {
			"delete": {
				"summary": "",
				"description": "Deletes a video stream.",
				"operationId": "youtube.liveStreams.delete",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube live stream ID for the resource that is being deleted.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns a list of video streams that match the API request parameters.",
				"operationId": "youtube.liveStreams.list",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of YouTube stream IDs that identify the streams being retrieved. In a liveStream resource, the id property specifies the streams ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "The mine parameter can be used to instruct the API to only return streams owned by the authenticated user. Set the parameter value to true to only retrieve your own streams.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more liveStream resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, cdn, and status.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Creates a video stream. The stream enables you to send your video to YouTube, which can then broadcast the video to your audience.",
				"operationId": "youtube.liveStreams.insert",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part properties that you can include in the parameter value are id, snippet, cdn, and status.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates a video stream. If the properties that you want to change cannot be updated, then you need to create a new stream with the proper settings.",
				"operationId": "youtube.liveStreams.update",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part properties that you can include in the parameter value are id, snippet, cdn, and status.nnNote that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. If the request body does not specify a value for a mutable ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/playlistItems": {
			"delete": {
				"summary": "",
				"description": "Deletes a playlist item.",
				"operationId": "youtube.playlistItems.delete",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube playlist item ID for the playlist item that is being deleted. In a playlistItem resource, the id property specifies the playlist items ID.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs.",
				"operationId": "youtube.playlistItems.list",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of one or more unique playlist item IDs.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more playlistItem resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, and status.nnIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlistItem resource, the snippet property contains numerous fields, including the title, description, position, a",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "playlistId",
					"description": "The playlistId parameter specifies the unique ID of the playlist for which you want to retrieve playlist items. Note that even though this is an optional parameter, every request to retrieve playlist items must specify a value for either the id parameter or the playlistId parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoId",
					"description": "The videoId parameter specifies that the request should return only the playlist items that contain the specified video.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Adds a resource to a playlist.",
				"operationId": "youtube.playlistItems.insert",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet, contentDetails, and status.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Modifies a playlist item. For example, you could update the items position in the playlist.",
				"operationId": "youtube.playlistItems.update",
				"parameters": [{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet, contentDetails, and status.nnNote that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist item can specify a start time and",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/playlists": {
			"delete": {
				"summary": "",
				"description": "Deletes a playlist.",
				"operationId": "youtube.playlists.delete",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube playlist ID for the playlist that is being deleted. In a playlist resource, the id property specifies the playlists ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.",
				"operationId": "youtube.playlists.list",
				"parameters": [{
					"in": "query",
					"name": "channelId",
					"description": "This value indicates that the API should only return the specified channels playlists.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "hl",
					"description": "The hl parameter should be used for filter out the properties that are not in the given language. Used for the snippet part.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a playlist resource, the id property specifies the playlists YouTube playlist ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "Set this parameters value to true to instruct the API to only return playlists owned by the authenticated user.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, status, and contentDetails.nnIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Creates a playlist.",
				"operationId": "youtube.playlists.insert",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet and status.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Modifies a playlist. For example, you could change a playlists title, description, or privacy status.",
				"operationId": "youtube.playlists.update",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet and status.nnNote that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlists privacy setting is contained in the status part.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/search": {
			"get": {
				"summary": "",
				"description": "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching video, channel, and playlist resources, but you can also configure queries to only retrieve a specific type of resource.",
				"operationId": "youtube.search.list",
				"parameters": [{
					"in": "query",
					"name": "channelId",
					"description": "The channelId parameter indicates that the API response should only contain resources created by the channel",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "channelType",
					"description": "The channelType parameter lets you restrict a search to a particular type of channel.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "eventType",
					"description": "The eventType parameter restricts a search to broadcast events.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "forContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe forContentOwner parameter restricts the search to only retrieve resources owned by the content owner specified by the onBehalfOfContentOwner parameter. The user must be authenticated using a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "forDeveloper",
					"description": "The forDeveloper parameter restricts the search to only retrieve videos uploaded via the developers application or website. The API server uses the requests authorization credentials to identify the developer. Therefore, a developer can restrict results to videos uploaded through the developers own app or website but not to videos uploaded through other apps or sites.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "forMine",
					"description": "The forMine parameter restricts the search to only retrieve videos owned by the authenticated user. If you set this parameter to true, then the type parameters value must also be set to video.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "location",
					"description": "The location parameter restricts a search to videos that have a geographical location specified in their metadata. The value is a string that specifies geographic latitude/longitude coordinates e.g. (37.42307,-122.08427)",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "locationRadius",
					"description": "The locationRadius, in conjunction with the location parameter, defines a geographic area. If the geographic coordinates associated with a video fall within that area, then the video may be included in search results. This parameter value must be a floating point number followed by a measurement unit. Valid measurement units are m, km, ft, and mi. For example, valid parameter values include 1500m, 5km, 10000ft, and 0.75mi. The API does not support locationRadius parameter values larger than 1000",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "order",
					"description": "The order parameter specifies the method that will be used to order resources in the API response.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. The part names that you can include in the parameter value are id and snippet.nnIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a search result, the snippet property contains other properties that identify the results title, description, and so forth. If you set part=snippet",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "publishedAfter",
					"description": "The publishedAfter parameter indicates that the API response should only contain resources created after the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "publishedBefore",
					"description": "The publishedBefore parameter indicates that the API response should only contain resources created before the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "q",
					"description": "The q parameter specifies the query term to search for.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "regionCode",
					"description": "The regionCode parameter instructs the API to return search results for the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "relatedToVideoId",
					"description": "The relatedToVideoId parameter retrieves a list of videos that are related to the video that the parameter value identifies. The parameter value must be set to a YouTube video ID and, if you are using this parameter, the type parameter must be set to video.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "relevanceLanguage",
					"description": "The relevanceLanguage parameter instructs the API to return search results that are most relevant to the specified language. The parameter value is typically an ISO 639-1 two-letter language code. However, you should use the values zh-Hans for simplified Chinese and zh-Hant for traditional Chinese. Please note that results in other languages will still be returned if they are highly relevant to the search query term.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "safeSearch",
					"description": "The safeSearch parameter indicates whether the search results should include restricted content as well as standard content.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "topicId",
					"description": "The topicId parameter indicates that the API response should only contain resources associated with the specified topic. The value identifies a Freebase topic ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "type",
					"description": "The type parameter restricts a search query to only retrieve a particular type of resource. The value is a comma-separated list of resource types.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoCaption",
					"description": "The videoCaption parameter indicates whether the API should filter video search results based on whether they have captions.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoCategoryId",
					"description": "The videoCategoryId parameter filters video search results based on their category.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoDefinition",
					"description": "The videoDefinition parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos. HD videos are available for playback in at least 720p, though higher resolutions, like 1080p, might also be available.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoDimension",
					"description": "The videoDimension parameter lets you restrict a search to only retrieve 2D or 3D videos.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoDuration",
					"description": "The videoDuration parameter filters video search results based on their duration.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoEmbeddable",
					"description": "The videoEmbeddable parameter lets you to restrict a search to only videos that can be embedded into a webpage.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoLicense",
					"description": "The videoLicense parameter filters search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoSyndicated",
					"description": "The videoSyndicated parameter lets you to restrict a search to only videos that can be played outside youtube.com.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoType",
					"description": "The videoType parameter lets you restrict a search to a particular type of videos.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/subscriptions": {
			"delete": {
				"summary": "",
				"description": "Deletes a subscription.",
				"operationId": "youtube.subscriptions.delete",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube subscription ID for the resource that is being deleted. In a subscription resource, the id property specifies the YouTube subscription ID.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns subscription resources that match the API request criteria.",
				"operationId": "youtube.subscriptions.list",
				"parameters": [{
					"in": "query",
					"name": "channelId",
					"description": "The channelId parameter specifies a YouTube channel ID. The API will only return that channels subscriptions.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "forChannelId",
					"description": "The forChannelId parameter specifies a comma-separated list of channel IDs. The API response will then only contain subscriptions matching those channels.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of the YouTube subscription ID(s) for the resource(s) that are being retrieved. In a subscription resource, the id property specifies the YouTube subscription ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "mine",
					"description": "Set this parameters value to true to retrieve a feed of the authenticated users subscriptions.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "mySubscribers",
					"description": "Set this parameters value to true to retrieve a feed of the subscribers of the authenticated user.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "order",
					"description": "The order parameter specifies the method that will be used to sort resources in the API response.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more subscription resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.nnIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a subscription resource, the snippet property contains other properties, such as a display title for the subscription. If you",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Adds a subscription for the authenticated users channel.",
				"operationId": "youtube.subscriptions.insert",
				"parameters": [{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet and contentDetails.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/thumbnails/set": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Uploads a custom video thumbnail to YouTube and sets it for a video.",
				"operationId": "youtube.thumbnails.set",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoId",
					"description": "The videoId parameter specifies a YouTube video ID for which the custom video thumbnail is being provided.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/videoAbuseReportReasons": {
			"get": {
				"summary": "",
				"description": "Returns a list of abuse reasons that can be used for reporting abusive videos.",
				"operationId": "youtube.videoAbuseReportReasons.list",
				"parameters": [{
					"in": "query",
					"name": "hl",
					"description": "The hl parameter specifies the language that should be used for text values in the API response.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies the videoCategory resource parts that the API response will include. Supported values are id and snippet.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/videoCategories": {
			"get": {
				"summary": "",
				"description": "Returns a list of categories that can be associated with YouTube videos.",
				"operationId": "youtube.videoCategories.list",
				"parameters": [{
					"in": "query",
					"name": "hl",
					"description": "The hl parameter specifies the language that should be used for text values in the API response.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies the videoCategory resource parts that the API response will include. Supported values are id and snippet.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "regionCode",
					"description": "The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/videos": {
			"delete": {
				"summary": "",
				"description": "Deletes a YouTube video.",
				"operationId": "youtube.videos.delete",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube video ID for the resource that is being deleted. In a video resource, the id property specifies the videos ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "",
				"description": "Returns a list of videos that match the API request parameters.",
				"operationId": "youtube.videos.list",
				"parameters": [{
					"in": "query",
					"name": "chart",
					"description": "The chart parameter identifies the chart that you want to retrieve.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "debugProjectIdOverride",
					"description": "The debugProjectIdOverride parameter should be used for mimicking a request for a certain project ID",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "hl",
					"description": "The hl parameter instructs the API to return a localized version of the video details. If localized text is nor available for the requested language, the localizations object in the API response will contain the requested information in the default language instead. The parameter value is a BCP-47 language code. Your application can determine whether the requested localization was returned by checking the value of the snippet.localized.language property in the API response.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the videos ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "locale",
					"description": "DEPRECATED",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "maxResults",
					"description": "The maxResults parameter specifies the maximum number of items that should be returned in the result set.nnNote: This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "myRating",
					"description": "Set this parameters value to like or dislike to instruct the API to only return videos liked or disliked by the authenticated user.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "pageToken",
					"description": "The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.nnNote: This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, fileDetails, liveStreamingDetails, localizations, player, processingDetails, recordingDetails, statistics, status, suggestions, and topicDetails.nnIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For ex",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "regionCode",
					"description": "The regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the chart parameter. The parameter value is an ISO 3166-1 alpha-2 country code.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "videoCategoryId",
					"description": "The videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Uploads a video to YouTube and optionally sets the videos metadata.",
				"operationId": "youtube.videos.insert",
				"parameters": [{
					"in": "query",
					"name": "autoLevels",
					"description": "The autoLevels parameter indicates whether YouTube should automatically enhance the videos lighting and color.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "notifySubscribers",
					"description": "The notifySubscribers parameter indicates whether YouTube should send notification to subscribers about the inserted video.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwnerChannel",
					"description": "This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet, contentDetails, fileDetails, liveStreamingDetails, localizations, player, processingDetails, recordingDetails, statistics, status, suggestions, and topicDetails. However, not all of those parts contain properties that can be set when setting or",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "stabilize",
					"description": "The stabilize parameter indicates whether YouTube should adjust the video to remove shaky camera motions.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "",
				"description": "Updates a videos metadata.",
				"operationId": "youtube.videos.update",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "part",
					"description": "The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.nnThe part names that you can include in the parameter value are snippet, contentDetails, fileDetails, liveStreamingDetails, localizations, player, processingDetails, recordingDetails, statistics, status, suggestions, and topicDetails.nnNote that this method will override the existing values for all of the mutable pr",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/videos/getRating": {
			"get": {
				"summary": "",
				"description": "Retrieves the ratings that the authorized user gave to a list of specified videos.",
				"operationId": "youtube.videos.getRating",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) for which you are retrieving rating data. In a video resource, the id property specifies the videos ID.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/videos/rate": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Add a like or dislike rating to a video or remove a rating from a video.",
				"operationId": "youtube.videos.rate",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The id parameter specifies the YouTube video ID of the video that is being rated or having its rating removed.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "rating",
					"description": "Specifies the rating to record.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/videos/reportAbuse": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Report abuse for a video.",
				"operationId": "youtube.videos.reportAbuse",
				"parameters": [{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "Note: This parameter is intended exclusively for YouTube content partners.nnThe onBehalfOfContentOwner parameter indicates that the requests authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to ",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/watermarks/set": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Uploads a watermark image to YouTube and sets it for a channel.",
				"operationId": "youtube.watermarks.set",
				"parameters": [{
					"in": "query",
					"name": "channelId",
					"description": "The channelId parameter specifies a YouTube channel ID for which the watermark is being provided.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/watermarks/unset": {
			"parameters": {
				"summary": "",
				"description": "",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "",
				"description": "Deletes a watermark.",
				"operationId": "youtube.watermarks.unset",
				"parameters": [{
					"in": "query",
					"name": "channelId",
					"description": "The channelId parameter specifies a YouTube channel ID for which the watermark is being unset.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "onBehalfOfContentOwner",
					"description": "The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		}
	},
	"definitions": {
		"AccessPolicy": {
			"properties": {
				"allowed": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"exception": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Activity": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ActivityContentDetails": {
			"properties": []
		},
		"ActivityContentDetailsBulletin": {
			"properties": []
		},
		"ActivityContentDetailsChannelItem": {
			"properties": []
		},
		"ActivityContentDetailsComment": {
			"properties": []
		},
		"ActivityContentDetailsFavorite": {
			"properties": []
		},
		"ActivityContentDetailsLike": {
			"properties": []
		},
		"ActivityContentDetailsPlaylistItem": {
			"properties": {
				"playlistId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"playlistItemId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ActivityContentDetailsPromotedItem": {
			"properties": {
				"adTag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"clickTrackingUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"creativeViewUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"ctaType": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"customCtaButtonText": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"descriptionText": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"destinationUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"forecastingUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"impressionUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ActivityContentDetailsRecommendation": {
			"properties": {
				"reason": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ActivityContentDetailsSocial": {
			"properties": {
				"author": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"imageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"referenceUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"type": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ActivityContentDetailsSubscription": {
			"properties": []
		},
		"ActivityContentDetailsUpload": {
			"properties": {
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ActivityListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ActivitySnippet": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelTitle": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"groupId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"type": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Caption": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"CaptionListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"CaptionSnippet": {
			"properties": {
				"audioTrackType": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"failureReason": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"isAutoSynced": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"isCC": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"isDraft": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"isEasyReader": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"isLarge": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"language": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"lastUpdated": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"name": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"status": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"trackKind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"CdnSettings": {
			"properties": {
				"format": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"ingestionType": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Channel": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"localizations": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelAuditDetails": {
			"properties": {
				"communityGuidelinesGoodStanding": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"contentIdClaimsGoodStanding": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"copyrightStrikesGoodStanding": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"overallGoodStanding": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelBannerResource": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"url": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelBrandingSettings": {
			"properties": {
				"hints": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelContentDetails": {
			"properties": {
				"googlePlusUserId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"relatedPlaylists": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelContentOwnerDetails": {
			"properties": {
				"contentOwner": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"timeLinked": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelConversionPing": {
			"properties": {
				"context": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"conversionUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelConversionPings": {
			"properties": {
				"pings": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelId": {
			"properties": {
				"value": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelLocalization": {
			"properties": {
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelSection": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"localizations": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelSectionContentDetails": {
			"properties": {
				"channels": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"playlists": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelSectionListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelSectionLocalization": {
			"properties": {
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelSectionSnippet": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"defaultLanguage": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"position": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"style": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"type": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelSectionTargeting": {
			"properties": {
				"countries": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"languages": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"regions": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelSettings": {
			"properties": {
				"country": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"defaultLanguage": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"defaultTab": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"featuredChannelsTitle": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"featuredChannelsUrls": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"keywords": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"moderateComments": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"profileColor": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"showBrowseView": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"showRelatedChannels": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"trackingAnalyticsAccountId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"unsubscribedTrailer": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelSnippet": {
			"properties": {
				"country": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"defaultLanguage": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelStatistics": {
			"properties": {
				"commentCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"hiddenSubscriberCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"subscriberCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"viewCount": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelStatus": {
			"properties": {
				"isLinked": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"longUploadsStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"privacyStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ChannelTopicDetails": {
			"properties": {
				"topicIds": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Comment": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"CommentListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"CommentSnippet": {
			"properties": {
				"authorChannelUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"authorDisplayName": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"authorGoogleplusProfileUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"authorProfileImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"canRate": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"likeCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"moderationStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"parentId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"textDisplay": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"textOriginal": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"updatedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"viewerRating": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"CommentThread": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"CommentThreadListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"CommentThreadReplies": {
			"properties": {
				"comments": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"CommentThreadSnippet": {
			"properties": {
				"canReply": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"isPublic": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"totalReplyCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ContentRating": {
			"properties": {
				"acbRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"agcomRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"anatelRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bbfcRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bfvcRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bmukkRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"catvRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"catvfrRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"cbfcRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"cccRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"cceRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"chfilmRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"chvrsRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"cicfRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"cnaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"csaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"cscfRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"czfilmRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"djctqRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"djctqRatingReasons": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eefilmRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"egfilmRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eirinRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"fcbmRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"fcoRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"fmocRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"fpbRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"fskRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"grfilmRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"icaaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"ifcoRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"ilfilmRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"incaaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kfcbRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kijkwijzerRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kmrbRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"lsfRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"mccaaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"mccypRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"mdaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"medietilsynetRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"mekuRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"mibacRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"mocRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"moctwRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"mpaaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"mtrcbRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nbcRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nbcplRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nfrcRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nfvcbRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nkclvRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"oflcRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"pefilmRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"rcnofRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"resorteviolenciaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"rtcRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"rteRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"russiaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"skfilmRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"smaisRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"smsaRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"tvpgRating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"ytRating": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"GeoPoint": {
			"properties": {
				"altitude": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"latitude": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"longitude": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"GuideCategory": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"GuideCategoryListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"GuideCategorySnippet": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"I18nLanguage": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"I18nLanguageListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"I18nLanguageSnippet": {
			"properties": {
				"hl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"name": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"I18nRegion": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"I18nRegionListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"I18nRegionSnippet": {
			"properties": {
				"gl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"name": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ImageSettings": {
			"properties": {
				"bannerExternalUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerMobileExtraHdImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerMobileHdImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerMobileImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerMobileLowImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerMobileMediumHdImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerTabletExtraHdImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerTabletHdImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerTabletImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerTabletLowImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerTvHighImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerTvImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerTvLowImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bannerTvMediumImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"trackingImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"watchIconImageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"IngestionInfo": {
			"properties": {
				"backupIngestionAddress": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"ingestionAddress": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"streamName": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"InvideoBranding": {
			"properties": {
				"imageBytes": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"imageUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"targetChannelId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"InvideoPosition": {
			"properties": {
				"cornerPosition": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"type": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"InvideoPromotion": {
			"properties": {
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"useSmartTiming": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"InvideoTiming": {
			"properties": {
				"durationMs": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"offsetMs": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"type": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LanguageTag": {
			"properties": {
				"value": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveBroadcast": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveBroadcastContentDetails": {
			"properties": {
				"boundStreamId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"enableClosedCaptions": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"enableContentEncryption": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"enableDvr": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"enableEmbed": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"recordFromStart": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"startWithSlate": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveBroadcastListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveBroadcastSnippet": {
			"properties": {
				"actualEndTime": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"actualStartTime": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"isDefaultBroadcast": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"scheduledEndTime": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"scheduledStartTime": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveBroadcastStatus": {
			"properties": {
				"lifeCycleStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"liveBroadcastPriority": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"privacyStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"recordingStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveStream": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveStreamConfigurationIssue": {
			"properties": {
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"reason": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"severity": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"type": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveStreamContentDetails": {
			"properties": {
				"closedCaptionsIngestionUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"isReusable": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveStreamHealthStatus": {
			"properties": {
				"configurationIssues": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"lastUpdateTimeS": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"status": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveStreamListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveStreamSnippet": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"isDefaultStream": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LiveStreamStatus": {
			"properties": {
				"streamStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LocalizedProperty": {
			"properties": {
				"default": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"localized": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"LocalizedString": {
			"properties": {
				"language": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"value": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"MonitorStreamInfo": {
			"properties": {
				"broadcastStreamDelayMs": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"embedHtml": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"enableMonitorStream": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PageInfo": {
			"properties": {
				"resultsPerPage": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"totalResults": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Playlist": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"localizations": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistContentDetails": {
			"properties": {
				"itemCount": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistItem": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistItemContentDetails": {
			"properties": {
				"endAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"note": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"startAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistItemListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistItemSnippet": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelTitle": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"playlistId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"position": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistItemStatus": {
			"properties": {
				"privacyStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistLocalization": {
			"properties": {
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistPlayer": {
			"properties": {
				"embedHtml": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistSnippet": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelTitle": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"defaultLanguage": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"tags": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PlaylistStatus": {
			"properties": {
				"privacyStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PromotedItem": {
			"properties": {
				"customMessage": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"promotedByContentOwner": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PromotedItemId": {
			"properties": {
				"recentlyUploadedBy": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"type": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"websiteUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"PropertyValue": {
			"properties": {
				"property": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"value": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ResourceId": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"playlistId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"SearchListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"SearchResult": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"SearchResultSnippet": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelTitle": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"liveBroadcastContent": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Subscription": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"SubscriptionContentDetails": {
			"properties": {
				"activityType": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"newItemCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"totalItemCount": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"SubscriptionListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"SubscriptionSnippet": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelTitle": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"SubscriptionSubscriberSnippet": {
			"properties": {
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Thumbnail": {
			"properties": {
				"height": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"url": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"width": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"ThumbnailDetails": {
			"properties": []
		},
		"ThumbnailSetResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"Video": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"localizations": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoAbuseReport": {
			"properties": {
				"comments": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"language": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"reasonId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"secondaryReasonId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoAbuseReportReason": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoAbuseReportReasonListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoAbuseReportReasonSnippet": {
			"properties": {
				"label": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"secondaryReasons": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoAbuseReportSecondaryReason": {
			"properties": {
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"label": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoAgeGating": {
			"properties": {
				"alcoholContent": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"restricted": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoGameRating": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoCategory": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"id": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoCategoryListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoCategorySnippet": {
			"properties": {
				"assignable": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoContentDetails": {
			"properties": {
				"caption": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"definition": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"dimension": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"duration": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"licensedContent": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoContentDetailsRegionRestriction": {
			"properties": {
				"allowed": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"blocked": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoConversionPing": {
			"properties": {
				"context": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"conversionUrl": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoConversionPings": {
			"properties": {
				"pings": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoFileDetails": {
			"properties": {
				"audioStreams": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bitrateBps": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"container": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"creationTime": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"durationMs": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"fileName": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"fileSize": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"fileType": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoStreams": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoFileDetailsAudioStream": {
			"properties": {
				"bitrateBps": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"codec": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"vendor": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoFileDetailsVideoStream": {
			"properties": {
				"aspectRatio": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"bitrateBps": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"codec": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"frameRateFps": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"heightPixels": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"rotation": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"vendor": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"widthPixels": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoGetRatingResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoListResponse": {
			"properties": {
				"etag": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"eventId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"items": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"kind": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"nextPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"prevPageToken": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"visitorId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoLiveStreamingDetails": {
			"properties": {
				"actualEndTime": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"actualStartTime": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"concurrentViewers": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"scheduledEndTime": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"scheduledStartTime": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoLocalization": {
			"properties": {
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoMonetizationDetails": {
			"properties": []
		},
		"VideoPlayer": {
			"properties": {
				"embedHtml": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoProcessingDetails": {
			"properties": {
				"editorSuggestionsAvailability": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"fileDetailsAvailability": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"processingFailureReason": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"processingIssuesAvailability": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"processingStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"tagSuggestionsAvailability": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"thumbnailsAvailability": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoProcessingDetailsProcessingProgress": {
			"properties": {
				"partsProcessed": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"partsTotal": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"timeLeftMs": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoProjectDetails": {
			"properties": {
				"tags": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoRating": {
			"properties": {
				"rating": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"videoId": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoRecordingDetails": {
			"properties": {
				"locationDescription": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"recordingDate": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoSnippet": {
			"properties": {
				"categoryId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"channelTitle": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"defaultLanguage": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"description": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"liveBroadcastContent": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishedAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"tags": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"title": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoStatistics": {
			"properties": {
				"commentCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"dislikeCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"favoriteCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"likeCount": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"viewCount": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoStatus": {
			"properties": {
				"embeddable": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"failureReason": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"license": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"privacyStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publicStatsViewable": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"publishAt": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"rejectionReason": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"uploadStatus": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoSuggestions": {
			"properties": {
				"editorSuggestions": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"processingErrors": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"processingHints": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"processingWarnings": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"tagSuggestions": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoSuggestionsTagSuggestion": {
			"properties": {
				"categoryRestricts": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"tag": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"VideoTopicDetails": {
			"properties": {
				"relevantTopicIds": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"topicIds": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		},
		"WatchSettings": {
			"properties": {
				"backgroundColor": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"featuredPlaylistId": {
					"description": "This is a default description.",
					"type": "parameters"
				},
				"textColor": {
					"description": "This is a default description.",
					"type": "parameters"
				}
			}
		}
	}
}