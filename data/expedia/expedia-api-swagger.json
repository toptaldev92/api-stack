{
	"swagger": "2.0",
	"info": {
		"title": "Expedia API",
		"description": null,
		"termsOfService": null,
		"version": null
	},
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/api/flight/airportDropDown": {
			"get": {
				"summary": "Mobile API Flight Airport Dropdown Operation",
				"description": "Mobile API Flight Airport Dropdown Operation",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/flight/checkout": {
			"post": {
				"summary": "Checkout a previously created flight trip, requiring payment fields, the trip id, and the passenger fields",
				"description": "Checkout a previously created flight trip, requiring payment fields, the trip id, and the passenger fields",
				"operationId": "",
				"parameters": [
					{
						"name": "associatedFlightPassengers[0].birthDate",
						"in": "formData",
						"description": "Birth date of the associated flight passenger fields."
					},
					{
						"name": "associatedFlightPassengers[0].gender",
						"in": "formData",
						"description": "Gender of the associated flight passenger fields."
					},
					{
						"name": "associatedFlightPassengers[0].passengerCategory",
						"in": "formData",
						"description": ":Passenger category of the associated flight passenger fields."
					},
					{
						"name": "associatedFlightPassengers[0].passportCountryCode",
						"in": "formData",
						"description": "Passport country code of the associated flight passenger fields."
					},
					{
						"name": "associatedFlightPassengers[0].seatPreference",
						"in": "formData",
						"description": "Seat preference of the associated flight passenger fields."
					},
					{
						"name": "associatedFlightPassengers[0].specialAssistanceOption",
						"in": "formData",
						"description": "Special assistance option for the associated flight passenger fields."
					},
					{
						"name": "associatedFlightPassengers[0].title",
						"in": "formData",
						"description": "Title of the associated flight passenger fields."
					},
					{
						"name": "associatedFlightPassengers[0].TSARedressNumber",
						"in": "formData",
						"description": "TSA redress number of the associated flight passenger fields."
					},
					{
						"name": "birthDate",
						"in": "formData",
						"description": "Birth date of the associated flight passenger fields."
					},
					{
						"name": "city",
						"in": "formData",
						"description": "The city of the travelers billing address."
					},
					{
						"name": "country",
						"in": "formData",
						"description": "The 3 letter country code of the travelers billing address."
					},
					{
						"name": "creditCardNumber",
						"in": "formData",
						"description": "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout."
					},
					{
						"name": "cvv",
						"in": "formData",
						"description": "The CVV of the travelers credit card used for this booking."
					},
					{
						"name": "doIThinkImSignedIn",
						"in": "formData",
						"description": "As a client I am checking-out with the assumption that I am signed in"
					},
					{
						"name": "email",
						"in": "formData",
						"description": "Email address of the main flight passenger"
					},
					{
						"name": "expectedCardFee",
						"in": "formData",
						"description": "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision."
					},
					{
						"name": "expectedCardFeeCurrencyCode",
						"in": "formData",
						"description": "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done."
					},
					{
						"name": "expectedFareCurrencyCode",
						"in": "formData",
						"description": "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create."
					},
					{
						"name": "expectedTotalFare",
						"in": "formData",
						"description": "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create."
					},
					{
						"name": "expediaEmailOptIn",
						"in": "formData",
						"description": "If the main flight passenger wishes to opt out for Expedia emails or not"
					},
					{
						"name": "expirationDateMonth",
						"in": "formData",
						"description": "The expiration date month of the credit card used for this booking. This field is required guest for checkout."
					},
					{
						"name": "expirationDateYear",
						"in": "formData",
						"description": "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout."
					},
					{
						"name": "firstName",
						"in": "formData",
						"description": "The first name of the traveler"
					},
					{
						"name": "gender",
						"in": "formData",
						"description": "Gender of the associated flight passenger fields."
					},
					{
						"name": "lastName",
						"in": "formData",
						"description": "The last name of the traveler."
					},
					{
						"name": "mainFlightPassenger[0].email",
						"in": "formData",
						"description": "Email address of the main flight passenger"
					},
					{
						"name": "mainFlightPassenger[0].expediaEmailOptIn",
						"in": "formData",
						"description": "If the main flight passenger wishes to opt out for Expedia emails or not"
					},
					{
						"name": "mainFlightPassenger[0].password",
						"in": "formData",
						"description": "Password of the main flight passenger"
					},
					{
						"name": "mainFlightPassenger[0].phone",
						"in": "formData",
						"description": "Phone number of the main flight passenger"
					},
					{
						"name": "mainFlightPassenger[0].phoneCountryCode",
						"in": "formData",
						"description": "Country code of the phone of the main flight passenger"
					},
					{
						"name": "middleName",
						"in": "formData",
						"description": "The middle name of the traveler. "
					},
					{
						"name": "nameOnCard",
						"in": "formData",
						"description": "The card holders name"
					},
					{
						"name": "omniturePartnerId",
						"in": "formData",
						"description": "Omniture partner identification string"
					},
					{
						"name": "passengerCategory",
						"in": "formData",
						"description": ":Passenger category of the associated flight passenger fields."
					},
					{
						"name": "passportCountryCode",
						"in": "formData",
						"description": "Passport country code of the associated flight passenger fields."
					},
					{
						"name": "password",
						"in": "formData",
						"description": "Password of the main flight passenger"
					},
					{
						"name": "phone",
						"in": "formData",
						"description": "Phone number of the main flight passenger"
					},
					{
						"name": "phoneCountryCode",
						"in": "formData",
						"description": "Country code of the phone of the main flight passenger"
					},
					{
						"name": "postalCode",
						"in": "formData",
						"description": "The postal code of the travelers billing address. Required only postalCode only checkout."
					},
					{
						"name": "prettyPrint",
						"in": "formData",
						"description": "If true, return JSON with tabs, spaces and newlines to be human readable"
					},
					{
						"name": "seatPreference",
						"in": "formData",
						"description": "Seat preference of the associated flight passenger fields."
					},
					{
						"name": "specialAssistanceOption",
						"in": "formData",
						"description": "Special assistance option for the associated flight passenger fields."
					},
					{
						"name": "state",
						"in": "formData",
						"description": "The state (or province) of the travelers billing address."
					},
					{
						"name": "storeCreditCardInUserProfile",
						"in": "formData",
						"description": "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in."
					},
					{
						"name": "storedCreditCardId",
						"in": "formData",
						"description": "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request."
					},
					{
						"name": "streetAddress",
						"in": "formData",
						"description": "The street part of the credit card owners billing address.."
					},
					{
						"name": "streetAddress2",
						"in": "formData",
						"description": "Apartment or suite number of the travelers billing address."
					},
					{
						"name": "suppressFinalBooking",
						"in": "formData",
						"description": "If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true"
					},
					{
						"name": "tealeafTransactionId",
						"in": "formData",
						"description": "The unique transaction ID used in TeaLeaf PSR tracking"
					},
					{
						"name": "title",
						"in": "formData",
						"description": "Title of the associated flight passenger fields."
					},
					{
						"name": "tripId",
						"in": "formData",
						"description": "The trip ID of an existing trip, from /api/flight/trip/create."
					},
					{
						"name": "TSARedressNumber",
						"in": "formData",
						"description": "TSA redress number of the associated flight passenger fields."
					},
					{
						"name": "validateWithChildren",
						"in": "formData",
						"description": "Set this flag to true to enable child validation logic on the server. If you wish to book with child passengers then you must set this flag to true. (default: false)"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/flight/details": {
			"get": {
				"summary": "Mobile API Flight Details Operation",
				"description": "Mobile API Flight Details Operation",
				"operationId": "",
				"parameters": [
					{
						"name": "arrivalAirport",
						"in": "query",
						"description": "The three letter airport code for where the customer is going."
					},
					{
						"name": "childTravelerAge",
						"in": "query",
						"description": "childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year)."
					},
					{
						"name": "departureAirport",
						"in": "query",
						"description": "The three letter airport code for where the customer is leaving from."
					},
					{
						"name": "departureDate",
						"in": "query",
						"description": "Date the customer wants to leave for their flight on, in ISO format."
					},
					{
						"name": "infantSeatingInLap",
						"in": "query",
						"description": "Set to true if infant(s) are without a reserved seat (in an adults lap).(Default: false - Infant(s) in a reserved seat)"
					},
					{
						"name": "numberOfAdultTravelers",
						"in": "query",
						"description": "Number of Adult Travelers (Default: 1)"
					},
					{
						"name": "productKey",
						"in": "query",
						"description": "A productKey, obtained from a call to flight search, within the past 20 minutes. Required. If the price has changed since the key was issued, a price change error will be thrown (eventually; not implemented yet). If the key has expired, this will (eventually, not implemented yet) return product key expired."
					},
					{
						"name": "returnDate",
						"in": "query",
						"description": "Date the customer wants to return on. If present indicates a round trip search. If not supplied, then its a one-way search."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/flight/image": {
			"get": {
				"summary": "Mobile API Flight Image Operation",
				"description": "Mobile API Flight Image Operation",
				"operationId": "",
				"parameters": [
					{
						"name": "destinationCode",
						"in": "query",
						"description": "The three letter airport code or metro code of the destination. "
					},
					{
						"name": "imageHeight",
						"in": "query",
						"description": "Requested height of the image."
					},
					{
						"name": "imageWidth",
						"in": "query",
						"description": "Requested width of the image."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/flight/search": {
			"get": {
				"summary": "Mobile API Flights",
				"description": "Mobile API Flights",
				"operationId": "",
				"parameters": [
					{
						"name": "arrivalAirport",
						"in": "query",
						"description": "The three letter airport code to where the customer is going."
					},
					{
						"name": "childTravelerAge",
						"in": "query",
						"description": "childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be flying. Valid values are 0-17 (0 for an infant under the age of one year)."
					},
					{
						"name": "correlationId",
						"in": "query",
						"description": "Optional parameter to define a correlation between a hotel search and a flight search"
					},
					{
						"name": "departureAirport",
						"in": "query",
						"description": "The three letter airport code for where the customer is leaving from."
					},
					{
						"name": "departureDate",
						"in": "query",
						"description": "Date the customer wants to leave for their flight on, in ISO format."
					},
					{
						"name": "infantSeatingInLap",
						"in": "query",
						"description": "Set to true if infant(s) are without a reserved seat (in an adults lap).(Default: false - Infant(s) in a reserved seat)"
					},
					{
						"name": "lccAndMerchantFareCheckoutAllowed",
						"in": "query",
						"description": "flag to indicate whether lcc and merchant fares should be returned in search response"
					},
					{
						"name": "maxOfferCount",
						"in": "query",
						"description": "Maximum number of offers to return. (Default: 111, Max: 2000)"
					},
					{
						"name": "numberOfAdultTravelers",
						"in": "query",
						"description": "Number of Adult Travelers (Default: 1)"
					},
					{
						"name": "prettyPrint",
						"in": "query",
						"description": "Controls JSON response formatting. When set to true, its human-readable."
					},
					{
						"name": "returnDate",
						"in": "query",
						"description": "Date the customer wants to return on. If present indicates a round trip search. If not supplied, then its a one-way search."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/flight/trip/create": {
			"post": {
				"summary": "Mobile API Flights Create Trip Operation",
				"description": "Mobile API Flights Create Trip Operation",
				"operationId": "",
				"parameters": [
					{
						"name": "mobileShoppingKey",
						"in": "formData",
						"description": "The mobile shopping key we are going to create a trip for. The productKey or mobileShoppingKey is required."
					},
					{
						"name": "productKey",
						"in": "formData",
						"description": "The product key, obtained from /api/flight/search, we are going to create a trip for. The productKey or mobileShoppingKey is required."
					},
					{
						"name": "qualifyAirAttach",
						"in": "formData",
						"description": "Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different."
					},
					{
						"name": "tripTitle",
						"in": "formData",
						"description": "The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9- #"
					},
					{
						"name": "withInsurance",
						"in": "formData",
						"description": "Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/m/trip/coupon": {
			"post": {
				"summary": "Mobile API Packages Apply Coupon",
				"description": "Mobile API Packages Apply Coupon",
				"operationId": "",
				"parameters": [
					{
						"name": "coupon.code",
						"in": "formData",
						"description": "Coupon Code"
					},
					{
						"name": "coupon.name",
						"in": "formData",
						"description": "Coupon Name"
					},
					{
						"name": "tripId",
						"in": "formData",
						"description": "The tripId we are going to apply the coupon to."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/m/trip/remove/coupon": {
			"post": {
				"summary": "Mobile API Packages Remove Coupon",
				"description": "Mobile API Packages Remove Coupon",
				"operationId": "",
				"parameters": [
					{
						"name": "tripId",
						"in": "formData",
						"description": "The tripId we are going to apply the coupon to."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/mobile/image": {
			"get": {
				"summary": "Mobile API Flight Mobile Image Operation",
				"description": "Mobile API Flight Mobile Image Operation",
				"operationId": "",
				"parameters": [
					{
						"name": "imageCode",
						"in": "query",
						"description": "image primary key, for example CAR:ECONOMY ACTIVITY:DISNEY DESTINATION:JFK DESTINATIONMOBILEWEB:JFK CARMOBILEWEB:MINI"
					},
					{
						"name": "imageHeight",
						"in": "query",
						"description": "Requested height of the image."
					},
					{
						"name": "imageType",
						"in": "query",
						"description": "type of image. examples DESTINATION DESTINATIONMOBILEWEB CAR CARMOBILEWEB ACTIVITY"
					},
					{
						"name": "imageWidth",
						"in": "query",
						"description": "Requested width of the image."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/packages/checkout": {
			"post": {
				"summary": "Mobile API Packages Checkout",
				"description": "Mobile API Packages Checkout",
				"operationId": "",
				"parameters": [
					{
						"name": "city",
						"in": "formData",
						"description": "The city of the travelers billing address."
					},
					{
						"name": "country",
						"in": "formData",
						"description": "The 3 letter country code of the travelers billing address."
					},
					{
						"name": "creditCardNumber",
						"in": "formData",
						"description": "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout."
					},
					{
						"name": "cvv",
						"in": "formData",
						"description": "The CVV of the travelers credit card used for this booking."
					},
					{
						"name": "doIThinkImSignedIn",
						"in": "formData",
						"description": "As a client I am checking-out with the assumption that I am signed in"
					},
					{
						"name": "expectedCardFee",
						"in": "formData",
						"description": "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision."
					},
					{
						"name": "expectedCardFeeCurrencyCode",
						"in": "formData",
						"description": "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done."
					},
					{
						"name": "expectedFareCurrencyCode",
						"in": "formData",
						"description": "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/packages/createTrip."
					},
					{
						"name": "expectedTotalFare",
						"in": "formData",
						"description": "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/packages/createTrip."
					},
					{
						"name": "expirationDateMonth",
						"in": "formData",
						"description": "The expiration date month of the credit card used for this booking. This field is required guest for checkout."
					},
					{
						"name": "expirationDateYear",
						"in": "formData",
						"description": "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout."
					},
					{
						"name": "flight[0].associatedFlightPassengers[0].birthDate",
						"in": "formData",
						"description": "Birth date of the associated flight passenger fields."
					},
					{
						"name": "flight[0].associatedFlightPassengers[0].gender",
						"in": "formData",
						"description": "Gender of the associated flight passenger fields."
					},
					{
						"name": "flight[0].associatedFlightPassengers[0].passengerCategory",
						"in": "formData",
						"description": ":Passenger category of the associated flight passenger fields."
					},
					{
						"name": "flight[0].associatedFlightPassengers[0].passportCountryCode",
						"in": "formData",
						"description": "Passport country code of the associated flight passenger fields."
					},
					{
						"name": "flight[0].associatedFlightPassengers[0].seatPreference",
						"in": "formData",
						"description": "Seat preference of the associated flight passenger fields."
					},
					{
						"name": "flight[0].associatedFlightPassengers[0].specialAssistanceOption",
						"in": "formData",
						"description": "Special assistance option for the associated flight passenger fields."
					},
					{
						"name": "flight[0].associatedFlightPassengers[0].title",
						"in": "formData",
						"description": "Title of the associated flight passenger fields."
					},
					{
						"name": "flight[0].associatedFlightPassengers[0].TSARedressNumber",
						"in": "formData",
						"description": "TSA redress number of the associated flight passenger fields."
					},
					{
						"name": "flight[0].mainFlightPassenger[0].email",
						"in": "formData",
						"description": "Email address of the main flight passenger"
					},
					{
						"name": "flight[0].mainFlightPassenger[0].expediaEmailOptIn",
						"in": "formData",
						"description": "If the main flight passenger wishes to opt out for Expedia emails or not"
					},
					{
						"name": "flight[0].mainFlightPassenger[0].password",
						"in": "formData",
						"description": "Password of the main flight passenger"
					},
					{
						"name": "flight[0].mainFlightPassenger[0].phone",
						"in": "formData",
						"description": "Phone number of the main flight passenger"
					},
					{
						"name": "flight[0].mainFlightPassenger[0].phoneCountryCode",
						"in": "formData",
						"description": "Country code of the phone of the main flight passenger"
					},
					{
						"name": "hotel[0].bedTypeId",
						"in": "formData",
						"description": "Indicates the selected bed Type. Defaults to the first available bed type of the hotel offer."
					},
					{
						"name": "hotel[0].primaryContactFullName",
						"in": "formData",
						"description": "Full name of the person who will be checking in. This person must be 21 or older."
					},
					{
						"name": "nameOnCard",
						"in": "formData",
						"description": "The card holders name"
					},
					{
						"name": "omniturePartnerId",
						"in": "formData",
						"description": "Omniture partner identification string"
					},
					{
						"name": "postalCode",
						"in": "formData",
						"description": "The postal code of the travelers billing address. Required only postalCode only checkout."
					},
					{
						"name": "state",
						"in": "formData",
						"description": "The state (or province) of the travelers billing address."
					},
					{
						"name": "storeCreditCardInUserProfile",
						"in": "formData",
						"description": "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in."
					},
					{
						"name": "storedCreditCardId",
						"in": "formData",
						"description": "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request."
					},
					{
						"name": "streetAddress",
						"in": "formData",
						"description": "The street part of the credit card owners billing address."
					},
					{
						"name": "streetAddress2",
						"in": "formData",
						"description": "Apartment or suite number of the travelers billing address."
					},
					{
						"name": "tealeafTransactionId",
						"in": "formData",
						"description": "The unique transaction ID used in TeaLeaf PSR tracking"
					},
					{
						"name": "tripId",
						"in": "formData",
						"description": "The trip ID of an existing trip, from /api/packages/createTrip."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/packages/createTrip": {
			"post": {
				"summary": "Mobile API Packages Create Trip operation",
				"description": "Mobile API Packages Create Trip operation",
				"operationId": "",
				"parameters": [
					{
						"name": "destinationId",
						"in": "formData",
						"description": "stubbed"
					},
					{
						"name": "productKey",
						"in": "formData",
						"description": "The product ID (piid) of the package you would like to get hotel offers for. It is obtained by calling /api/packages/hotelOffers"
					},
					{
						"name": "roomOccupants[0].childGuestAge",
						"in": "formData",
						"description": "represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years"
					},
					{
						"name": "roomOccupants[0].infantsInSeat",
						"in": "formData",
						"description": "Any infants in seat."
					},
					{
						"name": "roomOccupants[0].numberOfAdultGuests",
						"in": "formData",
						"description": "Number of adults staying in this room (default: 1)"
					},
					{
						"name": "tripName",
						"in": "formData",
						"description": "stubbed"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/packages/hotelOffers": {
			"get": {
				"summary": "Mobile API Packages",
				"description": "Mobile API Packages",
				"operationId": "",
				"parameters": [
					{
						"name": "checkInDate",
						"in": "query",
						"description": "Date the traveler will be checking in to their hotel"
					},
					{
						"name": "checkOutDate",
						"in": "query",
						"description": "Date the traveler will be checking out of their hotel"
					},
					{
						"name": "childTravelerAge",
						"in": "query",
						"description": "childTravelerAge represents the age of a single child traveler. You are required to specify the age of all child travelers. That means you must specify this parameter for each child that will be traveling. Valid values are 0-17 (0 for an infant under the age of one year)."
					},
					{
						"name": "infantSeatingInLap",
						"in": "query",
						"description": "Set to true if infant(s) are without a reserved seat (in an adults lap).(Default: false - Infant(s) in a reserved seat)"
					},
					{
						"name": "numberOfAdultTravelers",
						"in": "query",
						"description": "Number of Adult Travelers (Default: 1)"
					},
					{
						"name": "productKey",
						"in": "query",
						"description": "The product ID (piid) of the package you would like to get hotel offers for."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/trips": {
			"get": {
				"summary": "Mobile API Trips",
				"description": "Mobile API Trips",
				"operationId": "",
				"parameters": [
					{
						"name": "filterBookingStatus",
						"in": "query",
						"description": "An optional parameter to filter by booking status. Note: You can specify this parameter more than once."
					},
					{
						"name": "filterLineOfBusiness",
						"in": "query",
						"description": "An optional parameters to filter by line of business. Note: You can specify this parameter more than once."
					},
					{
						"name": "filterTimePeriod",
						"in": "query",
						"description": "An optional parameter to filter by time period. Note: You can specify this parameter more than once."
					},
					{
						"name": "getCachedDetails",
						"in": "query",
						"description": "Optionally get full details for the first N trips."
					},
					{
						"name": "sort",
						"in": "query",
						"description": "An optional parameter to sort by date."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/trips/{tripId}": {
			"get": {
				"summary": "Mobile API Trips",
				"description": "Mobile API Trips",
				"operationId": "",
				"parameters": [
					{
						"name": "currencyCode",
						"in": "query",
						"description": "Currency parameter"
					},
					{
						"name": "decimalPlaceCount",
						"in": "query",
						"description": "Decimal place count for the expected amount."
					},
					{
						"name": "decorator",
						"in": "query",
						"description": "Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated."
					},
					{
						"name": "email",
						"in": "query",
						"description": "To pull a guest itinerary specify the email address associated with the trip."
					},
					{
						"name": "expectedAmount",
						"in": "query",
						"description": "Expected Amount during car cancellation."
					},
					{
						"name": "tripId",
						"in": "path",
						"description": "The trip ID"
					},
					{
						"name": "useCache",
						"in": "query",
						"description": "An optional flag to make a cached read trip call."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/trips/{tripId}/updateTripNameDescription": {
			"post": {
				"summary": "Mobile API Trips update trip name and description operation",
				"description": "Mobile API Trips update trip name and description operation",
				"operationId": "",
				"parameters": [
					{
						"name": "tripId",
						"in": "path",
						"description": "Trip ID"
					},
					{
						"name": "tripname",
						"in": "formData",
						"description": "The name of the trip"
					},
					{
						"name": "tripnote",
						"in": "formData",
						"description": "The comments of the trip"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/user/associateUserToTrip": {
			"post": {
				"summary": "Mobile API User Associate To Trip",
				"description": "Mobile API User Associate To Trip",
				"operationId": "",
				"parameters": [
					{
						"name": "foo",
						"in": "formData",
						"description": "stubbed"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/user/create": {
			"post": {
				"summary": "Mobile API User Create",
				"description": "Mobile API User Create",
				"operationId": "",
				"parameters": [
					{
						"name": "email",
						"in": "formData",
						"description": "Users email address"
					},
					{
						"name": "expediaEmailOptIn",
						"in": "formData",
						"description": "Whether to opt-in the users email to travel deals"
					},
					{
						"name": "firstName",
						"in": "formData",
						"description": "Users first name"
					},
					{
						"name": "lastName",
						"in": "formData",
						"description": "Users last name"
					},
					{
						"name": "middleName",
						"in": "formData",
						"description": "Users middle name"
					},
					{
						"name": "password",
						"in": "formData",
						"description": "Users password"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/user/profile": {
			"get": {
				"summary": "Mobile API User Profile",
				"description": "Mobile API User Profile",
				"operationId": "",
				"parameters": [
					{
						"name": "profileTypes",
						"in": "query",
						"description": "This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL or FLIGHT."
					},
					{
						"name": "retrieveCoupons",
						"in": "query",
						"description": "Whether to include user coupons in the response."
					},
					{
						"name": "tuid",
						"in": "query",
						"description": "The tuid of the user/account whose profile you would like."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/user/sign-in": {
			"post": {
				"summary": "Mobile API User Sign-In",
				"description": "Mobile API User Sign-In",
				"operationId": "",
				"parameters": [
					{
						"name": "email",
						"in": "formData",
						"description": "Email Address. Used at the time of User creation in /api/user/create"
					},
					{
						"name": "firstTimeSigin",
						"in": "formData",
						"description": "Boolean to indicate if this is a first time sign-in."
					},
					{
						"name": "guestLoginWithItin",
						"in": "formData",
						"description": "When logging in with an Itin Number and Email set this field to True. Default value is false."
					},
					{
						"name": "includeFullPaymentProfile",
						"in": "formData",
						"description": ""
					},
					{
						"name": "itinNumber",
						"in": "formData",
						"description": "The Itinerary Number can be used instead of a password to authenticate the user."
					},
					{
						"name": "password",
						"in": "formData",
						"description": "User Password. Used at the time of User creation in /api/user/create"
					},
					{
						"name": "profileOnly",
						"in": "formData",
						"description": "If true, dont provide username/password fields and just re-retrieve the currently signed on users profile. If this is false or not provided, force re-authentication of the user."
					},
					{
						"name": "profileTypes",
						"in": "formData",
						"description": "This is a comma-separated list of profile types to retrieve when the login is processed. E.g., profileType=HOTEL,FLIGHT. Options are currently HOTEL, FLIGHT, or NONE. If NONE is the type, it should be the only one in the list."
					},
					{
						"name": "retrieveCoupons",
						"in": "formData",
						"description": "Whether to include user coupons in the response."
					},
					{
						"name": "staySignedIn",
						"in": "formData",
						"description": "Sign Me In checkbox"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/user/update-traveler": {
			"post": {
				"summary": "Mobile API User Update Traveler",
				"description": "Mobile API User Update Traveler",
				"operationId": "",
				"parameters": [
					{
						"name": "birthDate",
						"in": "formData",
						"description": "TSA required field; passengers birth date."
					},
					{
						"name": "email",
						"in": "formData",
						"description": "This passengers email address. Required, although ignored for logged in users, as it will use their email on file instead."
					},
					{
						"name": "expediaEmailOptIn",
						"in": "formData",
						"description": "Whether to opt-in the users email to travel deals."
					},
					{
						"name": "firstName",
						"in": "formData",
						"description": "The first name of the traveler. 2 character min."
					},
					{
						"name": "gender",
						"in": "formData",
						"description": "TSA required field, MALE or FEMALE."
					},
					{
						"name": "lastName",
						"in": "formData",
						"description": "The last name of the traveler."
					},
					{
						"name": "middleName",
						"in": "formData",
						"description": "The middle name of the traveler."
					},
					{
						"name": "passengerCategory",
						"in": "formData",
						"description": "The passengers category. (Default ADULT)"
					},
					{
						"name": "passportCountryCode",
						"in": "formData",
						"description": "Passport country, UPPERCASE three letter country code. Only required for international travel."
					},
					{
						"name": "password",
						"in": "formData",
						"description": "The password provided by the Expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request."
					},
					{
						"name": "phone",
						"in": "formData",
						"description": "The phone number of the traveler. Only the numeric values in this field are used. E.g., 555-1234 is treated internally as 5551234."
					},
					{
						"name": "phoneCountryCode",
						"in": "formData",
						"description": "The country code of the phone number of the traveler. Only the numeric values in this field are used. E.g., +44 is treated internally as 44."
					},
					{
						"name": "seatPreference",
						"in": "formData",
						"description": "Passengers seat preference. Options are WINDOW, AISLE, or UNASSIGNED (default)"
					},
					{
						"name": "specialAssistanceOption",
						"in": "formData",
						"description": "Special assistance choice. This is one value, the same string returned from the profile call. Defaults to NONE if not provided."
					},
					{
						"name": "title",
						"in": "formData",
						"description": "Title of passenger"
					},
					{
						"name": "TSARedressNumber",
						"in": "formData",
						"description": "Passengers TSA redress number, which is, in theory a 7 digit number."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/users/{userId}/trips": {
			"get": {
				"summary": "(Internal Only) Returns array of trips for passed userId",
				"description": "(Internal Only) Returns array of trips for passed userId",
				"operationId": "",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "User ID"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/api/users/{userId}/trips/{tripId}": {
			"get": {
				"summary": "(Internal Only) Retrieve trip (tripId) for given customer (userId)",
				"description": "(Internal Only) Retrieve trip (tripId) for given customer (userId)",
				"operationId": "",
				"parameters": [
					{
						"name": "currencyCode",
						"in": "query",
						"description": "currency paramater"
					},
					{
						"name": "decimalPlaceCount",
						"in": "query",
						"description": "Decimal place count for the expected amount"
					},
					{
						"name": "decorator",
						"in": "query",
						"description": "Nullifies complex elements of a Trip with exception of Price related elements and their parents. This is an expensive approach because data is stripped after it has been retrieved or calculated"
					},
					{
						"name": "email",
						"in": "query",
						"description": "To pull a guest itinerary specify the email address associated with the trip."
					},
					{
						"name": "expectedAmount",
						"in": "query",
						"description": "Expected Amount during car cancellation"
					},
					{
						"name": "tripId",
						"in": "path",
						"description": "Trip ID"
					},
					{
						"name": "useCache",
						"in": "query",
						"description": "An optional flag to make a cached read trip call."
					},
					{
						"name": "userId",
						"in": "path",
						"description": "User ID"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/cars/create": {
			"post": {
				"summary": "Mobile API Cars Create Trip",
				"description": "Mobile API Cars Create Trip",
				"operationId": "",
				"parameters": [
					{
						"name": "expectedTotalFare",
						"in": "formData",
						"description": "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros,no thousands separators, and 2 decimal places of precision."
					},
					{
						"name": "productKey",
						"in": "formData",
						"description": "The product ID (piid) you would like to create a trip."
					},
					{
						"name": "tripName",
						"in": "formData",
						"description": "Name of this trip. "
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/cars/search/airport": {
			"get": {
				"summary": "Mobile API Cars",
				"description": "Mobile API Cars",
				"operationId": "",
				"parameters": [
					{
						"name": "airportCode",
						"in": "query",
						"description": "3 letter airport code where you will be picking up and dropping off your rental car."
					},
					{
						"name": "dropOffTime",
						"in": "query",
						"description": "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. "
					},
					{
						"name": "pickupTime",
						"in": "query",
						"description": "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. "
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/cars/search/location": {
			"get": {
				"summary": "Mobile API Cars",
				"description": "Mobile API Cars",
				"operationId": "",
				"parameters": [
					{
						"name": "dropOffTime",
						"in": "query",
						"description": "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. "
					},
					{
						"name": "pickupLocation.lat",
						"in": "query",
						"description": "The location (latitude) to search near."
					},
					{
						"name": "pickupLocation.lon",
						"in": "query",
						"description": "The location (longitude) to search near."
					},
					{
						"name": "pickupTime",
						"in": "query",
						"description": "When you will pick up the car. This is a timezone naive local datetime in ISO 8601 combined date and time format. "
					},
					{
						"name": "searchRadius",
						"in": "query",
						"description": "The max distance around the location to search in. The distance unit is selected based on the current POS (km or mi). "
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/cars/trip/checkout": {
			"post": {
				"summary": "Mobile API Cars Checkout",
				"description": "Mobile API Cars Checkout",
				"operationId": "",
				"parameters": [
					{
						"name": "city",
						"in": "formData",
						"description": "The city of the travelers billing address."
					},
					{
						"name": "country",
						"in": "formData",
						"description": "The 3 letter country code of the travelers billing address."
					},
					{
						"name": "creditCardNumber",
						"in": "formData",
						"description": "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout."
					},
					{
						"name": "cvv",
						"in": "formData",
						"description": "The CVV of the travelers credit card used for this booking."
					},
					{
						"name": "doIThinkImSignedIn",
						"in": "formData",
						"description": "As a client I am checking-out with the assumption that I am signed in"
					},
					{
						"name": "expectedCardFee",
						"in": "formData",
						"description": "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision."
					},
					{
						"name": "expectedCardFeeCurrencyCode",
						"in": "formData",
						"description": "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done."
					},
					{
						"name": "expectedFareCurrencyCode",
						"in": "formData",
						"description": "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done. This is obtained from /api/flight/trip/create."
					},
					{
						"name": "expectedTotalFare",
						"in": "formData",
						"description": "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /api/flight/trip/create."
					},
					{
						"name": "expirationDateMonth",
						"in": "formData",
						"description": "The expiration date month of the credit card used for this booking. This field is required guest for checkout."
					},
					{
						"name": "expirationDateYear",
						"in": "formData",
						"description": "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout."
					},
					{
						"name": "mainMobileTraveler.email",
						"in": "formData",
						"description": "This passengers email address. Required, although ignored for logged in users, as it will use their email on file instead."
					},
					{
						"name": "mainMobileTraveler.expediaEmailOptIn",
						"in": "formData",
						"description": "Whether to opt-in the users email to travel deals"
					},
					{
						"name": "mainMobileTraveler.firstName",
						"in": "formData",
						"description": "The first name of the traveler"
					},
					{
						"name": "mainMobileTraveler.lastName",
						"in": "formData",
						"description": "The last name of the traveler."
					},
					{
						"name": "mainMobileTraveler.middleName",
						"in": "formData",
						"description": "The middle name of the traveler. "
					},
					{
						"name": "mainMobileTraveler.password",
						"in": "formData",
						"description": "The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request."
					},
					{
						"name": "mainMobileTraveler.phone",
						"in": "formData",
						"description": "The phone number of the traveler.Only the numeric values in this field are used.  E.g., 555-1234 is treated internally as 5551234."
					},
					{
						"name": "mainMobileTraveler.phoneCountryCode",
						"in": "formData",
						"description": "The country code of the phone number of the traveler. Only the numeric values in this field are used.  E.g., +44 is treated internally as 44."
					},
					{
						"name": "nameOnCard",
						"in": "formData",
						"description": "The card holders name"
					},
					{
						"name": "omniturePartnerId",
						"in": "formData",
						"description": "Omniture partner identification string"
					},
					{
						"name": "postalCode",
						"in": "formData",
						"description": "The postal code of the travelers billing address. Required only postalCode only checkout."
					},
					{
						"name": "prettyPrint",
						"in": "formData",
						"description": "If true, return JSON with tabs, spaces and newlines to be human readable"
					},
					{
						"name": "state",
						"in": "formData",
						"description": "The state (or province) of the travelers billing address."
					},
					{
						"name": "storeCreditCardInUserProfile",
						"in": "formData",
						"description": "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in."
					},
					{
						"name": "storedCreditCardId",
						"in": "formData",
						"description": "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request."
					},
					{
						"name": "streetAddress",
						"in": "formData",
						"description": "The street part of the credit card owners billing address.."
					},
					{
						"name": "streetAddress2",
						"in": "formData",
						"description": "Apartment or suite number of the travelers billing address."
					},
					{
						"name": "suppressFinalBooking",
						"in": "formData",
						"description": "If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true"
					},
					{
						"name": "tealeafTransactionId",
						"in": "formData",
						"description": "The unique transaction ID used in TeaLeaf PSR tracking"
					},
					{
						"name": "tripId",
						"in": "formData",
						"description": "The trip ID of an existing trip, from /api/flight/trip/create."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/info": {
			"get": {
				"summary": "Hotel Information",
				"description": "Hotel Information",
				"operationId": "",
				"parameters": [
					{
						"name": "hotelId",
						"in": "query",
						"description": "Hotel Id usually 5 digits. It is obtained by calling /m/api/hotel/search"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/offers": {
			"get": {
				"summary": "Mobile API Hotels Offers",
				"description": "Mobile API Hotels Offers",
				"operationId": "",
				"parameters": [
					{
						"name": "checkInDate",
						"in": "query",
						"description": "Checkin Date"
					},
					{
						"name": "checkOutDate",
						"in": "query",
						"description": "Checkout Date"
					},
					{
						"name": "hotelId",
						"in": "query",
						"description": "Usually 5-digit hotel ID obtained by calling /m/api/hotel/search"
					},
					{
						"name": "priceType",
						"in": "query",
						"description": "Price Type, can only be TOTAL_PRICE or BASE_PRICE_ONLY"
					},
					{
						"name": "room",
						"in": "query",
						"description": "[Optional if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the childrens ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient."
					},
					{
						"name": "room1",
						"in": "query",
						"description": "[Optional if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the childrens ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient."
					},
					{
						"name": "sourceType",
						"in": "query",
						"description": "Source Type, for example mobilweb or mobileapp"
					},
					{
						"name": "useCacheForAirAttach",
						"in": "query",
						"description": "[Optional] If this flag is set then the hotel offers (on a successful offers call) and the search fields will be cached. There is a possiblilty that theywill be used later in the create trip calls"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/product": {
			"get": {
				"summary": "Hotel Product",
				"description": "Hotel Product",
				"operationId": "",
				"parameters": [
					{
						"name": "opaqueProduct",
						"in": "query",
						"description": "Set to true if the product key is an opaque hotel product key."
					},
					{
						"name": "productKey",
						"in": "query",
						"description": "The product key of the offer, obtained by calling /m/api/hotel/offers"
					},
					{
						"name": "roomOccupants[0].childGuestAge",
						"in": "query",
						"description": "represents the age of a single child guest staying in this room. You should specify the age of all children staying in this room. Valid values are 0-17 (0 for an infant under the age of one year). For a single room with 1 adult and 3 child guests the ages of 1, 3 and 8 years"
					},
					{
						"name": "roomOccupants[0].numberOfAdultGuests",
						"in": "query",
						"description": "Number of adults staying in this room (default: 1)"
					},
					{
						"name": "sourceType",
						"in": "query",
						"description": "Source type for the request. mobileapp OR mobileweb. Leave blank for others."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/rooms/cancel": {
			"post": {
				"summary": "Hotel Room Cancellation",
				"description": "Hotel Room Cancellation",
				"operationId": "",
				"parameters": [
					{
						"name": "orderLineGUIDs",
						"in": "formData",
						"description": "The list of order line guids. Each corresponding to a room number"
					},
					{
						"name": "orderNumber",
						"in": "formData",
						"description": "The order number ( returned by OMS ) associated with the trip"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/search": {
			"get": {
				"summary": "Mobile API Hotels SearchnnThere are multiple successful responses for this operation.nSee the examples below for more information.",
				"description": "Mobile API Hotels SearchnnThere are multiple successful responses for this operation.nSee the examples below for more information.",
				"operationId": "",
				"parameters": [
					{
						"name": "airAttachQualificationCode",
						"in": "query",
						"description": "Qualification code needed to get air attached hotel prices"
					},
					{
						"name": "checkInDate",
						"in": "query",
						"description": "Check in date in ISO format (yyyy-MM-dd)"
					},
					{
						"name": "checkOutDate",
						"in": "query",
						"description": "Check out date in ISO format (yyyy-MM-dd)"
					},
					{
						"name": "city",
						"in": "query",
						"description": "A string to identify the city to search."
					},
					{
						"name": "correlationId",
						"in": "query",
						"description": "Define a correlation between a hotel search and a flight search."
					},
					{
						"name": "enableSponsoredListings",
						"in": "query",
						"description": "Used to check for sponsoredListing. By default the value would be false"
					},
					{
						"name": "filterAmenities",
						"in": "query",
						"description": "Used to filter by amenities. Must be as a list of amenity ids separated by commas. Please note that there is no way at this time to validate the ids are actually valid."
					},
					{
						"name": "filterHotelName",
						"in": "query",
						"description": "Hotel name used to filter the search results."
					},
					{
						"name": "filterInventoryType",
						"in": "query",
						"description": "A parameter to filter by inventory type. Only supports MERCHANT right now, all other values are just ignored."
					},
					{
						"name": "filterPrice",
						"in": "query",
						"description": "Used to filter by price, make sure it matches filterPriceBuckets if counts are desired. Must contain 1 or 2 numbers. 1 number means there is no max price, min price must be greater than or equal to 0."
					},
					{
						"name": "filterPriceBuckets",
						"in": "query",
						"description": "Used to define custom price filter buckets. if not provided then the default price filter buckets for the POS will be used. No need to define 0, each value in price bucket is minimum of price range. Note that price range can be decimal format but buckets must be integer. If supplied 4 values are required as input."
					},
					{
						"name": "filterStarRatings",
						"in": "query",
						"description": "Used to filter by star rating. Must be in increments of 5 and separated by commas(minStarRating=0 and maxStarRating=50). Ex. 0,5,10 means 0, 0.5 and 1 star hotels"
					},
					{
						"name": "filterUnavailable",
						"in": "query",
						"description": "Unavailable hotels will be removed from the response if set to true. The default is false if not specified."
					},
					{
						"name": "forceV2Search",
						"in": "query",
						"description": "A flag to indicate whether the api should do a domain V2 search for the mobile app."
					},
					{
						"name": "hgid",
						"in": "query",
						"description": "If the hotel group ID parameter (hgid) is present it will take precedence over city, location or lat/long"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "Latitude to be used in combination with longitude for a coordinate search."
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "Longitude to be used in combination with latitude for a coordinate search."
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "The zero-based index of the page that you are requesting. The default value is 0 (zero)."
					},
					{
						"name": "regionId",
						"in": "query",
						"description": "An Expedia region ID to limit the search to a particular region."
					},
					{
						"name": "resultsPerPage",
						"in": "query",
						"description": "The number of hotels to return per page. A value of -1 (negative one) is reserved to mean Return ALL matching hotels. The default value is 25 (twenty five)."
					},
					{
						"name": "returnOpaqueHotels",
						"in": "query",
						"description": "Return Opaque hotels if set to true."
					},
					{
						"name": "room",
						"in": "query",
						"description": "if room1 field is specified] The occupants of the each room. A CSV of first the # of adults in the room, then the childrens ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient."
					},
					{
						"name": "room1",
						"in": "query",
						"description": "if room field is specified] The occupants of the first room to book. A CSV of first the # of adults in the room, then the childrens ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient."
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Order to sort the list of hotels by Expedia picks, star rating, price and guest rating."
					},
					{
						"name": "sortOrderFilter",
						"in": "query",
						"description": "A post process sort order filter used to apply post sort order filtering to the sorted (sortOrder) search results."
					},
					{
						"name": "sourceType",
						"in": "query",
						"description": "Source type for the request"
					},
					{
						"name": "tripId",
						"in": "query",
						"description": "This field is optional and will default to the the POS default PriceType."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/trip/cancel": {
			"post": {
				"summary": "Hotel Trip Cancellation",
				"description": "Hotel Trip Cancellation",
				"operationId": "",
				"parameters": [
					{
						"name": "emailAddress",
						"in": "formData",
						"description": "Email address of the traveler."
					},
					{
						"name": "itineraryId",
						"in": "formData",
						"description": "Itinerary id of the trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout"
					},
					{
						"name": "sendConfirmationEmail",
						"in": "formData",
						"description": "Email the traveler after cancellation or not."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/trip/cancelEnquiry": {
			"get": {
				"summary": "Cancel Enquiry for hotel, pass in itinerary id, email address of trip owner.",
				"description": "Cancel Enquiry for hotel, pass in itinerary id, email address of trip owner.",
				"operationId": "",
				"parameters": [
					{
						"name": "emailAddress",
						"in": "query",
						"description": "Email address of the traveler."
					},
					{
						"name": "itineraryId",
						"in": "query",
						"description": "Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/trip/checkout": {
			"post": {
				"summary": "Mobile API Hotels Checkout",
				"description": "Mobile API Hotels Checkout",
				"operationId": "",
				"parameters": [
					{
						"name": "bedTypeId",
						"in": "formData",
						"description": "Parameter that indicates the selected bed Type. Defaults to the first available bed type of the hotel offer. [Deprecated]. Pass bedTypeId for each room."
					},
					{
						"name": "checkInDate",
						"in": "formData",
						"description": "Check in date in ISO format (yyyy-MM-dd)"
					},
					{
						"name": "checkOutDate",
						"in": "formData",
						"description": "Check out date in ISO format (yyyy-MM-DD)"
					},
					{
						"name": "city",
						"in": "formData",
						"description": "The city of the travelers billing address."
					},
					{
						"name": "country",
						"in": "formData",
						"description": "The 3 letter country code of the travelers billing address."
					},
					{
						"name": "creditCardNumber",
						"in": "formData",
						"description": "The credit card number used for this booking, if checking out with a new card. This field is required for guest checkout."
					},
					{
						"name": "cvv",
						"in": "formData",
						"description": "The CVV of the travelers credit card used for this booking."
					},
					{
						"name": "doIThinkImSignedIn",
						"in": "formData",
						"description": "As a client I am checking-out with the assumption that I am signed in"
					},
					{
						"name": "email",
						"in": "formData",
						"description": "This passengers email address. Required, although ignored for logged in users, as it will use their email on file instead."
					},
					{
						"name": "expectedCardFee",
						"in": "formData",
						"description": "The expected credit card fee, as returned by the createTrip call in the validFormsOfPayment object for whatever credit card the user is paying with. No leading zeros, no thousands separators, and 2 decimal places of precision."
					},
					{
						"name": "expectedCardFeeCurrencyCode",
						"in": "formData",
						"description": "Three letter 4217 ISO currency code of the expected total price. This should be whatever was returned by the server. Conversions will not be done."
					},
					{
						"name": "expectedFareCurrencyCode",
						"in": "formData",
						"description": "Three letter 4217 ISO currency code of the expected credit card fee. This should be whatever was returned by the server. Conversions will not be done.This is obtained from /m/api/hotel/trip/create."
					},
					{
						"name": "expectedTotalFare",
						"in": "formData",
						"description": "The expected total price of the trip, matching exactly whatever the user last saw. No leading zeros, no thousands separators, and 2 decimal places of precision. This is obtained from /m/api/hotel/trip/create."
					},
					{
						"name": "expediaEmailOptIn",
						"in": "formData",
						"description": "Whether to opt-in the users email to travel deals"
					},
					{
						"name": "expirationDateMonth",
						"in": "formData",
						"description": "The expiration date month of the credit card used for this booking. This field is required guest for checkout."
					},
					{
						"name": "expirationDateYear",
						"in": "formData",
						"description": "The 4 digit expiration date year of the credit card used for this booking. This field is required for guest checkout."
					},
					{
						"name": "firstName",
						"in": "formData",
						"description": "The first name of the traveler"
					},
					{
						"name": "lastName",
						"in": "formData",
						"description": "The last name of the traveler."
					},
					{
						"name": "middleName",
						"in": "formData",
						"description": "The middle name of the traveler. "
					},
					{
						"name": "nameOnCard",
						"in": "formData",
						"description": "The card holders name"
					},
					{
						"name": "omniturePartnerId",
						"in": "formData",
						"description": "Omniture partner identification string"
					},
					{
						"name": "password",
						"in": "formData",
						"description": "The password provided by the expedia user. This would imply that a user needs to be created with the above email id and this password. To be done only if this is a guest request."
					},
					{
						"name": "phone",
						"in": "formData",
						"description": "The phone number of the traveler. Only the numeric values in this field are used. "
					},
					{
						"name": "phoneCountryCode",
						"in": "formData",
						"description": "The country code of the phone number of the traveler. Only the numeric values in this field are used. +44 results in 44"
					},
					{
						"name": "postalCode",
						"in": "formData",
						"description": "The postal code of the travelers billing address. Required only postalCode only checkout."
					},
					{
						"name": "prettyPrint",
						"in": "formData",
						"description": "If true, return JSON with tabs, spaces and newlines to be human readable"
					},
					{
						"name": "rooms",
						"in": "formData",
						"description": "A list of room preferences to be applied to the rooms being booked."
					},
					{
						"name": "sendEmailConfirmation",
						"in": "formData",
						"description": "Used to check if confirmation email needs to be sent or not."
					},
					{
						"name": "state",
						"in": "formData",
						"description": "The state (or province) of the travelers billing address."
					},
					{
						"name": "storeCreditCardInUserProfile",
						"in": "formData",
						"description": "Indicates whether to save the credit card information as a stored credit card in the user profile. This is ignored if the user is not signed in."
					},
					{
						"name": "storedCreditCardId",
						"in": "formData",
						"description": "The GUID for the stored credit card information to be used for payment. The retrieved credit card information should trump the other credit card parameter in this request."
					},
					{
						"name": "streetAddress",
						"in": "formData",
						"description": "The street part of the credit card owners billing address."
					},
					{
						"name": "streetAddress2",
						"in": "formData",
						"description": "Apartment or suite number of the travelers billing address."
					},
					{
						"name": "suppressFinalBooking",
						"in": "formData",
						"description": "If true, do not actually charge for and book the trip, stop after creating the itinerary. Used for testing on the checkout call only. Checkout will return 00000 for the OMS order ID when this is true"
					},
					{
						"name": "tealeafTransactionId",
						"in": "formData",
						"description": "The unique transaction ID used in TeaLeaf PSR tracking"
					},
					{
						"name": "tripId",
						"in": "formData",
						"description": "The trip ID of an existing trip, from /m/api/hotel/trip/create."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/trip/checkoutfields": {
			"get": {
				"summary": "Service that returns the fields that are required or optional for a given point of sale.",
				"description": "Service that returns the fields that are required or optional for a given point of sale.",
				"operationId": "",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/trip/create": {
			"post": {
				"summary": "Mobile API Hotels Create Trip",
				"description": "Mobile API Hotels Create Trip",
				"operationId": "",
				"parameters": [
					{
						"name": "productKey",
						"in": "formData",
						"description": "The product key, obtained by calling /m/api/hotel/offers,  we are going to create a trip for."
					},
					{
						"name": "qualifyAirAttach",
						"in": "formData",
						"description": "[Optional] Whether to return a qualified air attach product for this trip. It will use the same rate plan and room type codes as the productKey sent in the request. But the product key that will be used to get the air attached product will be different"
					},
					{
						"name": "roomInfoFields",
						"in": "formData",
						"description": "The occupants of the first room to book. A CSV of first the # of adults in the room, then the childrens ages. Children are 18 and under. For infants under 1, give 0. If present, overrides the two deprecated fields. The example would be 2 adults, with 4 children ages 12, 2, 3, and 6 months. If there are only adults, then a simple digit is sufficient. For example 2,12,2,3,0"
					},
					{
						"name": "tripTitle",
						"in": "formData",
						"description": "[Optional] The name of this itinerary as it will appear to customer service and in the itinerary list. Upto 255 characters that must be one of these: .,a-zA-Z0-9- #"
					},
					{
						"name": "withInsurance",
						"in": "formData",
						"description": "[Optional] Whether to return the available insurance options for this trip. Currently this only works for flights. (Default: false)"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/m/api/hotel/trip/V2/cancelEnquiry": {
			"get": {
				"summary": "Cancel Enquiry for hotel, pass in itinerary id, email address of trip owner.",
				"description": "Cancel Enquiry for hotel, pass in itinerary id, email address of trip owner.",
				"operationId": "",
				"parameters": [
					{
						"name": "emailAddress",
						"in": "query",
						"description": "Email address of the traveler."
					},
					{
						"name": "itineraryId",
						"in": "query",
						"description": "Itinerary containing trip to cancel. It is obtained by calling /m/api/hotel/trip/checkout"
					},
					{
						"name": "orderLineGUIDs",
						"in": "query",
						"description": "Comma separated order line guids. If provided only details regarding the provided guids are returned."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	},
	"definitions": {
	}
}