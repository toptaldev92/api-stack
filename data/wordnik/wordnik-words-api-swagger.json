{
	"swagger": "2.0",
	"info": {
		"title": "Wordnik Words API",
		"description": "A dictionary API.",
		"termsOfService": null,
		"version": "4.0"
	},
	"host": "/words",
	"basePath": "http://api.wordnik.com/v4",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/wordList.{format}/{permalink}": {
			"": {
				"summary": "Updates an existing WordList",
				"description": "",
				"operationId": "updateWordList",
				"parameters": [
					{
						"name": "",
						"in": "body",
						"description": "Updated WordList",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "auth_token",
						"in": "header",
						"description": "The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)",
						"type": "string"
					},
					{
						"name": "permalink",
						"in": "path",
						"description": "permalink of WordList to update",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/wordList.{format}/{permalink}/deleteWords": {
			"": {
				"summary": "Removes words from a WordList",
				"description": "",
				"operationId": "deleteWordsFromWordList",
				"parameters": [
					{
						"name": "",
						"in": "body",
						"description": "Words to remove from WordList",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "auth_token",
						"in": "header",
						"description": "The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)",
						"type": "string"
					},
					{
						"name": "permalink",
						"in": "path",
						"description": "permalink of WordList to use",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/wordList.{format}/{permalink}/words": {
			"": {
				"summary": "Adds words to a WordList",
				"description": "",
				"operationId": "addWordsToWordList",
				"parameters": [
					{
						"name": "",
						"in": "body",
						"description": "Array of words to add to WordList",
						"schema": {
							"$ref": "#/definitions/holder"
						}
					},
					{
						"name": "auth_token",
						"in": "header",
						"description": "The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Maximum number of results to return",
						"type": "int"
					},
					{
						"name": "permalink",
						"in": "path",
						"description": "permalink of WordList to user",
						"type": "string"
					},
					{
						"name": "skip",
						"in": "query",
						"description": "Results to skip",
						"type": "int"
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Field to sort by",
						"type": "string"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Direction to sort",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/words.{format}/randomWord": {
			"": {
				"summary": "Returns a single random WordObject",
				"description": "",
				"operationId": "getRandomWord",
				"parameters": [
					{
						"name": "excludePartOfSpeech",
						"in": "query",
						"description": "CSV part-of-speech values to exclude",
						"type": "string"
					},
					{
						"name": "hasDictionaryDef",
						"in": "query",
						"description": "Only return words with dictionary definitions",
						"type": "string"
					},
					{
						"name": "includePartOfSpeech",
						"in": "query",
						"description": "CSV part-of-speech values to include",
						"type": "string"
					},
					{
						"name": "maxCorpusCount",
						"in": "query",
						"description": "Maximum corpus frequency for terms",
						"type": "int"
					},
					{
						"name": "maxDictionaryCount",
						"in": "query",
						"description": "Maximum dictionary count",
						"type": "int"
					},
					{
						"name": "maxLength",
						"in": "query",
						"description": "Maximum word length",
						"type": "int"
					},
					{
						"name": "minCorpusCount",
						"in": "query",
						"description": "Minimum corpus frequency for terms",
						"type": "int"
					},
					{
						"name": "minDictionaryCount",
						"in": "query",
						"description": "Minimum dictionary count",
						"type": "int"
					},
					{
						"name": "minLength",
						"in": "query",
						"description": "Minimum word length",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/words.{format}/randomWords": {
			"": {
				"summary": "Returns an array of random WordObjects",
				"description": "",
				"operationId": "getRandomWords",
				"parameters": [
					{
						"name": "excludePartOfSpeech",
						"in": "query",
						"description": "CSV part-of-speech values to exclude",
						"type": "string"
					},
					{
						"name": "hasDictionaryDef",
						"in": "query",
						"description": "Only return words with dictionary definitions",
						"type": "string"
					},
					{
						"name": "includePartOfSpeech",
						"in": "query",
						"description": "CSV part-of-speech values to include",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Maximum number of results to return",
						"type": "int"
					},
					{
						"name": "maxCorpusCount",
						"in": "query",
						"description": "Maximum corpus frequency for terms",
						"type": "int"
					},
					{
						"name": "maxDictionaryCount",
						"in": "query",
						"description": "Maximum dictionary count",
						"type": "int"
					},
					{
						"name": "maxLength",
						"in": "query",
						"description": "Maximum word length",
						"type": "int"
					},
					{
						"name": "minCorpusCount",
						"in": "query",
						"description": "Minimum corpus frequency for terms",
						"type": "int"
					},
					{
						"name": "minDictionaryCount",
						"in": "query",
						"description": "Minimum dictionary count",
						"type": "int"
					},
					{
						"name": "minLength",
						"in": "query",
						"description": "Minimum word length",
						"type": "int"
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Attribute to sort by",
						"type": "string"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort direction",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/words.{format}/reverseDictionary": {
			"": {
				"summary": "Reverse dictionary search",
				"description": "",
				"operationId": "reverseDictionary",
				"parameters": [
					{
						"name": "excludePartOfSpeech",
						"in": "query",
						"description": "Exclude these comma-delimited parts of speech",
						"type": "string"
					},
					{
						"name": "excludeSourceDictionaries",
						"in": "query",
						"description": "Exclude these comma-delimited source dictionaries",
						"type": "string"
					},
					{
						"name": "expandTerms",
						"in": "query",
						"description": "Expand terms",
						"type": "string"
					},
					{
						"name": "findSenseForWord",
						"in": "query",
						"description": "Restricts words and finds closest sense",
						"type": "string"
					},
					{
						"name": "includePartOfSpeech",
						"in": "query",
						"description": "Only include these comma-delimited parts of speech",
						"type": "string"
					},
					{
						"name": "includeSourceDictionaries",
						"in": "query",
						"description": "Only include these comma-delimited source dictionaries",
						"type": "string"
					},
					{
						"name": "includeTags",
						"in": "query",
						"description": "Return a closed set of XML tags in response",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Maximum number of results to return",
						"type": "int"
					},
					{
						"name": "maxCorpusCount",
						"in": "query",
						"description": "Maximum corpus frequency for terms",
						"type": "int"
					},
					{
						"name": "maxLength",
						"in": "query",
						"description": "Maximum word length",
						"type": "int"
					},
					{
						"name": "minCorpusCount",
						"in": "query",
						"description": "Minimum corpus frequency for terms",
						"type": "int"
					},
					{
						"name": "minLength",
						"in": "query",
						"description": "Minimum word length",
						"type": "int"
					},
					{
						"name": "query",
						"in": "query",
						"description": "Search term",
						"type": "string"
					},
					{
						"name": "skip",
						"in": "query",
						"description": "Results to skip",
						"type": "string"
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "Attribute to sort by",
						"type": "string"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sort direction",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/words.{format}/search/{query}": {
			"": {
				"summary": "Searches words",
				"description": "",
				"operationId": "searchWords",
				"parameters": [
					{
						"name": "caseSensitive",
						"in": "query",
						"description": "Search case sensitive",
						"type": "string"
					},
					{
						"name": "excludePartOfSpeech",
						"in": "query",
						"description": "Exclude these comma-delimited parts of speech",
						"type": "string"
					},
					{
						"name": "includePartOfSpeech",
						"in": "query",
						"description": "Only include these comma-delimited parts of speech",
						"type": "string"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Maximum number of results to return",
						"type": "int"
					},
					{
						"name": "maxCorpusCount",
						"in": "query",
						"description": "Maximum corpus frequency for terms",
						"type": "int"
					},
					{
						"name": "maxDictionaryCount",
						"in": "query",
						"description": "Maximum dictionary definition count",
						"type": "int"
					},
					{
						"name": "maxLength",
						"in": "query",
						"description": "Maximum word length",
						"type": "int"
					},
					{
						"name": "minCorpusCount",
						"in": "query",
						"description": "Minimum corpus frequency for terms",
						"type": "int"
					},
					{
						"name": "minDictionaryCount",
						"in": "query",
						"description": "Minimum number of dictionary entries for words returned",
						"type": "int"
					},
					{
						"name": "minLength",
						"in": "query",
						"description": "Minimum word length",
						"type": "int"
					},
					{
						"name": "query",
						"in": "path",
						"description": "Search query",
						"type": "string"
					},
					{
						"name": "skip",
						"in": "query",
						"description": "Results to skip",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/words.{format}/wordOfTheDay": {
			"": {
				"summary": "Returns a specific WordOfTheDay",
				"description": "",
				"operationId": "getWordOfTheDay",
				"parameters": [
					{
						"name": "date",
						"in": "query",
						"description": "Fetches by date in yyyy-MM-dd",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	},
	"definitions": {
	}
}