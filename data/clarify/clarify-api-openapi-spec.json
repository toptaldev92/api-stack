{
	"swagger": "2.0",
	"info": {
		"title": "Clarify API",
		"description": "The Clarify API provides a RESTful API to extract knowledge from audio and video content. ",
		"version": null
	},
	"host": "api.clarify.io",
	"basePath": "/v1/bundles",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/v1/bundles": {
			"get": {
				"summary": "List bundles",
				"description": "Gets the list of bundles. Links to each item are in the _links with link relation <b>items</b>.<br/><br/>After getting the initial list, use the <b>first</b>, <b>last</b>, <b>next</b>, <b>prev</b> link relations to get more bundles in the list. Note that <b>next</b> will not be available at the end of the list and <b>prev</b> will not be available at the start of the list. If the results are exactly one page neither <b>prev</b> nor <b>next</b> will be available.<br/><br/>The <b>embed</b> parameter specifies link relations to embed in the results. The models for the specified link relations will be in an array in the embedded object with the link relation as the key. For example, if you do embed=items, _embedded will contain a property <b>items</b> whose value is the array of bundle models. For link relations that are curies (ex. clarify:metadata), you may simply use the base name (ex. metadata).",
				"operationId": "v1bundles",
				"parameters": [{
					"in": "query",
					"name": "embed",
					"description": "list of link relations to embed in the result collection. Zero or more of: items, tracks, metadata. List is space or comma separated single string or an array of strings",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "iterator",
					"description": "opaque value, automatically provided in next/prev links",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "limit",
					"description": "limit results to specified number of bundles. Default is 10. Max 100.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "Create a bundle",
				"description": "Create a new bundle with the specified name, media url, and optional JSON metadata.<br/><br/><b>name</b> can be any string you wish to associate with the bundle.<br/><br/><b>media_url</b> must be a publicly accessible url to a media file. It will be fetched asynchronously after the REST call returns. The audio can be mono or stereo.<br/><br/><b>audio_channel</b> is used to specify audio channels if the media is a stereo file. A value of <i>left</i> or <i>right</i> signifies that only the specified channel will be used. If no value or an empty string is specified for <b>audio_channel</b>, all channels will be used in a single track. If your stereo channels were recorded separately with each channel containing distinct content (for example if 2 legs of a phone call were recorded separately and combined into a single stereo file), for best speech recognition, create two tracks, with <b>audio_channel</b> set to <i>left</i> and <i>right</i> in each track respectively. If your stereo file is simply a recording made with a stereo microphone, <b>audio_channel</b> should be set to an empty string (or not be specified.) If you have audio channels as separate media files, after creating the bundle with one <b>media_url</b>, POST another <b>media_url</b> to /bundles/{bundle_id}/tracks.<br/><br/><b>metadata</b> is a single-level JSON object of your own definition, containing key-values that can be searched and filtered on. Metadata can be used to hold text such as names, titles, descriptions and values for segregating bundles, for example by user, topic, folder name etc. The keys (property names) can be up to 64 characters and must contain only alphanumeric characters and underscore (but not start with underscore) and must not be a reserved name. Reserved names are &quot;true&quot;, &quot;false&quot;, and &quot;null&quot;. Values can be strings, numbers, boolean true/false, date-times represented as a string in ISO 8601 format (ex. &quot;2014-02-25T14:23:45.000Z&quot;), or an array of these primitive types. Strings can be up to 2000 characters and strings in arrays can be up to 128 characters each. Nested objects are not allowed. Metadata can contain up to 50 key-value pairs up to a total JSON size of 4000 characters.<br/><br/><b>external_id</b> is an optional parameter that can be used to logically link a bundle to an item in an external system. The <b>external_id</b> can be whatever you use to identify items in your own database.<br/><br/><b>notify_url</b> is a webhook. It must be a publicly accessible url (http or https) on your server to which notifications for the bundle will be POSTed.<br/><br/>There are two types of notifications: Track Notifications and Bundle Notifications. Track Notifications are sent when the status of a track in the bundle changes to an end state, either <b>ready</b> or <b>error</b>. Handling Track Notifications will allow you to know if a media fetch or media format error has occurred. Bundle Notifications are sent when media processing has completed on a bundle and they will allow you to know the cost of the media processing. For both types of notifications, the POST body is a HAL JSON message containing the <b>bundle_id</b>, bundle <b>name</b> and <b>external_id</b> if they have been set, as well as other data and standard Clarify link relations. See <a href=#bundles_v1bundlesbundle_id_put_3 onclick=window.swaggerDocsLink(this);return true;>PUT /v1/bundles/{bundle_id}</a> for more details.",
				"operationId": "v1bundles",
				"parameters": [{
					"in": "form",
					"name": "audio_channel",
					"description": "The audio channel to use for the track (  | left | right ). Default is empty string which means all channels of audio in the media file are used for the track.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "external_id",
					"description": "A string that can refer to an item in an external system. Up to 64 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "media_url",
					"description": "URL of a media (audio or video) file for this bundle. Up to 2083 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "metadata",
					"description": "User-defined JSON data associated with the bundle. Must be valid JSON, up to 4000 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "name",
					"description": "Name of the bundle. Up to 128 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "notify_url",
					"description": "URL for notifications on this bundle. Up to 2083 characters.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/v1/bundles/{bundle_id}": {
			"delete": {
				"summary": "Delete a bundle",
				"description": "Delete a bundle and its related metadata and tracks. This will only delete media stored on Clarify systems and not delete the source media on remote systems.<br/><br/>Successful response will be a HTTP code 204 with an empty body.",
				"operationId": "v1bundlesbundle_id",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "Get a bundle",
				"description": "Get a bundle that has previously been created.",
				"operationId": "v1bundlesbundle_id",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				},
				{
					"in": "query",
					"name": "embed",
					"description": "list of link relations to embed in the result bundle. Zero or more of: tracks, metadata. List is space or comma separated single string or an array of strings",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "Update a bundle",
				"description": "Update a bundle. To update the tracks, media, or metadata of a bundle, use the tracks and metadata endpoints.<br/><br/><b>name</b> can be any string you wish to associate with the bundle.<br/><br/><b>external_id</b> is an optional parameter that can be used to logically link a bundle to an item in an external system. The <b>external_id</b> can be whatever you use to identify items in your own database.<br/><br/><b>notify_url</b> is a webhook. It must be a publicly accessible url (http or https) on your server to which notifications for the bundle will be POSTed.<br/><br/>There are two types of notifications: Track Notifications and Bundle Notifications. Track Notifications are sent when the status of a track in the bundle changes to an end state, either <b>ready</b> or <b>error</b>. Handling Track Notifications will allow you to know if a media fetch or media format error has occurred. Bundle Notifications are sent when media processing has completed on a bundle and they will allow you to know the cost of the media processing. For both types of notifications, the POST body is a HAL JSON message containing the <b>bundle_id</b>, bundle <b>name</b> and <b>external_id</b> if they have been set, as well as other data and standard Clarify link relations.<br><br>Example Bundle Notification POST body sent to a <b>notify_url</b>:<br><pre class=code-snippet>{n    bundle_id:56b384d9749e4671960245a636701434,n    updated:2014-08-25T22:12:39.574Z,n    bundle_processing_cost:0.1,n    name:Harvard Sentences 1,n    external_id:my_id_123,n    _class:BundleNotification,n    _links:{n        curies:[{n            href:/docs/rels/{rel},name:clarify,templated:truen        }],n        clarify:bundle:{n            href:/v1/bundles/56b384d9749e4671960245a636701434n        },n        clarify:tracks:{n            href:/v1/bundles/56b384d9749e4671960245a636701434/tracksn        },n        clarify:metadata:{n            href:/v1/bundles/56b384d9749e4671960245a636701434/metadatan        }n    }n}n</pre><p><br><br>Example Track Notification POST body sent to a <b>notify_url</b>:<br><pre class=code-snippet>{n    bundle_id:56b384d9749e4671960245a636701434,n    track_id:fef68854fe6e4e92aa1aa6ee2ab3cb99,n    updated:2014-08-25T22:12:39.574Z,n    name:Harvard Sentences 1,n    external_id:my_id_123,n    _class:TrackNotification,n    _links:{n        curies:[{n            href:/docs/rels/{rel},name:clarify,templated:truen        }],n        clarify:track:{n            href:/v1/bundles/56b384d9749e4671960245a636701434/tracks/fef68854fe6e4e92aa1aa6ee2ab3cb99n        },n        clarify:tracks:{n            href:/v1/bundles/56b384d9749e4671960245a636701434/tracksn        },n        clarify:bundle:{n            href:/v1/bundles/56b384d9749e4671960245a636701434n        }n    },n    _embedded:{n        clarify:track:{n            id: fef68854fe6e4e92aa1aa6ee2ab3cb99,n            track: 0,n            label: ,n            media_url: http://media.clarify.io/audio/samples/harvard-sentences-1.wav,n            audio_channel: ,n            audio_language: ,n            created: 2014-08-25T19:54:26.123Z,n            updated: 2014-08-25T19:54:26.552Z,n            status: ready,n            mime_type: audio/x-wav,n            media_size: 1030810,n            duration: 64.422875,n            fetch_response_code: -1,n            fetch_response_message: ,n            media_code: -1,n            media_message: ,n            _class:Track,n            _links:{n                self:{n                    href:/v1/bundles/56b384d9749e4671960245a636701434/tracks/fef68854fe6e4e92aa1aa6ee2ab3cb99n                },n                parent:{n                    href:/v1/bundles/56b384d9749e4671960245a636701434/tracksn                },n                clarify:bundle:{n                    href:/v1/bundles/56b384d9749e4671960245a636701434n                }n            }n        }n    }n}n</pre><p><br/><br/>If <b>version</b> is specified, the bundle will only be updated if the current version matches this parameter value. If the version doesnt match, a 409 Conflict error will be returned. If version not specified, the bundle will always be updated.",
				"operationId": "v1bundlesbundle_id",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "external_id",
					"description": "A string that can refer to an item in an external system. Up to 64 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "name",
					"description": "Name of the bundle. Up to 128 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "notify_url",
					"description": "URL for notifications on this bundle. Up to 2083 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "version",
					"description": "Object version.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/v1/bundles/{bundle_id}/metadata": {
			"delete": {
				"summary": "Delete bundle metadata",
				"description": "Delete the metadata of a bundle and set data to {} (empty object.) This is functionally equivalent to an update metadata request with data set to {}.<br/><br/>Successful response will be a HTTP code 204 with an empty body.",
				"operationId": "v1bundlesbundle_idmetadata",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "Get bundle metadata",
				"description": "Gets the metadata for a bundle.",
				"operationId": "v1bundlesbundle_idmetadata",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"put": {
				"summary": "Update bundle metadata",
				"description": "Update the metadata for a bundle.<br/><br/>The metadata is a single-level JSON object of your own definition, containing key-values that can be searched and filtered on. Metadata can be used to hold text such as names, titles, descriptions and values for segregating bundles, for example by user, topic, folder name etc. The keys (property names) can be up to 64 characters and must contain only alphanumeric characters and underscore (but not start with underscore) and must not be a reserved name. Reserved names are &quot;true&quot;, &quot;false&quot;, and &quot;null&quot;. Values can be strings, numbers, boolean true/false, date-times represented as a string in ISO 8601 format (ex. &quot;2014-02-25T14:23:45.000Z&quot;), or an array of these primitive types. Strings can be up to 2000 characters and strings in arrays can be up to 128 characters each. Nested objects are not allowed. Metadata can contain up to 50 key-value pairs up to a total JSON size of 4000 characters.<br/><br/>To clear the metadata for a bundle, send <b>data</b>={}.<br/><br/>If <b>version</b> specified, the metadata will only be updated if the current version matches this parameter value. If the version doesnt match, a 409 Conflict will be returned. If version not specified, the metadata will always be updated.",
				"operationId": "v1bundlesbundle_idmetadata",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "data",
					"description": "User-defined JSON data associated with the bundle. Must be valid JSON, up to 4000 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "version",
					"description": "Object version.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/v1/bundles/{bundle_id}/tracks": {
			"delete": {
				"summary": "Delete bundle tracks",
				"description": "Delete tracks of a bundle. This will only delete media stored on Clarify systems and not delete the source media on remote systems.<br/><br/>Successful response will be a HTTP code 204 with an empty body.",
				"operationId": "v1bundlesbundle_idtracks",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "track",
					"description": "Track number. An integer from 0 to 3. If not specified, all tracks are deleted.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "Get bundle tracks",
				"description": "Gets the array of tracks for a bundle. This includes the specification of the media and the status of fetching and processing it.<br/><br/>Media for tracks is fetched asynchronously. Until media has been retrieved, a track&apos;s <b>duration</b> and <b>size</b> will both be set to -1.",
				"operationId": "v1bundlesbundle_idtracks",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "Add a track for a bundle",
				"description": "Add a new track to a bundle. This will insert or append a new track in the tracks array or return an error if the maximum number of tracks (4) has been reached or the track number specifies an invalid index.<br/><br/>A track is immutable, meaning that once it has been added, it cannot be modified. If you wish to modify a track, simply add a new one and delete the existing one.<br/><br/><b>label</b> is a short name for the track.<br/><br/><b>media_url</b> must be a publicly accessible url to a media file. It will be fetched asynchronously after the REST call returns. The audio can be mono or stereo.<br/><br/><b>audio_channel</b> is used to specify audio channels if the media is a stereo file. A value of <i>left</i> or <i>right</i> signifies that only the specified channel will be used. If no value or an empty string is specified for <b>audio_channel</b>, all channels will be used in a single track. If your stereo channels were recorded separately with each channel containing distinct content (for example if 2 legs of a phone call were recorded separately and combined into a single stereo file), for best speech recognition, create two tracks with <b>audio_channel</b> to be <i>left</i> and <i>right</i>. If your stereo file is simply a recording made with a stereo microphone, <b>audio_channel</b> should be set to an empty string (or not be specified.)<br/><br/><b>audio_language</b> can be used to specify the language of the audio media. This is an optional parameter and if not specified or an empty string, the language of the track will be automatically detected. If specified, it must be a language code as described in RFC5646 (see <a href=http://tools.ietf.org/html/rfc5646 target=_blank>http://tools.ietf.org/html/rfc5646</a>). Supported languages: en-US.<br/><br/><b>track</b> is the index in the tracks array where the new track will be added. Track numbers start at 0. If this parameter is not specified the new track will always be appended to the end of the array. If the track specified is greater than the last index of the array + 1, an error will be returned.<br/><br/>If <b>version</b> specified, the track will only be added if the current version matches this parameter value. If the version doesnt match, a 409 Conflict error will be returned. If version not specified, the track will always be updated.",
				"operationId": "v1bundlesbundle_idtracks",
				"parameters": [{
					"in": "form",
					"name": "audio_channel",
					"description": "The audio channel to use for the track (  | left | right ). Default is empty string which means all channels of audio in the media file are used for the track.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "audio_language",
					"description": "Language of the audio in the track, specified with an RFC5646 code.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "label",
					"description": "Label for the track. Up to 128 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "media_url",
					"description": "URL of a media file for this bundle. Up to 2083 characters.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "track",
					"description": "Track number specifies the index of the new track in the tracks array. An integer from 0 to 3. If not specified, the new track is appended to the array.",
					"type": "string",
					"format": "string"
				},
				{
					"in": "form",
					"name": "version",
					"description": "Object version.",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/v1/bundles/{bundle_id}/tracks/{track_id}": {
			"delete": {
				"summary": "Delete a bundle track",
				"description": "Delete a track of a bundle. This will only delete media stored on Clarify systems and not delete the source media on remote systems.<br/><br/>Successful response will be a HTTP code 204 with an empty body.",
				"operationId": "v1bundlesbundle_idtrackstrack_id",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "track_id",
					"description": "id of a track",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"get": {
				"summary": "Get bundle track",
				"description": "Gets a single track in a bundle. This includes the specification of the media and the status of fetching and processing it.<br/><br/>Media for a track is fetched asynchronously. Until media has been retrieved, a track&apos;s <b>duration</b> and <b>size</b> will both be set to -1.",
				"operationId": "v1bundlesbundle_idtrackstrack_id",
				"parameters": [{
					"in": "path",
					"name": "bundle_id",
					"description": "id of a bundle",
					"type": "string",
					"format": "string"
				},
				{
					"in": "path",
					"name": "track_id",
					"description": "id of a track",
					"type": "string",
					"format": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		}
	},
	"definitions": {
		"Collection": {
			"properties": {
				"total": {
					"description": "This is a default description.",
					"type": "string"
				},
				"limit": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_class": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_links": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_embedded": {
					"description": "This is a default description.",
					"type": "string"
				}
			}
		},
		"object": {
			"properties": []
		},
		"Ref (of Bundle)": {
			"properties": {
				"id": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_class": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_links": {
					"description": "This is a default description.",
					"type": "string"
				}
			}
		},
		"Bundle": {
			"properties": {
				"id": {
					"description": "This is a default description.",
					"type": "string"
				},
				"version": {
					"description": "This is a default description.",
					"type": "string"
				},
				"name": {
					"description": "This is a default description.",
					"type": "string"
				},
				"external_id": {
					"description": "This is a default description.",
					"type": "string"
				},
				"notify_url": {
					"description": "This is a default description.",
					"type": "string"
				},
				"created": {
					"description": "This is a default description.",
					"type": "string"
				},
				"updated": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_class": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_links": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_embedded": {
					"description": "This is a default description.",
					"type": "string"
				}
			}
		},
		"Metadata": {
			"properties": {
				"bundle_id": {
					"description": "This is a default description.",
					"type": "string"
				},
				"version": {
					"description": "This is a default description.",
					"type": "string"
				},
				"created": {
					"description": "This is a default description.",
					"type": "string"
				},
				"updated": {
					"description": "This is a default description.",
					"type": "string"
				},
				"data": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_class": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_links": {
					"description": "This is a default description.",
					"type": "string"
				}
			}
		},
		"Ref": {
			"properties": {
				"_class": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_links": {
					"description": "This is a default description.",
					"type": "string"
				}
			}
		},
		"Tracks": {
			"properties": {
				"bundle_id": {
					"description": "This is a default description.",
					"type": "string"
				},
				"version": {
					"description": "This is a default description.",
					"type": "string"
				},
				"status": {
					"description": "This is a default description.",
					"type": "string"
				},
				"created": {
					"description": "This is a default description.",
					"type": "string"
				},
				"updated": {
					"description": "This is a default description.",
					"type": "string"
				},
				"tracks": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_class": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_links": {
					"description": "This is a default description.",
					"type": "string"
				}
			}
		},
		"Track (array item)": {
			"properties": {
				"id": {
					"description": "This is a default description.",
					"type": "string"
				},
				"track": {
					"description": "This is a default description.",
					"type": "string"
				},
				"label": {
					"description": "This is a default description.",
					"type": "string"
				},
				"media_url": {
					"description": "This is a default description.",
					"type": "string"
				},
				"audio_channel": {
					"description": "This is a default description.",
					"type": "string"
				},
				"audio_language": {
					"description": "This is a default description.",
					"type": "string"
				},
				"created": {
					"description": "This is a default description.",
					"type": "string"
				},
				"updated": {
					"description": "This is a default description.",
					"type": "string"
				},
				"status": {
					"description": "This is a default description.",
					"type": "string"
				},
				"mime_type": {
					"description": "This is a default description.",
					"type": "string"
				},
				"media_size": {
					"description": "This is a default description.",
					"type": "string"
				},
				"duration": {
					"description": "This is a default description.",
					"type": "string"
				},
				"fetch_response_code": {
					"description": "This is a default description.",
					"type": "string"
				},
				"fetch_response_message": {
					"description": "This is a default description.",
					"type": "string"
				},
				"media_code": {
					"description": "This is a default description.",
					"type": "string"
				},
				"media_message": {
					"description": "This is a default description.",
					"type": "string"
				}
			}
		},
		"Track": {
			"properties": {
				"id": {
					"description": "This is a default description.",
					"type": "string"
				},
				"track": {
					"description": "This is a default description.",
					"type": "string"
				},
				"label": {
					"description": "This is a default description.",
					"type": "string"
				},
				"media_url": {
					"description": "This is a default description.",
					"type": "string"
				},
				"audio_channel": {
					"description": "This is a default description.",
					"type": "string"
				},
				"audio_language": {
					"description": "This is a default description.",
					"type": "string"
				},
				"created": {
					"description": "This is a default description.",
					"type": "string"
				},
				"updated": {
					"description": "This is a default description.",
					"type": "string"
				},
				"status": {
					"description": "This is a default description.",
					"type": "string"
				},
				"mime_type": {
					"description": "This is a default description.",
					"type": "string"
				},
				"media_size": {
					"description": "This is a default description.",
					"type": "string"
				},
				"duration": {
					"description": "This is a default description.",
					"type": "string"
				},
				"fetch_response_code": {
					"description": "This is a default description.",
					"type": "string"
				},
				"fetch_response_message": {
					"description": "This is a default description.",
					"type": "string"
				},
				"media_code": {
					"description": "This is a default description.",
					"type": "string"
				},
				"media_message": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_class": {
					"description": "This is a default description.",
					"type": "string"
				},
				"_links": {
					"description": "This is a default description.",
					"type": "string"
				}
			}
		}
	}
}