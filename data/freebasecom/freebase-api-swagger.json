{
	"swagger": "2.0",
	"info": {
		"title": "Freebase API",
		"description": "Freebase contains tens of millions of topics, thousands of types, and tens of thousands of properties.",
		"termsOfService": null,
		"version": "v1"
	},
	"host": "www.googleapis.com",
	"basePath": "/freebase/v1",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/image{id}": {
			"get": {
				"summary": "Text",
				"description": "Text",
				"operationId": "text",
				"parameters": [
					{
						"name": "fallbackid",
						"in": "query",
						"description": "Use the image associated with this secondary id if no image is associated with the primary id.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The id of an entity for which you want an image. Alternatively, you may pass the id of the content node for a specific image.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "maxheight",
						"in": "query",
						"description": "Maximum height in pixels for resulting image. (integer 0 - 4,096)",
						"type": "integer"
					},
					{
						"name": "maxwidth",
						"in": "query",
						"description": "Maximum width in pixels for resulting image. (integer 0 - 4,096)",
						"type": "integer"
					},
					{
						"name": "mode",
						"in": "query",
						"description": "Method used to scale or crop image.",
						"type": "string"
					},
					{
						"name": "pad",
						"in": "query",
						"description": "Whether the resulting image should be padded up to the requested dimensions. (boolean as 0 or 1)",
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/mqlread": {
			"get": {
				"summary": "Search",
				"description": "Search",
				"operationId": "search",
				"parameters": [
					{
						"name": "as_of_time",
						"in": "query",
						"description": "Run the query as it wouldve been run at the specified point in time. Must be a valid timestamp (e.g. 2007-01-09T22 or 2007-02).",
						"type": "string"
					},
					{
						"name": "callback",
						"in": "query",
						"description": "JS method name for JSONP callbacks.",
						"type": "string"
					},
					{
						"name": "cost",
						"in": "query",
						"description": "Whether or not to show the costs.",
						"type": "boolean"
					},
					{
						"name": "cursor",
						"in": "query",
						"description": "Provides a mechanism for paging out results (can be used in conjunction with limit directive in MQL). No value (for the first request) OR a valid cursor returned by a previous request.",
						"type": "string"
					},
					{
						"name": "html_escape",
						"in": "query",
						"description": "Whether or not to escape entities.",
						"type": "boolean"
					},
					{
						"name": "indent",
						"in": "query",
						"description": "How many spaces to indent the JSON. (integer 0-10)",
						"type": "integer"
					},
					{
						"name": "lang",
						"in": "query",
						"description": "Return strings in the language requested (if a given object has no name in the requested language, null will be returned).",
						"type": "string"
					},
					{
						"name": "query",
						"in": "query",
						"description": "A valid MQL query in the json format.",
						"type": "string"
					},
					{
						"name": "uniqueness_failure",
						"in": "query",
						"description": "How MQL responds to uniqueness failures.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/mqlwrite": {
			"post": {
				"summary": "Read MQL",
				"description": "Read MQL",
				"operationId": "read-mql",
				"parameters": [
					{
						"name": "query",
						"in": "query",
						"description": "A valid MQL query in the json format.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/search": {
			"get": {
				"summary": "",
				"description": "",
				"operationId": "",
				"parameters": [
					{
						"name": "callback",
						"in": "query",
						"description": "JS method name for JSONP callbacks.",
						"type": "string"
					},
					{
						"name": "domain",
						"in": "query",
						"description": "A comma separated list of domain IDs. Search results must include these domains.",
						"type": "string"
					},
					{
						"name": "exact",
						"in": "query",
						"description": "Matches only the name, and keys exactly. No normalization of any kind is done at indexing and query time. The text is only broken up on space characters.",
						"type": "boolean"
					},
					{
						"name": "filter",
						"in": "query",
						"description": "A Filter s-expression.",
						"type": "string"
					},
					{
						"name": "html_escape",
						"in": "query",
						"description": "Whether or not to escape entities.",
						"type": "boolean"
					},
					{
						"name": "indent",
						"in": "query",
						"description": "Whether to indent the json.",
						"type": "boolean"
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Return up to this number of results. (integer >= 1)",
						"type": "integer"
					},
					{
						"name": "mql_output",
						"in": "query",
						"description": "A MQL query thats extracts entity information.",
						"type": "string"
					},
					{
						"name": "prefixed",
						"in": "query",
						"description": "Whether or not to match by name prefix (used for autosuggest).",
						"type": "boolean"
					},
					{
						"name": "query",
						"in": "query",
						"description": "The text you want to match against freebase entities.",
						"type": "string"
					},
					{
						"name": "start",
						"in": "query",
						"description": "Allows paging through results. (integer >= 0)",
						"type": "integer"
					},
					{
						"name": "type",
						"in": "query",
						"description": "A comma seperated list of type IDs. Search results must include these types.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/text{id}": {
			"get": {
				"summary": "Write MQL",
				"description": "Write MQL",
				"operationId": "write-mql",
				"parameters": [
					{
						"name": "format",
						"in": "query",
						"description": "Sanitizing transformation.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "The id of the entity that you want a description for.",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "lang",
						"in": "query",
						"description": "The desired language of the content.",
						"type": "string"
					},
					{
						"name": "maxlength",
						"in": "query",
						"description": "The max number of characters to return. Valid only for plain format. (integer 0-4,294,967,295)",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	}
}