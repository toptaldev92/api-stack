{
	"swagger": "2.0",
	"info": {
		"title": "YellowPages API",
		"description": "The YP Developer Program provides open APIs to access listings data, user ratings, coupons, and functionality such as local search and mapping.",
		"termsOfService": "http://resourcecenter.yp.com/developer/terms-use",
		"version": "v1"
	},
	"host": "api2.yp.com",
	"basePath": "/content/v1",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/coupons": {
			"get": {
				"summary": "Get Business Listing Reviews",
				"description": "Get Business Listing Reviews",
				"operationId": "get-business-listing-reviews",
				"parameters": [{
					"in": "query",
					"name": "format",
					"description": "Desired format of the response. Possible values: xml and json. Defaults to xml.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "searchloc",
					"description": "Unparsed, user-entered search location. Please ensure that all values are URL encoded.Valid inputs are:- city, state (example: searchloc=Glendale%2C+CA).- zip code (example: searchloc=91203).- lat:long (example: searchloc=37.7752%3A-122.4192 for San Francisco,CA).- street1 and street2, city, state (example: searchloc=olive+and+san+fernando%2C+burbank+CA).- street1 and street2, zip (example: searchloc=olive+and+san+fernando%2C+91502).- street, zip (example: searchloc=611+North+Brand%2C+91203).- s",
					"type": "string"
				},
				{
					"in": "query",
					"name": "term",
					"description": "Unparsed, user-entered search term. Note: For applications where users may provide the search term and location in a single input field (e.g. pizza, Los Angeles), the user-entered value can be sent in the term parameter thus avoiding the need to parse the term and location on the client side.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/deals": {
			"get": {
				"summary": "Get Coupons Near Location",
				"description": "Get Coupons Near Location",
				"operationId": "get-coupons-near-location",
				"parameters": [{
					"in": "query",
					"name": "searchloc",
					"description": "Unparsed, user-entered search location. Please ensure that all values are URL encoded.Valid inputs are:- city, state (example: searchloc=Glendale%2C+CA).- zip code (example: searchloc=91203).- lat:long (example: searchloc=37.7752%3A-122.4192 for San Francisco,CA).- street1 and street2, city, state (example: searchloc=olive+and+san+fernando%2C+burbank+CA).- street1 and street2, zip (example: searchloc=olive+and+san+fernando%2C+91502).- street, zip (example: searchloc=611+North+Brand%2C+91203).- s",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/details": {
			"get": {
				"summary": "Search Listings",
				"description": "Search Listings",
				"operationId": "search-listings",
				"parameters": [{
					"in": "query",
					"name": "format",
					"description": "Desired format of the response. Possible values: xml and json. Defaults to xml.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "listingid",
					"description": "The unique identifier for the business listing.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "User-Agent",
					"description": "User agent.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/listingmap": {
			"get": {
				"summary": "",
				"description": "",
				"operationId": "",
				"parameters": [{
					"in": "query",
					"name": "image_format",
					"description": "String representing the mime-type of map you want returned. Valid values: jpg, png and gif.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "listingid",
					"description": "YP listing ID.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pan_horizontal",
					"description": "A positive or negative number reflecting the percentage of the map image to pan west (negative) or east (positive). (Default = 0). Examples: 0.5 (50% east) -0.4 (40% west). Postiive numbers tilt to the north, negative numbers tilt to the south.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pan_vertical",
					"description": "A positive or negative number reflecting the percentage of the map image to pan south (negative) or north (positive). (Default = 0). Examples: 0.5 (50% north) -0.4 (40% south). Postiive numbers tilt to the north, negative numbers tilt to the south.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pixel_height",
					"description": "Integer representing the height in pixels of the map (Default = 400). Examples: 400, 200, 123.",
					"type": "integer"
				},
				{
					"in": "query",
					"name": "pixel_width",
					"description": "Integer representing the width in pixels of the map (Default = 400). Examples: 400, 200, 123.",
					"type": "integer"
				},
				{
					"in": "query",
					"name": "zoom",
					"description": "Sets the zoom factor for the map, expressed as a fraction from .1 to 1.",
					"type": "decimal"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/reviews": {
			"get": {
				"summary": "Get Business Listing Details",
				"description": "Get Business Listing Details",
				"operationId": "get-business-listing-details",
				"parameters": [{
					"in": "query",
					"name": "format",
					"description": "Desired format of the response. Possible values: xml and json. Defaults to xml.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "listingid",
					"description": "The unique identifier for the business listing.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/search": {
			"get": {
				"summary": "Get Business Listing Map",
				"description": "Get Business Listing Map",
				"operationId": "get-business-listing-map",
				"parameters": [{
					"in": "query",
					"name": "format",
					"description": "Desired format of the response. Possible values: xml and json. Defaults to xml.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "listingcount",
					"description": "Total number of listings to return. Defaults to 5.",
					"type": "integer"
				},
				{
					"in": "query",
					"name": "pagenum",
					"description": "The page index of the block of results to return. Defaults to 1.",
					"type": "integer"
				},
				{
					"in": "query",
					"name": "phonesearch",
					"description": "Indicates that the term parameter contains a phone number, formatted as a 10-digit integer, e.g. 8775551212.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "radius",
					"description": "Maximum search radius (in miles) from center of target location for Organic Results (only).",
					"type": "integer"
				},
				{
					"in": "query",
					"name": "searchloc",
					"description": "Unparsed, user-entered search location. Please ensure that all values are URL encoded. If no value is passed for searchloc, then the search engine will attempt to find a valid geo location string in the term parameters value.Valid inputs are:- city, state (example: searchloc=Glendale%2C+CA).- zip code (example: searchloc=91203).- lat:long (example: searchloc=37.7752%3A-122.4192 for San Francisco,CA).- street1 and street2, city, state (example: searchloc=olive+and+san+fernando%2C+burbank+CA).- s",
					"type": "string"
				},
				{
					"in": "query",
					"name": "shorturl",
					"description": "Enables short URL formats in the API response. Typically only used for SMS applications. Set to true for short URL format. Defaults to false.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "Select the sort criteria for Organic Listings (only).Valid inputs are:- distance: Sort results by distance.- name: Sort results alphabetically by name.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "term",
					"description": "Unparsed, user-entered search term. Note: For applications where users may provide the search term and location in a single input field (e.g. pizza, Los Angeles), the user-entered value can be sent in the term parameter thus avoiding the need to parse the term and location on the client side. To make this work, do not send a value for searchloc.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "User-Agent",
					"description": "User agent.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		}
	},
	"definitions": []
}