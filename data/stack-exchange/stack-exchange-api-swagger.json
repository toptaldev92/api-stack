{
	"swagger": "2.0",
	"info": {
		"title": "Stack Exchange API",
		"description": "Stack Exchange is a growing network of 89 question and answer sites on diverse topics from software programming to cooking to photography. Stack Exchange builds libraries of high-quality questions and answers focused on the most important topics in each area of expertise. The Stack Exchange API enables users to retrieve answers, comments, badges, events, questions, revisions, suggested edits, user information, and tags from the site. Users can also use the API to search the site or edit posts. The API uses REST calls issued in JSON and JSONP.",
		"termsOfService": "http://stackexchange.com/legal/api-terms-of-use",
		"version": "2.2"
	},
	"host": "api.stackexchange.com",
	"basePath": "/2.2",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/answers": {
			"get": {
				"summary": "",
				"description": "",
				"operationId": "",
				"parameters": [
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/answers/{ids}": {
			"get": {
				"summary": "Get Answers",
				"description": "Get Answers",
				"operationId": "get-answers",
				"parameters": [
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/answers/{ids}/comments": {
			"get": {
				"summary": "Get Answers By Ids",
				"description": "Get Answers By Ids",
				"operationId": "get-answers-by-ids",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/badges": {
			"get": {
				"summary": "Get Answers Comments By Ids",
				"description": "Get Answers Comments By Ids",
				"operationId": "get-answers-comments-by-ids",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/badges/name": {
			"get": {
				"summary": "Get Badge Recipients",
				"description": "Get Badge Recipients",
				"operationId": "get-badge-recipients",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/badges/tags": {
			"get": {
				"summary": "Get Non Tagged Badges",
				"description": "Get Non Tagged Badges",
				"operationId": "get-non-tagged-badges",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/badges/{ids}": {
			"get": {
				"summary": "Get Badges",
				"description": "Get Badges",
				"operationId": "get-badges",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/comments": {
			"get": {
				"summary": "Get Tagged Badges",
				"description": "Get Tagged Badges",
				"operationId": "get-tagged-badges",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/comments/{ids}": {
			"get": {
				"summary": "Get Comments",
				"description": "Get Comments",
				"operationId": "get-comments",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/errors/{id}": {
			"get": {
				"summary": "Get Posts' Comments By Ids",
				"description": "Get Posts' Comments By Ids",
				"operationId": "get-posts-comments-by-ids",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "id of the error to simulate. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/posts/{ids}/comments": {
			"get": {
				"summary": "Get Comments By Ids",
				"description": "Get Comments By Ids",
				"operationId": "get-comments-by-ids",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/privileges": {
			"get": {
				"summary": "Simulate API Error",
				"description": "Simulate API Error",
				"operationId": "simulate-api-error",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "id of the error to simulate. 32-bit signed integer",
						"type": "int"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/questions": {
			"get": {
				"summary": "Get Privileges",
				"description": "Get Privileges",
				"operationId": "get-privileges",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "tagged",
						"in": "query",
						"description": "Semicolon delimited list of tags questions must have. string",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/questions/no-answers": {
			"get": {
				"summary": "Get Unanswered Questions",
				"description": "Get Unanswered Questions",
				"operationId": "get-unanswered-questions",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "tagged",
						"in": "query",
						"description": "Semicolon delimited list of tags questions must have. string",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/questions/unanswered": {
			"get": {
				"summary": "Get Questions' Timelines By Ids",
				"description": "Get Questions' Timelines By Ids",
				"operationId": "get-questions-timelines-by-ids",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "tagged",
						"in": "query",
						"description": "Semicolon delimited list of tags questions must have. string",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/questions/{ids}": {
			"get": {
				"summary": "Get Questions",
				"description": "Get Questions",
				"operationId": "get-questions",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/questions/{ids}/answers": {
			"get": {
				"summary": "Get Questions By Ids",
				"description": "Get Questions By Ids",
				"operationId": "get-questions-by-ids",
				"parameters": [
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/questions/{ids}/comments": {
			"get": {
				"summary": "Get Questions' Answers By Ids",
				"description": "Get Questions' Answers By Ids",
				"operationId": "get-questions-answers-by-ids",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/questions/{ids}/linked": {
			"get": {
				"summary": "Get Questions' Comments By Ids",
				"description": "Get Questions' Comments By Ids",
				"operationId": "get-questions-comments-by-ids",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/questions/{ids}/related": {
			"get": {
				"summary": "Get Linked Questions By Ids",
				"description": "Get Linked Questions By Ids",
				"operationId": "get-linked-questions-by-ids",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/questions/{ids}/timeline": {
			"get": {
				"summary": "Get Related Questions By Ids",
				"description": "Get Related Questions By Ids",
				"operationId": "get-related-questions-by-ids",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/revisions/{ids}": {
			"get": {
				"summary": "Get Questions With No Answers",
				"description": "Get Questions With No Answers",
				"operationId": "get-questions-with-no-answers",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/revisions/{id}/{revisionguid}": {
			"get": {
				"summary": "Get Posts' Revisions By Ids",
				"description": "Get Posts' Revisions By Ids",
				"operationId": "get-posts-revisions-by-ids",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "id",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. string",
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "revisionguid",
						"in": "query",
						"description": "specific revision id. guid, 8-4-4-4-12 format",
						"type": "string"
					},
					{
						"name": "revisionguid",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/search": {
			"get": {
				"summary": "Get Post's Specific Revision",
				"description": "Get Post's Specific Revision",
				"operationId": "get-posts-specific-revision",
				"parameters": [
					{
						"name": "inline",
						"in": "query",
						"description": "A string that must appear verbatim in the title of a question. string",
						"type": "xsd:string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "nottagged",
						"in": "query",
						"description": "List of tags delimited by semi-colons of which at least one must be on a question. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "tagged",
						"in": "query",
						"description": "List of tags delimited by semi-colons of which at least one must be on a question. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "xsd:string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/similar": {
			"get": {
				"summary": "Search Questions By Criteria",
				"description": "Search Questions By Criteria",
				"operationId": "search-questions-by-criteria",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "nottagged",
						"in": "query",
						"description": "List of tags delimited by semi-colons of which at least one must be on a question. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "tagged",
						"in": "query",
						"description": "List of tags delimited by semi-colons of which at least one must be on a question. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "title",
						"in": "query",
						"description": "A title. string",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/stats": {
			"get": {
				"summary": "Search Similar Questions By Title",
				"description": "Search Similar Questions By Title",
				"operationId": "search-similar-questions-by-title",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "nottagged",
						"in": "query",
						"description": "List of tags delimited by semi-colons of which at least one must be on a question. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "tagged",
						"in": "query",
						"description": "List of tags delimited by semi-colons of which at least one must be on a question. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "title",
						"in": "query",
						"description": "A title. string",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/tags": {
			"get": {
				"summary": "Get Stats",
				"description": "Get Stats",
				"operationId": "get-stats",
				"parameters": [
					{
						"name": "filter",
						"in": "query",
						"description": "Required text in returned tags. string",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/tags/synonyms": {
			"get": {
				"summary": "Get Tags",
				"description": "Get Tags",
				"operationId": "get-tags",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/tags/{tags}/synonyms": {
			"get": {
				"summary": "Get Tags' Synonyms",
				"description": "Get Tags' Synonyms",
				"operationId": "get-tags-synonyms",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "tags",
						"in": "query",
						"description": "The tags for which to return synonyms. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "tags",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/tags/{tags}/wikis": {
			"get": {
				"summary": "Get Specific Tags Synonyms",
				"description": "Get Specific Tags Synonyms",
				"operationId": "get-specific-tags-synonyms",
				"parameters": [
					{
						"name": "tags",
						"in": "query",
						"description": "The tags for which to return wikis. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "tags",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/tags/{tag}/top-answerers/{period}": {
			"get": {
				"summary": "Get Tags' Wikis",
				"description": "Get Tags' Wikis",
				"operationId": "get-tags-wikis",
				"parameters": [
					{
						"name": "period",
						"in": "query",
						"description": "One of all-time or month. string",
						"type": "string"
					},
					{
						"name": "period",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "The tags in question. string",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/tags/{tag}/top-askers/{period}": {
			"get": {
				"summary": "Get Tag Top Answerers By Period",
				"description": "Get Tag Top Answerers By Period",
				"operationId": "get-tag-top-answerers-by-period",
				"parameters": [
					{
						"name": "period",
						"in": "query",
						"description": "One of all-time or month. string",
						"type": "string"
					},
					{
						"name": "period",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "query",
						"description": "The tags in question. string",
						"type": "string"
					},
					{
						"name": "tag",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users": {
			"get": {
				"summary": "Get Tag Top Askers By Period",
				"description": "Get Tag Top Askers By Period",
				"operationId": "get-tag-top-askers-by-period",
				"parameters": [
					{
						"name": "filter",
						"in": "query",
						"description": "String that must appear in returned users names",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/moderators": {
			"get": {
				"summary": "Get User's Questions Top Tags",
				"description": "Get User's Questions Top Tags",
				"operationId": "get-users-questions-top-tags",
				"parameters": [
					{
						"name": "filter",
						"in": "query",
						"description": "String that must appear in returned users names. string",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}": {
			"get": {
				"summary": "Get Users",
				"description": "Get Users",
				"operationId": "get-users",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/answers": {
			"get": {
				"summary": "Get Users By Ids",
				"description": "Get Users By Ids",
				"operationId": "get-users-by-ids",
				"parameters": [
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/badges": {
			"get": {
				"summary": "Get Users' Answers By Ids",
				"description": "Get Users' Answers By Ids",
				"operationId": "get-users-answers-by-ids",
				"parameters": [
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/comments": {
			"get": {
				"summary": "Get Users' Badges By Ids",
				"description": "Get Users' Badges By Ids",
				"operationId": "get-users-badges-by-ids",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/comments/{toid}": {
			"get": {
				"summary": "Get Users' Comments By Ids",
				"description": "Get Users' Comments By Ids",
				"operationId": "get-users-comments-by-ids",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "toid",
						"in": "query",
						"description": "id of the user referred to. 32-bit signed integer",
						"type": "string"
					},
					{
						"name": "toid",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/favorites": {
			"get": {
				"summary": "Get Reply Users' Comments By Ids",
				"description": "Get Reply Users' Comments By Ids",
				"operationId": "get-reply-users-comments-by-ids",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/questions": {
			"get": {
				"summary": "Get Comments Mentioning Users By Ids",
				"description": "Get Comments Mentioning Users By Ids",
				"operationId": "get-comments-mentioning-users-by-ids",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/questions/no-answers": {
			"get": {
				"summary": "Get Users' Asked Questions By Ids",
				"description": "Get Users' Asked Questions By Ids",
				"operationId": "get-users-asked-questions-by-ids",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/questions/unaccepted": {
			"get": {
				"summary": "Get Users' Asked Questions With No Answers By Ids",
				"description": "Get Users' Asked Questions With No Answers By Ids",
				"operationId": "get-users-asked-questions-with-no-answers-by-ids",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/questions/unanswered": {
			"get": {
				"summary": "Get Unaccepted Users' Asked Questions By Ids",
				"description": "Get Unaccepted Users' Asked Questions By Ids",
				"operationId": "get-unaccepted-users-asked-questions-by-ids",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/reputation": {
			"get": {
				"summary": "Get Unanswered Users' Asked Questions By Ids",
				"description": "Get Unanswered Users' Asked Questions By Ids",
				"operationId": "get-unanswered-users-asked-questions-by-ids",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/tags": {
			"get": {
				"summary": "Get Users' Reputation Changes Subset By Ids",
				"description": "Get Users' Reputation Changes Subset By Ids",
				"operationId": "get-users-reputation-changes-subset-by-ids",
				"parameters": [
					{
						"name": "filter",
						"in": "query",
						"description": "Required text in returned tags. string",
						"type": "string"
					},
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "max",
						"in": "query",
						"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "min",
						"in": "query",
						"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date",
						"type": "string"
					},
					{
						"name": "order",
						"in": "query",
						"description": "How the current sort should be ordered. one of desc (default), or asc",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "How a collection should be sorted. one of activity (default), creation, or votes",
						"type": "string"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{ids}/timeline": {
			"get": {
				"summary": "Get User Posted Top Questions With Tags",
				"description": "Get User Posted Top Questions With Tags",
				"operationId": "get-user-posted-top-questions-with-tags",
				"parameters": [
					{
						"name": "fromdate",
						"in": "query",
						"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "todate",
						"in": "query",
						"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{id}/tags/{tags}/top-answers": {
			"get": {
				"summary": "Get Tags Users Being Active By Ids",
				"description": "Get Tags Users Being Active By Ids",
				"operationId": "get-tags-users-being-active-by-ids",
				"parameters": [
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "id",
						"in": "query",
						"description": "the id of a user. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "tags",
						"in": "query",
						"description": "a semi-colon delimitted list of tags the questions the answers are on must have. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "tags",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{id}/tags/{tags}/top-questions": {
			"get": {
				"summary": "Get User Posted Top Answers With Tags",
				"description": "Get User Posted Top Answers With Tags",
				"operationId": "get-user-posted-top-answers-with-tags",
				"parameters": [
					{
						"name": "answers",
						"in": "query",
						"description": "When true, the answers to a question will be returned. boolean",
						"type": "boolean"
					},
					{
						"name": "body",
						"in": "query",
						"description": "When true, a posts body will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "comments",
						"in": "query",
						"description": "When true, any comments on a post will be included in the response. boolean",
						"type": "boolean"
					},
					{
						"name": "id",
						"in": "query",
						"description": "the id of a user. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "tags",
						"in": "query",
						"description": "a semi-colon delimitted list of tags the questions the answers are on must have. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string",
						"type": "string"
					},
					{
						"name": "tags",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{id}/top-answer-tags": {
			"get": {
				"summary": "Get Users' Actions Subset By Ids",
				"description": "Get Users' Actions Subset By Ids",
				"operationId": "get-users-actions-subset-by-ids",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "The single user id to query with. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/users/{id}/top-question-tags": {
			"get": {
				"summary": "Get User's Answers Top Tags",
				"description": "Get User's Answers Top Tags",
				"operationId": "get-users-answers-top-tags",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "The single user id to query with. 32-bit signed integer",
						"type": "int"
					},
					{
						"name": "id",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	}
}