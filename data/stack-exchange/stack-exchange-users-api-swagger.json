{
	"swagger": "2.0",
	"info": {
		"title": "Stack Exchange Users API",
		"description": "The API for managing Stack Exchange Users API.",
		"termsOfService": "http://stackexchange.com/legal/api-terms-of-use",
		"version": "2.2"
	},
	"host": "api.stackexchange.com",
	"basePath": "/2.2",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/users": {
			"get": {
				"summary": "Get Tag Top Askers By Period",
				"description": "Get Tag Top Askers By Period",
				"operationId": "get-tag-top-askers-by-period",
				"parameters": [{
					"in": "query",
					"name": "filter",
					"description": "String that must appear in returned users names"
				},
				{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/moderators": {
			"get": {
				"summary": "Get User's Questions Top Tags",
				"description": "Get Users Questions Top Tags",
				"operationId": "get-users-questions-top-tags",
				"parameters": [{
					"in": "query",
					"name": "filter",
					"description": "String that must appear in returned users names. string"
				},
				{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}": {
			"get": {
				"summary": "Get Users",
				"description": "Get Users",
				"operationId": "get-users",
				"parameters": [{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/answers": {
			"get": {
				"summary": "Get Users By Ids",
				"description": "Get Users By Ids",
				"operationId": "get-users-by-ids",
				"parameters": [{
					"in": "query",
					"name": "body",
					"description": "When true, a posts body will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "comments",
					"description": "When true, any comments on a post will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/badges": {
			"get": {
				"summary": "Get Users' Answers By Ids",
				"description": "Get Users Answers By Ids",
				"operationId": "get-users-answers-by-ids",
				"parameters": [{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/comments": {
			"get": {
				"summary": "Get Users' Badges By Ids",
				"description": "Get Users Badges By Ids",
				"operationId": "get-users-badges-by-ids",
				"parameters": [{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/comments/{toid}": {
			"get": {
				"summary": "Get Users' Comments By Ids",
				"description": "Get Users Comments By Ids",
				"operationId": "get-users-comments-by-ids",
				"parameters": [{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "toid",
					"description": "id of the user referred to. 32-bit signed integer"
				},
				{
					"in": "path",
					"name": "toid"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/favorites": {
			"get": {
				"summary": "Get Reply Users' Comments By Ids",
				"description": "Get Reply Users Comments By Ids",
				"operationId": "get-reply-users-comments-by-ids",
				"parameters": [{
					"in": "query",
					"name": "answers",
					"description": "When true, the answers to a question will be returned. boolean"
				},
				{
					"in": "query",
					"name": "body",
					"description": "When true, a posts body will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "comments",
					"description": "When true, any comments on a post will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/questions": {
			"get": {
				"summary": "Get Comments Mentioning Users By Ids",
				"description": "Get Comments Mentioning Users By Ids",
				"operationId": "get-comments-mentioning-users-by-ids",
				"parameters": [{
					"in": "query",
					"name": "answers",
					"description": "When true, the answers to a question will be returned. boolean"
				},
				{
					"in": "query",
					"name": "body",
					"description": "When true, a posts body will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "comments",
					"description": "When true, any comments on a post will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/questions/no-answers": {
			"get": {
				"summary": "Get Users' Asked Questions By Ids",
				"description": "Get Users Asked Questions By Ids",
				"operationId": "get-users-asked-questions-by-ids",
				"parameters": [{
					"in": "query",
					"name": "answers",
					"description": "When true, the answers to a question will be returned. boolean"
				},
				{
					"in": "query",
					"name": "body",
					"description": "When true, a posts body will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "comments",
					"description": "When true, any comments on a post will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/questions/unaccepted": {
			"get": {
				"summary": "Get Users' Asked Questions With No Answers By Ids",
				"description": "Get Users Asked Questions With No Answers By Ids",
				"operationId": "get-users-asked-questions-with-no-answers-by-ids",
				"parameters": [{
					"in": "query",
					"name": "answers",
					"description": "When true, the answers to a question will be returned. boolean"
				},
				{
					"in": "query",
					"name": "body",
					"description": "When true, a posts body will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "comments",
					"description": "When true, any comments on a post will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/questions/unanswered": {
			"get": {
				"summary": "Get Unaccepted Users' Asked Questions By Ids",
				"description": "Get Unaccepted Users Asked Questions By Ids",
				"operationId": "get-unaccepted-users-asked-questions-by-ids",
				"parameters": [{
					"in": "query",
					"name": "answers",
					"description": "When true, the answers to a question will be returned. boolean"
				},
				{
					"in": "query",
					"name": "body",
					"description": "When true, a posts body will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "comments",
					"description": "When true, any comments on a post will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/reputation": {
			"get": {
				"summary": "Get Unanswered Users' Asked Questions By Ids",
				"description": "Get Unanswered Users Asked Questions By Ids",
				"operationId": "get-unanswered-users-asked-questions-by-ids",
				"parameters": [{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/tags": {
			"get": {
				"summary": "Get Users' Reputation Changes Subset By Ids",
				"description": "Get Users Reputation Changes Subset By Ids",
				"operationId": "get-users-reputation-changes-subset-by-ids",
				"parameters": [{
					"in": "query",
					"name": "filter",
					"description": "Required text in returned tags. string"
				},
				{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "max",
					"description": "Maximum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "min",
					"description": "Minimum of the range to include in the response according to the current sort. integer or unix epoch date"
				},
				{
					"in": "query",
					"name": "order",
					"description": "How the current sort should be ordered. one of desc (default), or asc"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "How a collection should be sorted. one of activity (default), creation, or votes"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{ids}/timeline": {
			"get": {
				"summary": "Get User Posted Top Questions With Tags",
				"description": "Get User Posted Top Questions With Tags",
				"operationId": "get-user-posted-top-questions-with-tags",
				"parameters": [{
					"in": "query",
					"name": "fromdate",
					"description": "Unix timestamp of the minimum creation date on a returned item. unix epoch date, range [0, 253,402,300,799]"
				},
				{
					"in": "query",
					"name": "ids",
					"description": "A single primary key identifier or a vectorized, semicolon-delimited list of identifiers. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "ids"
				},
				{
					"in": "query",
					"name": "page",
					"description": "The pagination offset for the current collection. Affected by the specified pagesize. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "pagesize",
					"description": "The number of collection results to display during pagination. Should be between 0 and 100 inclusive. 32-bit signed integer"
				},
				{
					"in": "query",
					"name": "todate",
					"description": "Unix timestamp of the maximum creation date on a returned item. Unix epoch date, range [0, 253,402,300,799]"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{id}/tags/{tags}/top-answers": {
			"get": {
				"summary": "Get Tags Users Being Active By Ids",
				"description": "Get Tags Users Being Active By Ids",
				"operationId": "get-tags-users-being-active-by-ids",
				"parameters": [{
					"in": "query",
					"name": "body",
					"description": "When true, a posts body will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "comments",
					"description": "When true, any comments on a post will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "id",
					"description": "the id of a user. 32-bit signed integer"
				},
				{
					"in": "path",
					"name": "id"
				},
				{
					"in": "query",
					"name": "tags",
					"description": "a semi-colon delimitted list of tags the questions the answers are on must have. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "tags"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{id}/tags/{tags}/top-questions": {
			"get": {
				"summary": "Get User Posted Top Answers With Tags",
				"description": "Get User Posted Top Answers With Tags",
				"operationId": "get-user-posted-top-answers-with-tags",
				"parameters": [{
					"in": "query",
					"name": "answers",
					"description": "When true, the answers to a question will be returned. boolean"
				},
				{
					"in": "query",
					"name": "body",
					"description": "When true, a posts body will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "comments",
					"description": "When true, any comments on a post will be included in the response. boolean"
				},
				{
					"in": "query",
					"name": "id",
					"description": "the id of a user. 32-bit signed integer"
				},
				{
					"in": "path",
					"name": "id"
				},
				{
					"in": "query",
					"name": "tags",
					"description": "a semi-colon delimitted list of tags the questions the answers are on must have. This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon. string"
				},
				{
					"in": "path",
					"name": "tags"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{id}/top-answer-tags": {
			"get": {
				"summary": "Get Users' Actions Subset By Ids",
				"description": "Get Users Actions Subset By Ids",
				"operationId": "get-users-actions-subset-by-ids",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The single user id to query with. 32-bit signed integer"
				},
				{
					"in": "path",
					"name": "id"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/users/{id}/top-question-tags": {
			"get": {
				"summary": "Get User's Answers Top Tags",
				"description": "Get Users Answers Top Tags",
				"operationId": "get-users-answers-top-tags",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The single user id to query with. 32-bit signed integer"
				},
				{
					"in": "path",
					"name": "id"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		}
	},
	"definitions": []
}