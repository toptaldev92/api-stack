{
	"swagger": "2.0",
	"info": {
		"title": "Facebook",
		"description": "Learn how to build and grow your app or website with Facebook.",
		"termsOfService": "https://developers.facebook.com/policy",
		"version": "v2.2"
	},
	"host": "https://graph.facebook.com",
	"basePath": "/v2.2",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"/search": {
			"get": {
				"summary": "",
				"description": "",
				"operationId": "",
				"parameters": [
					{
						"name": "q",
						"in": "query",
						"description": "The search string",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "Supports these types of objects: All public posts (post), people (user), pages (page), events (event), groups (group), check-ins (checkin)",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{album}": {
			"get": {
				"summary": "/search",
				"description": "/search",
				"operationId": "search",
				"parameters": [
					{
						"name": "album",
						"in": "query",
						"description": "Represents the ID of the album object.",
						"type": "string"
					},
					{
						"name": "album",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{album}/comments": {
			"post": {
				"summary": "{album}/comments (GET)",
				"description": "{album}/comments (GET)",
				"operationId": "albumcomments-get",
				"parameters": [
					{
						"name": "album",
						"in": "query",
						"description": "Represents the ID of the album object.",
						"type": "string"
					},
					{
						"name": "album",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Comment text",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{album}/likes": {
			"post": {
				"summary": "{album}/likes (GET)",
				"description": "{album}/likes (GET)",
				"operationId": "albumlikes-get",
				"parameters": [
					{
						"name": "album",
						"in": "query",
						"description": "Represents the ID of the album object.",
						"type": "string"
					},
					{
						"name": "album",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{album}/photos": {
			"post": {
				"summary": "{album}/photos (GET)",
				"description": "{album}/photos (GET)",
				"operationId": "albumphotos-get",
				"parameters": [
					{
						"name": "album",
						"in": "query",
						"description": "Represents the ID of the album object.",
						"type": "string"
					},
					{
						"name": "album",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Photo description",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{album}/picture": {
			"get": {
				"summary": "{album}/comments (POST)",
				"description": "{album}/comments (POST)",
				"operationId": "albumcomments-post",
				"parameters": [
					{
						"name": "album",
						"in": "query",
						"description": "Represents the ID of the album object.",
						"type": "string"
					},
					{
						"name": "album",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "One of square (50x50), small (50 pixels wide, variable height), and large (about 200 pixels wide, variable height)",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}": {
			"get": {
				"summary": "/{album}/picture",
				"description": "/{album}/picture",
				"operationId": "albumpicture",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/accounts": {
			"get": {
				"summary": "/{application}",
				"description": "/{application}",
				"operationId": "application",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/accounts/test-users": {
			"post": {
				"summary": "/{application}/accounts",
				"description": "/{application}/accounts",
				"operationId": "applicationaccounts",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "installed",
						"in": "query",
						"description": "Install app for the test user upon creation",
						"type": "boolean"
					},
					{
						"name": "name",
						"in": "query",
						"description": "A name for the test user. The specified name will also be used in the email address assigned to the test user.",
						"type": "string"
					},
					{
						"name": "permissions",
						"in": "query",
						"description": "List of extended permissions app granted for the new test user if installed is true",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/achievements": {
			"post": {
				"summary": "{application}/scores (DELETE)",
				"description": "{application}/scores (DELETE)",
				"operationId": "applicationscores-delete",
				"parameters": [
					{
						"name": "achievement",
						"in": "query",
						"description": "Unique URL to the achievement.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "display_order",
						"in": "query",
						"description": "Order of this achievement as it shows up in the achievement stories UI (low to high). For example a display order of 100 will be displayed in the UI before 200. We use this value to surface achievements according to the order the developer has specified. Please make sure this value is unique and increments in the correct order for your achievements.",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/albums": {
			"get": {
				"summary": "/{application}/accounts/test-users",
				"description": "/{application}/accounts/test-users",
				"operationId": "applicationaccountstestusers",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/feed": {
			"post": {
				"summary": "{application}/feed (GET)",
				"description": "{application}/feed (GET)",
				"operationId": "applicationfeed-get",
				"parameters": [
					{
						"name": "actions",
						"in": "query",
						"description": "Post actions",
						"type": "string"
					},
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "caption",
						"in": "query",
						"description": "Post caption",
						"type": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Post description",
						"type": "string"
					},
					{
						"name": "link",
						"in": "query",
						"description": "Link URL",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Link message",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Post name",
						"type": "string"
					},
					{
						"name": "picture",
						"in": "query",
						"description": "Post thumbnail message",
						"type": "string"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "Post privacy settings",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/insights": {
			"get": {
				"summary": "{application}/feed (POST) (Status)",
				"description": "{application}/feed (POST) (Status)",
				"operationId": "applicationfeed-post-status",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/links": {
			"post": {
				"summary": "{application}/links (GET)",
				"description": "{application}/links (GET)",
				"operationId": "applicationlinks-get",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "link",
						"in": "query",
						"description": "Link URL",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Link message",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/picture": {
			"get": {
				"summary": "{application}/links (POST)",
				"description": "{application}/links (POST)",
				"operationId": "applicationlinks-post",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "One of square (50x50), small (50 pixels wide, variable height), and large (about 200 pixels wide, variable height)",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/posts": {
			"get": {
				"summary": "/{application}/picture",
				"description": "/{application}/picture",
				"operationId": "applicationpicture",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/reviews": {
			"get": {
				"summary": "/{application}/posts",
				"description": "/{application}/posts",
				"operationId": "applicationposts",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/scores": {
			"get": {
				"summary": "{application}/translations (DELETE)",
				"description": "{application}/translations (DELETE)",
				"operationId": "applicationtranslations-delete",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/staticresources": {
			"get": {
				"summary": "/{application}/reviews",
				"description": "/{application}/reviews",
				"operationId": "applicationreviews",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/statuses": {
			"post": {
				"summary": "{application}/statuses (GET)",
				"description": "{application}/statuses (GET)",
				"operationId": "applicationstatuses-get",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Status Message content",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/subscriptions": {
			"post": {
				"summary": "{application}/subscriptions (GET)",
				"description": "{application}/subscriptions (GET)",
				"operationId": "applicationsubscriptions-get",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "callback_url",
						"in": "query",
						"description": "A callback URL to which Facebook will post subscription updates.",
						"type": "string"
					},
					{
						"name": "fields",
						"in": "query",
						"description": "List of properties for the `object` to monitor.",
						"type": "string"
					},
					{
						"name": "object",
						"in": "query",
						"description": "Object to monitor - `user`, `permissions`, or `page`.",
						"type": "string"
					},
					{
						"name": "verify_token",
						"in": "query",
						"description": "Token sent in the verification request.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/tagged": {
			"get": {
				"summary": "{application}/subscriptions (DELETE)",
				"description": "{application}/subscriptions (DELETE)",
				"operationId": "applicationsubscriptions-delete",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{application}/translations": {
			"post": {
				"summary": "{application}/translations (GET)",
				"description": "{application}/translations (GET)",
				"operationId": "applicationtranslations-get",
				"parameters": [
					{
						"name": "application",
						"in": "query",
						"description": "Represents the ID of the application object.",
						"type": "string"
					},
					{
						"name": "application",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "native_strings",
						"in": "query",
						"description": "A JSON-encoded array of strings to translate. Each element of the string array is an object, with text storing the actual string, description storing the description of the text.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{checkin}": {
			"get": {
				"summary": "{application}/achievements (DELETE)",
				"description": "{application}/achievements (DELETE)",
				"operationId": "applicationachievements-delete",
				"parameters": [
					{
						"name": "checkin",
						"in": "query",
						"description": "Represents the ID of the checkin object.",
						"type": "string"
					},
					{
						"name": "checkin",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{checkin}/comments": {
			"post": {
				"summary": "{checkin}/comments (GET)",
				"description": "{checkin}/comments (GET)",
				"operationId": "checkincomments-get",
				"parameters": [
					{
						"name": "checkin",
						"in": "query",
						"description": "Represents the ID of the checkin object.",
						"type": "string"
					},
					{
						"name": "checkin",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Comment text",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{checkin}/likes": {
			"post": {
				"summary": "{checkin}/likes (GET)",
				"description": "{checkin}/likes (GET)",
				"operationId": "checkinlikes-get",
				"parameters": [
					{
						"name": "checkin",
						"in": "query",
						"description": "Represents the ID of the checkin object.",
						"type": "string"
					},
					{
						"name": "checkin",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{comment}": {
			"get": {
				"summary": "{checkin}/likes (DELETE)",
				"description": "{checkin}/likes (DELETE)",
				"operationId": "checkinlikes-delete",
				"parameters": [
					{
						"name": "comment",
						"in": "query",
						"description": "Represents the ID of the comment object.",
						"type": "string"
					},
					{
						"name": "comment",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{comment}/likes": {
			"post": {
				"summary": "{comment}/likes (GET)",
				"description": "{comment}/likes (GET)",
				"operationId": "commentlikes-get",
				"parameters": [
					{
						"name": "comment",
						"in": "query",
						"description": "Represents the ID of the comment object.",
						"type": "string"
					},
					{
						"name": "comment",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{event}": {
			"get": {
				"summary": "{comment}/likes (DELETE)",
				"description": "{comment}/likes (DELETE)",
				"operationId": "commentlikes-delete",
				"parameters": [
					{
						"name": "event",
						"in": "query",
						"description": "Represents the ID of the event object.",
						"type": "string"
					},
					{
						"name": "event",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{event}/attending": {
			"post": {
				"summary": "{event}/attending (GET)",
				"description": "{event}/attending (GET)",
				"operationId": "eventattending-get",
				"parameters": [
					{
						"name": "event",
						"in": "query",
						"description": "Represents the ID of the event object.",
						"type": "string"
					},
					{
						"name": "event",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{event}/declined": {
			"post": {
				"summary": "{event}/declined (GET)",
				"description": "{event}/declined (GET)",
				"operationId": "eventdeclined-get",
				"parameters": [
					{
						"name": "event",
						"in": "query",
						"description": "Represents the ID of the event object.",
						"type": "string"
					},
					{
						"name": "event",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{event}/feed": {
			"post": {
				"summary": "{event}/feed (GET)",
				"description": "{event}/feed (GET)",
				"operationId": "eventfeed-get",
				"parameters": [
					{
						"name": "actions",
						"in": "query",
						"description": "Post actions",
						"type": "string"
					},
					{
						"name": "caption",
						"in": "query",
						"description": "Post caption",
						"type": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Post description",
						"type": "string"
					},
					{
						"name": "event",
						"in": "query",
						"description": "Represents the ID of the event object.",
						"type": "string"
					},
					{
						"name": "event",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "link",
						"in": "query",
						"description": "Link URL",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Link message",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Post name",
						"type": "string"
					},
					{
						"name": "picture",
						"in": "query",
						"description": "Post thumbnail image",
						"type": "string"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "Post privacy settings",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{event}/invited": {
			"get": {
				"summary": "{event}/maybe (POST)",
				"description": "{event}/maybe (POST)",
				"operationId": "eventmaybe-post",
				"parameters": [
					{
						"name": "event",
						"in": "query",
						"description": "Represents the ID of the event object.",
						"type": "string"
					},
					{
						"name": "event",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{event}/maybe": {
			"post": {
				"summary": "{event}/maybe (GET)",
				"description": "{event}/maybe (GET)",
				"operationId": "eventmaybe-get",
				"parameters": [
					{
						"name": "event",
						"in": "query",
						"description": "Represents the ID of the event object.",
						"type": "string"
					},
					{
						"name": "event",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{event}/noreply": {
			"get": {
				"summary": "{event}/feed (POST) (Status)",
				"description": "{event}/feed (POST) (Status)",
				"operationId": "eventfeed-post-status",
				"parameters": [
					{
						"name": "event",
						"in": "query",
						"description": "Represents the ID of the event object.",
						"type": "string"
					},
					{
						"name": "event",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{event}/picture": {
			"get": {
				"summary": "{event}/declined (POST)",
				"description": "{event}/declined (POST)",
				"operationId": "eventdeclined-post",
				"parameters": [
					{
						"name": "event",
						"in": "query",
						"description": "Represents the ID of the event object.",
						"type": "string"
					},
					{
						"name": "event",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "One of square (50x50), small (50 pixels wide, variable height), and large (about 200 pixels wide, variable height)",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{friendlist}": {
			"get": {
				"summary": "/{event}/picture",
				"description": "/{event}/picture",
				"operationId": "eventpicture",
				"parameters": [
					{
						"name": "friendlist",
						"in": "query",
						"description": "Represents the ID of the FriendList object.",
						"type": "string"
					},
					{
						"name": "friendlist",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{friendlist}/members": {
			"get": {
				"summary": "{friendlist} (DELETE)",
				"description": "{friendlist} (DELETE)",
				"operationId": "friendlist-delete",
				"parameters": [
					{
						"name": "friendlist",
						"in": "query",
						"description": "Represents the ID of the FriendList object.",
						"type": "string"
					},
					{
						"name": "friendlist",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{friendlist}/members/{user}": {
			"post": {
				"summary": "/{friendlist}/members",
				"description": "/{friendlist}/members",
				"operationId": "friendlistmembers",
				"parameters": [
					{
						"name": "friendlist",
						"in": "query",
						"description": "Represents the ID of the FriendList object.",
						"type": "string"
					},
					{
						"name": "friendlist",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the User to add to or remove from the friend list.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{group}": {
			"get": {
				"summary": "{friendlist}/members/{user} (DELETE)",
				"description": "{friendlist}/members/{user} (DELETE)",
				"operationId": "friendlistmembersuser-delete",
				"parameters": [
					{
						"name": "group",
						"in": "query",
						"description": "Represents the ID of the group object.",
						"type": "string"
					},
					{
						"name": "group",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{group}/docs": {
			"get": {
				"summary": "/{group}/picture",
				"description": "/{group}/picture",
				"operationId": "grouppicture",
				"parameters": [
					{
						"name": "group",
						"in": "query",
						"description": "Represents the ID of the group object.",
						"type": "string"
					},
					{
						"name": "group",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{group}/feed": {
			"post": {
				"summary": "{group}/feed (GET)",
				"description": "{group}/feed (GET)",
				"operationId": "groupfeed-get",
				"parameters": [
					{
						"name": "actions",
						"in": "query",
						"description": "Post actions",
						"type": "string"
					},
					{
						"name": "caption",
						"in": "query",
						"description": "Post caption",
						"type": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Post description",
						"type": "string"
					},
					{
						"name": "group",
						"in": "query",
						"description": "Represents the ID of the group object.",
						"type": "string"
					},
					{
						"name": "group",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "link",
						"in": "query",
						"description": "Link URL",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Link message",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Post name",
						"type": "string"
					},
					{
						"name": "picture",
						"in": "query",
						"description": "Post thumbnail image",
						"type": "string"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "Post privacy settings",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{group}/members": {
			"get": {
				"summary": "{group}/feed (POST) (Status)",
				"description": "{group}/feed (POST) (Status)",
				"operationId": "groupfeed-post-status",
				"parameters": [
					{
						"name": "group",
						"in": "query",
						"description": "Represents the ID of the group object.",
						"type": "string"
					},
					{
						"name": "group",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{group}/picture": {
			"get": {
				"summary": "/{group}/members",
				"description": "/{group}/members",
				"operationId": "groupmembers",
				"parameters": [
					{
						"name": "group",
						"in": "query",
						"description": "Represents the ID of the group object.",
						"type": "string"
					},
					{
						"name": "group",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "One of square (50x50), small (50 pixels wide, variable height), and large (about 200 pixels wide, variable height)",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{link}": {
			"get": {
				"summary": "/{group}/docs",
				"description": "/{group}/docs",
				"operationId": "groupdocs",
				"parameters": [
					{
						"name": "link",
						"in": "query",
						"description": "Represents the ID of the link object.",
						"type": "string"
					},
					{
						"name": "link",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{link}/comments": {
			"post": {
				"summary": "{link}/comments (GET)",
				"description": "{link}/comments (GET)",
				"operationId": "linkcomments-get",
				"parameters": [
					{
						"name": "link",
						"in": "query",
						"description": "Represents the ID of the link object.",
						"type": "string"
					},
					{
						"name": "link",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Comment text",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{link}/likes": {
			"post": {
				"summary": "{link}/likes (GET)",
				"description": "{link}/likes (GET)",
				"operationId": "linklikes-get",
				"parameters": [
					{
						"name": "link",
						"in": "query",
						"description": "Represents the ID of the link object.",
						"type": "string"
					},
					{
						"name": "link",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{note}": {
			"get": {
				"summary": "{link}/likes (DELETE)",
				"description": "{link}/likes (DELETE)",
				"operationId": "linklikes-delete",
				"parameters": [
					{
						"name": "note",
						"in": "query",
						"description": "Represents the ID of the note object.",
						"type": "string"
					},
					{
						"name": "note",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{note}/comments": {
			"post": {
				"summary": "{note}/comments (GET)",
				"description": "{note}/comments (GET)",
				"operationId": "notecomments-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Comment text",
						"type": "string"
					},
					{
						"name": "note",
						"in": "query",
						"description": "Represents the ID of the note object.",
						"type": "string"
					},
					{
						"name": "note",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{note}/likes": {
			"post": {
				"summary": "{note}/likes (GET)",
				"description": "{note}/likes (GET)",
				"operationId": "notelikes-get",
				"parameters": [
					{
						"name": "note",
						"in": "query",
						"description": "Represents the ID of the note object.",
						"type": "string"
					},
					{
						"name": "note",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{notification}": {
			"post": {
				"summary": "{user}/videos (POST)",
				"description": "{user}/videos (POST)",
				"operationId": "uservideos-post",
				"parameters": [
					{
						"name": "notification",
						"in": "query",
						"description": "Represents the ID of the notification.",
						"type": "string"
					},
					{
						"name": "notification",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "unread",
						"in": "query",
						"description": "",
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}": {
			"get": {
				"summary": "{note}/likes (DELETE)",
				"description": "{note}/likes (DELETE)",
				"operationId": "notelikes-delete",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/admins": {
			"get": {
				"summary": "{page}/tabs/{tab} (DELETE)",
				"description": "{page}/tabs/{tab} (DELETE)",
				"operationId": "pagetabstab-delete",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/albums": {
			"get": {
				"summary": "/{page}/groups",
				"description": "/{page}/groups",
				"operationId": "pagegroups",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/blocked": {
			"post": {
				"summary": "{page}/blocked (GET)",
				"description": "{page}/blocked (GET)",
				"operationId": "pageblocked-get",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "uids",
						"in": "query",
						"description": "Comma-separated list of the user IDs you wish to block",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/blocked/{user}": {
			"get": {
				"summary": "{page}/blocked (DELETE)",
				"description": "{page}/blocked (DELETE)",
				"operationId": "pageblocked-delete",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of a user.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/checkins": {
			"get": {
				"summary": "{page}/events (POST)",
				"description": "{page}/events (POST)",
				"operationId": "pageevents-post",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/events": {
			"post": {
				"summary": "{page}/events (GET)",
				"description": "{page}/events (GET)",
				"operationId": "pageevents-get",
				"parameters": [
					{
						"name": "end_time",
						"in": "query",
						"description": "Event end time",
						"type": "long"
					},
					{
						"name": "location",
						"in": "query",
						"description": "Event location",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Event description",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Event name",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "privacy_type",
						"in": "query",
						"description": "Event privacy setting",
						"type": "string"
					},
					{
						"name": "start_time",
						"in": "query",
						"description": "Event start time",
						"type": "long"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/feed": {
			"post": {
				"summary": "{page}/feed (GET)",
				"description": "{page}/feed (GET)",
				"operationId": "pagefeed-get",
				"parameters": [
					{
						"name": "actions",
						"in": "query",
						"description": "Post actions",
						"type": "string"
					},
					{
						"name": "caption",
						"in": "query",
						"description": "Post caption",
						"type": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Post description",
						"type": "string"
					},
					{
						"name": "link",
						"in": "query",
						"description": "Link URL",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Link message",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Post name",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "picture",
						"in": "query",
						"description": "Post thumbnail image",
						"type": "string"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "Post privacy settings",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/groups": {
			"get": {
				"summary": "{page}/photos (POST)",
				"description": "{page}/photos (POST)",
				"operationId": "pagephotos-post",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/links": {
			"post": {
				"summary": "{page}/links (GET)",
				"description": "{page}/links (GET)",
				"operationId": "pagelinks-get",
				"parameters": [
					{
						"name": "link",
						"in": "query",
						"description": "Link URL",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Link message",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/notes": {
			"post": {
				"summary": "{page}/notes (GET)",
				"description": "{page}/notes (GET)",
				"operationId": "pagenotes-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Note content",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "The subject of the Note",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/photos": {
			"post": {
				"summary": "{page}/photos (GET)",
				"description": "{page}/photos (GET)",
				"operationId": "pagephotos-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Photo description",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/picture": {
			"get": {
				"summary": "{page}/feed (POST) (Status)",
				"description": "{page}/feed (POST) (Status)",
				"operationId": "pagefeed-post-status",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "One of square (50x50), small (50 pixels wide, variable height), and large (about 200 pixels wide, variable height)",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/posts": {
			"get": {
				"summary": "{page}/notes (POST)",
				"description": "{page}/notes (POST)",
				"operationId": "pagenotes-post",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/settings": {
			"post": {
				"summary": "{page}/settings (GET)",
				"description": "{page}/settings (GET)",
				"operationId": "pagesettings-get",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "setting",
						"in": "query",
						"description": "Which single setting to update: USERS_CAN_POST, USERS_CAN_POST_PHOTOS, USERS_CAN_TAG_PHOTOS, USERS_CAN_POST_VIDEOS",
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "",
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/statuses": {
			"post": {
				"summary": "{page}/statuses (GET)",
				"description": "{page}/statuses (GET)",
				"operationId": "pagestatuses-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Status Message content",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/tabs": {
			"post": {
				"summary": "{page}/tabs (GET)",
				"description": "{page}/tabs (GET)",
				"operationId": "pagetabs-get",
				"parameters": [
					{
						"name": "app_id",
						"in": "query",
						"description": "ID of the application for which to install the tab",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/tabs/{tab}": {
			"post": {
				"summary": "{page}/tabs (POST)",
				"description": "{page}/tabs (POST)",
				"operationId": "pagetabs-post",
				"parameters": [
					{
						"name": "custom_name",
						"in": "query",
						"description": "Name to be used for the tab. If this is set to an empty string, the tab will use the applicationu2019s default tab name.",
						"type": "string"
					},
					{
						"name": "is_non_connection_landing_tab",
						"in": "query",
						"description": "Set this tab as the default landing tab for users who have not liked and are not admins of the Page. If provided, value must be true.",
						"type": "boolean"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "position",
						"in": "query",
						"description": "Order in which the tab will appear on the profile. Must be after permanent tabs and less than the number of installed tabs. Index starts at 0",
						"type": "integer"
					},
					{
						"name": "tab",
						"in": "query",
						"description": "Represents the ID of the tab.",
						"type": "string"
					},
					{
						"name": "tab",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/tagged": {
			"get": {
				"summary": "{page}/settings (POST)",
				"description": "{page}/settings (POST)",
				"operationId": "pagesettings-post",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{page}/videos": {
			"post": {
				"summary": "{page}/videos (GET)",
				"description": "{page}/videos (GET)",
				"operationId": "pagevideos-get",
				"parameters": [
					{
						"name": "description",
						"in": "query",
						"description": "Video description",
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page object.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Video title",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{photo}": {
			"get": {
				"summary": "{page}/blocked/{user} (GET)",
				"description": "{page}/blocked/{user} (GET)",
				"operationId": "pageblockeduser-get",
				"parameters": [
					{
						"name": "photo",
						"in": "query",
						"description": "Represents the ID of the photo object.",
						"type": "string"
					},
					{
						"name": "photo",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{photo}/comments": {
			"post": {
				"summary": "{photo}/comments (GET)",
				"description": "{photo}/comments (GET)",
				"operationId": "photocomments-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Comment text",
						"type": "string"
					},
					{
						"name": "photo",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "photo",
						"in": "query",
						"description": "Represents the ID of the photo object.",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{photo}/likes": {
			"post": {
				"summary": "{photo}/likes (GET)",
				"description": "{photo}/likes (GET)",
				"operationId": "photolikes-get",
				"parameters": [
					{
						"name": "photo",
						"in": "query",
						"description": "Represents the ID of the photo object.",
						"type": "string"
					},
					{
						"name": "photo",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{photo}/picture": {
			"get": {
				"summary": "{photo}/likes (DELETE)",
				"description": "{photo}/likes (DELETE)",
				"operationId": "photolikes-delete",
				"parameters": [
					{
						"name": "photo",
						"in": "query",
						"description": "Represents the ID of the photo object.",
						"type": "string"
					},
					{
						"name": "photo",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{photo}/tags": {
			"post": {
				"summary": "{photo}/tags (GET)",
				"description": "{photo}/tags (GET)",
				"operationId": "phototags-get",
				"parameters": [
					{
						"name": "photo",
						"in": "query",
						"description": "Represents the ID of the photo object.",
						"type": "string"
					},
					{
						"name": "photo",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "to",
						"in": "query",
						"description": "USER_ID of the User to tag; can also be provided in URL path",
						"type": "string"
					},
					{
						"name": "x",
						"in": "query",
						"description": "x coordinate of tag, as a percentage offset from the left edge of the picture",
						"type": "string"
					},
					{
						"name": "y",
						"in": "query",
						"description": "y coordinate of tag, as a percentage offset from the top edge of the picture",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{photo}/tags/{user}": {
			"post": {
				"summary": "{photo}/tags (POST)",
				"description": "{photo}/tags (POST)",
				"operationId": "phototags-post",
				"parameters": [
					{
						"name": "photo",
						"in": "query",
						"description": "Represents the ID of the photo object.",
						"type": "string"
					},
					{
						"name": "photo",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "x",
						"in": "query",
						"description": "x coordinate of tag, as a percentage offset from the left edge of the picture",
						"type": "string"
					},
					{
						"name": "y",
						"in": "query",
						"description": "y coordinate of tag, as a percentage offset from the top edge of the picture",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{post}": {
			"get": {
				"summary": "/{photo}/tags/{user}",
				"description": "/{photo}/tags/{user}",
				"operationId": "phototagsuser",
				"parameters": [
					{
						"name": "post",
						"in": "query",
						"description": "Represents the ID of the post object.",
						"type": "string"
					},
					{
						"name": "post",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{post}/comments": {
			"post": {
				"summary": "{post}/comments (GET)",
				"description": "{post}/comments (GET)",
				"operationId": "postcomments-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Comment text",
						"type": "string"
					},
					{
						"name": "post",
						"in": "query",
						"description": "Represents the ID of the post object.",
						"type": "string"
					},
					{
						"name": "post",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{post}/likes": {
			"post": {
				"summary": "{post}/likes (GET)",
				"description": "{post}/likes (GET)",
				"operationId": "postlikes-get",
				"parameters": [
					{
						"name": "post",
						"in": "query",
						"description": "Represents the ID of the post object.",
						"type": "string"
					},
					{
						"name": "post",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{status}": {
			"get": {
				"summary": "{post}/likes (DELETE)",
				"description": "{post}/likes (DELETE)",
				"operationId": "postlikes-delete",
				"parameters": [
					{
						"name": "status",
						"in": "query",
						"description": "Represents the ID of the status object.",
						"type": "string"
					},
					{
						"name": "status",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{status}/comments": {
			"post": {
				"summary": "{status}/comments (GET)",
				"description": "{status}/comments (GET)",
				"operationId": "statuscomments-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Comment text",
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "Represents the ID of the status object.",
						"type": "string"
					},
					{
						"name": "status",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{status}/likes": {
			"post": {
				"summary": "{status}/likes (GET)",
				"description": "{status}/likes (GET)",
				"operationId": "statuslikes-get",
				"parameters": [
					{
						"name": "status",
						"in": "query",
						"description": "Represents the ID of the status object.",
						"type": "string"
					},
					{
						"name": "status",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}": {
			"get": {
				"summary": "{status}/likes (DELETE)",
				"description": "{status}/likes (DELETE)",
				"operationId": "statuslikes-delete",
				"parameters": [
					{
						"name": "fields",
						"in": "query",
						"description": "The fields to return",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/accounts": {
			"get": {
				"summary": "/{user}",
				"description": "/{user}",
				"operationId": "user",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/achievements": {
			"post": {
				"summary": "/{user}/accounts",
				"description": "/{user}/accounts",
				"operationId": "useraccounts",
				"parameters": [
					{
						"name": "achievement",
						"in": "query",
						"description": "The unique URL of the achievement which the user achieved.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/activities": {
			"get": {
				"summary": "{user}/achievements (DELETE)",
				"description": "{user}/achievements (DELETE)",
				"operationId": "userachievements-delete",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/albums": {
			"post": {
				"summary": "{user}/albums (GET)",
				"description": "{user}/albums (GET)",
				"operationId": "useralbums-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Album description",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Album name",
						"type": "string"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "Privacy settings for the Album. Format: A JSON-encoded object that defines the privacy setting for the album, for example: {value:SELF}. Only the user can specify the privacy settings for the post.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/apprequests": {
			"get": {
				"summary": "{user}/albums (POST)",
				"description": "{user}/albums (POST)",
				"operationId": "useralbums-post",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/books": {
			"get": {
				"summary": "/{user}/apprequests",
				"description": "/{user}/apprequests",
				"operationId": "userapprequests",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/checkins": {
			"post": {
				"summary": "{user}/checkins (GET)",
				"description": "{user}/checkins (GET)",
				"operationId": "usercheckins-get",
				"parameters": [
					{
						"name": "coordinates",
						"in": "query",
						"description": "The users location, as a string containing latitude and longitude: {latitude:..., longitude: ...}",
						"type": "string"
					},
					{
						"name": "link",
						"in": "query",
						"description": "Checkin link",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Checkin description",
						"type": "string"
					},
					{
						"name": "picture",
						"in": "query",
						"description": "Checkin picture",
						"type": "string"
					},
					{
						"name": "place",
						"in": "query",
						"description": "Checkin Place ID; for example 110506962309835 for Facebook HQ",
						"type": "string"
					},
					{
						"name": "tags",
						"in": "query",
						"description": "Comma-separated list of tagged friends user IDs",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/events": {
			"post": {
				"summary": "{user}/events (GET)",
				"description": "{user}/events (GET)",
				"operationId": "userevents-get",
				"parameters": [
					{
						"name": "end_time",
						"in": "query",
						"description": "Event end time",
						"type": "long"
					},
					{
						"name": "location",
						"in": "query",
						"description": "Event location",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Event description",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Event name",
						"type": "string"
					},
					{
						"name": "privacy_type",
						"in": "query",
						"description": "Event privacy setting",
						"type": "string"
					},
					{
						"name": "start_time",
						"in": "query",
						"description": "Event start time",
						"type": "long"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/feed": {
			"post": {
				"summary": "{user}/feed (GET)",
				"description": "{user}/feed (GET)",
				"operationId": "userfeed-get",
				"parameters": [
					{
						"name": "actions",
						"in": "query",
						"description": "Post actions",
						"type": "string"
					},
					{
						"name": "caption",
						"in": "query",
						"description": "Post caption",
						"type": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Post description",
						"type": "string"
					},
					{
						"name": "link",
						"in": "query",
						"description": "Link URL",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Link message",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Post name",
						"type": "string"
					},
					{
						"name": "picture",
						"in": "query",
						"description": "Post thumbnail image",
						"type": "string"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "Post privacy settings",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/friendlists": {
			"post": {
				"summary": "{user}/feed (POST) (Status)",
				"description": "{user}/feed (POST) (Status)",
				"operationId": "userfeed-post-status",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"description": "Friend list name",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/friends": {
			"get": {
				"summary": "/{user}/friendlists",
				"description": "/{user}/friendlists",
				"operationId": "userfriendlists",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/friends/{friend}": {
			"get": {
				"summary": "/{user}/friends",
				"description": "/{user}/friends",
				"operationId": "userfriends",
				"parameters": [
					{
						"name": "friend",
						"in": "query",
						"description": "Represents the ID of the users friend.",
						"type": "string"
					},
					{
						"name": "friend",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/games": {
			"get": {
				"summary": "/{user}/friends/{friend}",
				"description": "/{user}/friends/{friend}",
				"operationId": "userfriendsfriend",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/groups": {
			"get": {
				"summary": "/{user}/games",
				"description": "/{user}/games",
				"operationId": "usergames",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/home": {
			"get": {
				"summary": "/{user}/groups",
				"description": "/{user}/groups",
				"operationId": "usergroups",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/inbox": {
			"get": {
				"summary": "/{user}/home",
				"description": "/{user}/home",
				"operationId": "userhome",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/interests": {
			"get": {
				"summary": "/{user}/inbox",
				"description": "/{user}/inbox",
				"operationId": "userinbox",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/likes": {
			"get": {
				"summary": "/{user}/interests",
				"description": "/{user}/interests",
				"operationId": "userinterests",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/likes/{page}": {
			"get": {
				"summary": "/{user}/likes",
				"description": "/{user}/likes",
				"operationId": "userlikes",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Represents the ID of the page.",
						"type": "string"
					},
					{
						"name": "page",
						"in": "path",
						"description": "",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/links": {
			"post": {
				"summary": "{user}/links (GET)",
				"description": "{user}/links (GET)",
				"operationId": "userlinks-get",
				"parameters": [
					{
						"name": "link",
						"in": "query",
						"description": "Link URL",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Link message",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/movies": {
			"get": {
				"summary": "{user}/links (POST)",
				"description": "{user}/links (POST)",
				"operationId": "userlinks-post",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/music": {
			"get": {
				"summary": "/{user}/movies",
				"description": "/{user}/movies",
				"operationId": "usermovies",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/notes": {
			"post": {
				"summary": "{user}/notes (GET)",
				"description": "{user}/notes (GET)",
				"operationId": "usernotes-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Note content",
						"type": "string"
					},
					{
						"name": "subject",
						"in": "query",
						"description": "The subject of the Note",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/notifications": {
			"get": {
				"summary": "{user}/notes (POST)",
				"description": "{user}/notes (POST)",
				"operationId": "usernotes-post",
				"parameters": [
					{
						"name": "include_read",
						"in": "query",
						"description": "Enables you to see notifications that the user has already read in addition to the ones which are unread",
						"type": "boolean"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/outbox": {
			"get": {
				"summary": "/{user}/notifications",
				"description": "/{user}/notifications",
				"operationId": "usernotifications",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/payments": {
			"get": {
				"summary": "/{user}/outbox",
				"description": "/{user}/outbox",
				"operationId": "useroutbox",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/permissions": {
			"get": {
				"summary": "/{user}/payments",
				"description": "/{user}/payments",
				"operationId": "userpayments",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/photos": {
			"post": {
				"summary": "{user}/photos (GET)",
				"description": "{user}/photos (GET)",
				"operationId": "userphotos-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Photo description",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/picture": {
			"get": {
				"summary": "{user}/photos (POST)",
				"description": "{user}/photos (POST)",
				"operationId": "userphotos-post",
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"description": "One of square (50x50), small (50 pixels wide, variable height), and large (about 200 pixels wide, variable height)",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/pokes": {
			"get": {
				"summary": "/{user}/picture",
				"description": "/{user}/picture",
				"operationId": "userpicture",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/posts": {
			"post": {
				"summary": "{user}/posts (GET)",
				"description": "{user}/posts (GET)",
				"operationId": "userposts-get",
				"parameters": [
					{
						"name": "actions",
						"in": "query",
						"description": "Post actions",
						"type": "string"
					},
					{
						"name": "caption",
						"in": "query",
						"description": "Post caption",
						"type": "string"
					},
					{
						"name": "description",
						"in": "query",
						"description": "Post description",
						"type": "string"
					},
					{
						"name": "link",
						"in": "query",
						"description": "Post URL",
						"type": "string"
					},
					{
						"name": "message",
						"in": "query",
						"description": "Post message",
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "Post name",
						"type": "string"
					},
					{
						"name": "object_attachment",
						"in": "query",
						"description": "Facebook ID for an existing picture in the Users photo albums to use as the thumbnail image. The User must be the owner of the photo, and the photo cannot be part of a message attachment.",
						"type": "string"
					},
					{
						"name": "picture",
						"in": "query",
						"description": "Post thumbnail image",
						"type": "string"
					},
					{
						"name": "privacy",
						"in": "query",
						"description": "Post privacy settings",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/scores": {
			"post": {
				"summary": "{user}/scores (GET)",
				"description": "{user}/scores (GET)",
				"operationId": "userscores-get",
				"parameters": [
					{
						"name": "score",
						"in": "query",
						"description": "Numeric score with value < 0.",
						"type": "integer"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/statuses": {
			"post": {
				"summary": "{user}/statuses (GET)",
				"description": "{user}/statuses (GET)",
				"operationId": "userstatuses-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Status Message content",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/tagged": {
			"get": {
				"summary": "{user}/statuses (POST)",
				"description": "{user}/statuses (POST)",
				"operationId": "userstatuses-post",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/television": {
			"get": {
				"summary": "/{user}/tagged",
				"description": "/{user}/tagged",
				"operationId": "usertagged",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/updates": {
			"get": {
				"summary": "/{user}/television",
				"description": "/{user}/television",
				"operationId": "usertelevision",
				"parameters": [
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{user}/videos": {
			"post": {
				"summary": "{user}/videos (GET)",
				"description": "{user}/videos (GET)",
				"operationId": "uservideos-get",
				"parameters": [
					{
						"name": "description",
						"in": "query",
						"description": "Video description",
						"type": "string"
					},
					{
						"name": "title",
						"in": "query",
						"description": "Video title",
						"type": "string"
					},
					{
						"name": "user",
						"in": "query",
						"description": "Represents the ID of the user object.",
						"type": "string"
					},
					{
						"name": "user",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{video}": {
			"get": {
				"summary": "/{notification}",
				"description": "/{notification}",
				"operationId": "notification",
				"parameters": [
					{
						"name": "video",
						"in": "query",
						"description": "Represents the ID of the video object.",
						"type": "string"
					},
					{
						"name": "video",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{video}/comments": {
			"post": {
				"summary": "{video}/comments (GET)",
				"description": "{video}/comments (GET)",
				"operationId": "videocomments-get",
				"parameters": [
					{
						"name": "message",
						"in": "query",
						"description": "Comment text",
						"type": "string"
					},
					{
						"name": "video",
						"in": "query",
						"description": "Represents the ID of the video object.",
						"type": "string"
					},
					{
						"name": "video",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{video}/likes": {
			"post": {
				"summary": "{video}/likes (GET)",
				"description": "{video}/likes (GET)",
				"operationId": "videolikes-get",
				"parameters": [
					{
						"name": "video",
						"in": "query",
						"description": "Represents the ID of the video object.",
						"type": "string"
					},
					{
						"name": "video",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"/{video}/picture": {
			"get": {
				"summary": "{video}/likes (DELETE)",
				"description": "{video}/likes (DELETE)",
				"operationId": "videolikes-delete",
				"parameters": [
					{
						"name": "video",
						"in": "query",
						"description": "Represents the ID of the video object.",
						"type": "string"
					},
					{
						"name": "video",
						"in": "path",
						"description": "",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	}
}