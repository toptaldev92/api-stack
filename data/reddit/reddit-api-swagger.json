{
	"swagger": "2.0",
	"info": {
		"title": "Reddit API",
		"description": "API access for the Reddit platform.",
		"termsOfService": "http://www.reddit.com/help/useragreement",
		"version": "1"
	},
	"host": "www.reddit.com",
	"basePath": "/",
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/api/approve": {
			"post": {
				"summary": "api/remove",
				"description": "api/remove",
				"operationId": "apiremove",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The thing to approve.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/bookmarklet": {
			"get": {
				"summary": "api/searchfeedback",
				"description": "api/searchfeedback",
				"operationId": "apisearchfeedback",
				"parameters": [{
					"in": "query",
					"name": "u",
					"description": "Array of link URLs?",
					"type": "string"
				},
				{
					"in": "query",
					"name": "what",
					"description": "Action. Accepted values: like, dislike, save.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/collapse_message": {
			"post": {
				"summary": "api/compose",
				"description": "api/compose",
				"operationId": "apicompose",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "A list of messages to collapse.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/comment": {
			"post": {
				"summary": "api/moremessages",
				"description": "api/moremessages",
				"operationId": "apimoremessages",
				"parameters": [{
					"in": "query",
					"name": "parent",
					"description": "The fullname of the thing or comment you are commenting on.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "text",
					"description": "The markdown content of the comment you are posting.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/compose": {
			"post": {
				"summary": "api/distinguish",
				"description": "api/distinguish",
				"operationId": "apidistinguish",
				"parameters": [{
					"in": "query",
					"name": "captcha",
					"description": "CAPTCHA result.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "subject",
					"description": "The subject of the message.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "text",
					"description": "The message.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "to",
					"description": "The recepient of the message.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/del": {
			"post": {
				"summary": "api/unhide",
				"description": "api/unhide",
				"operationId": "apiunhide",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The fullname of the thing to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/delete_sr_header": {
			"post": {
				"summary": "api/delete_sr_img",
				"description": "api/delete_sr_img",
				"operationId": "apidelete-sr-img",
				"parameters": [{
					"in": "query",
					"name": "img_name",
					"description": "The image to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/delete_sr_img": {
			"post": {
				"summary": "api/subreddit_stylesheet",
				"description": "api/subreddit_stylesheet",
				"operationId": "apisubreddit-stylesheet",
				"parameters": [{
					"in": "query",
					"name": "img_name",
					"description": "The image to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/delete_user": {
			"post": {
				"summary": "api/register",
				"description": "api/register",
				"operationId": "apiregister",
				"parameters": [{
					"in": "query",
					"name": "areyousure1",
					"description": "Verification. All three parameters must be yes to delete user successfully. Accepted values: yes, no",
					"type": "string"
				},
				{
					"in": "query",
					"name": "areyousure2",
					"description": "Verification. All three parameters must be yes to delete user successfully. Accepted values: yes, no",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/distinguish": {
			"post": {
				"summary": "api/approve",
				"description": "api/approve",
				"operationId": "apiapprove",
				"parameters": [{
					"in": "query",
					"name": "how",
					"description": "Accepted values: yes, no, admin.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The thing to distinguish.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/editusertext": {
			"post": {
				"summary": "api/del",
				"description": "api/del",
				"operationId": "apidel",
				"parameters": [{
					"in": "query",
					"name": "text",
					"description": "The new text.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "thing_id",
					"description": "The fullname of the thing to update.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/edit_error": {
			"post": {
				"summary": "api/bookmarklet",
				"description": "api/bookmarklet",
				"operationId": "apibookmarklet",
				"parameters": [{
					"in": "query",
					"name": "hexkey",
					"description": "Maximum 32 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "nickname",
					"description": "Maximum 1000 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "status",
					"description": "Accepted values: new, severe, interesting, normal, fixed.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/expando": {
			"post": {
				"summary": "api/info",
				"description": "api/info",
				"operationId": "apiinfo",
				"parameters": [{
					"in": "query",
					"name": "link_id",
					"description": "The link to expand.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/feedback": {
			"post": {
				"summary": "api/flaircsv",
				"description": "api/flaircsv",
				"operationId": "apiflaircsv",
				"parameters": [{
					"in": "query",
					"name": "email",
					"description": "An email.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "name",
					"description": "A name.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "reason",
					"description": "A reason for feedback. Accepted values: ad_inq (advertising inquiry), feedback, i18n (internationalization).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "text",
					"description": "The feedback.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/fetch_title": {
			"post": {
				"summary": "api/vote",
				"description": "api/vote",
				"operationId": "apivote",
				"parameters": [{
					"in": "query",
					"name": "url",
					"description": "The URL to fetch the title of.",
					"type": "anyurl"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/flair": {
			"get": {
				"summary": "api/flairlist",
				"description": "api/flairlist",
				"operationId": "apiflairlist",
				"parameters": [{
					"in": "query",
					"name": "css_class",
					"description": "The CSS class to assign to the flair text. Note: If an empty string is assigned to both text and css_class, then flair for the user will be removed.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "name",
					"description": "The name of the user.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "r",
					"description": "The name of the subreddit.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "text",
					"description": "The flair text to assign. Note: If an empty string is assigned to both text and css_class, then flair for the user will be removed.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/flaircsv.json": {
			"post": {
				"summary": "api/flair",
				"description": "api/flair",
				"operationId": "apiflair",
				"parameters": [{
					"in": "query",
					"name": "flair_csv",
					"description": "CSV file contents, up to 100 lines.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "r",
					"description": "The name of the subreddit.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/flairlist": {
			"get": {
				"summary": "api/search_reddit_names",
				"description": "api/search_reddit_names",
				"operationId": "apisearch-reddit-names",
				"parameters": [{
					"in": "query",
					"name": "after",
					"description": "Return entries starting after this user.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "before",
					"description": "Return entries starting before this user.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "limit",
					"description": "The maximum number of items to return (up to 1000).",
					"type": "positiveinteger"
				},
				{
					"in": "query",
					"name": "r",
					"description": "The name of the subreddit.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/frame": {
			"post": {
				"summary": "api/noframe",
				"description": "api/noframe",
				"operationId": "apinoframe",
				"parameters": [{
					"in": "query",
					"name": "hexkey",
					"description": "Maximum 32 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "nickname",
					"description": "Maximum 1000 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "status",
					"description": "Accepted values: new, severe, interesting, normal, fixed.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/friend": {
			"post": {
				"summary": "api/morechildren",
				"description": "api/morechildren",
				"operationId": "apimorechildren",
				"parameters": [{
					"in": "query",
					"name": "container",
					"description": "Either the current user or the subreddit.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "name",
					"description": "The user to add as a friend.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "note",
					"description": "A friend note. Maximum 300 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "type",
					"description": "Accepted values: friend, moderator, contributor, banned",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/friend_note": {
			"post": {
				"summary": "api/unfriend",
				"description": "api/unfriend",
				"operationId": "apiunfriend",
				"parameters": [{
					"in": "query",
					"name": "name",
					"description": "The friend to whom to associate the note with.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "note",
					"description": "A note. Maximum 300 characters.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/gadget": {
			"get": {
				"summary": "api/frame",
				"description": "api/frame",
				"operationId": "apiframe",
				"parameters": [{
					"in": "query",
					"name": "links",
					"description": "A list of links.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "type",
					"description": "The type of gadget? Accepted value: click.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/hide": {
			"post": {
				"summary": "api/unsave",
				"description": "api/unsave",
				"operationId": "apiunsave",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The fullname of the post to hide.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/hide_message": {
			"post": {
				"summary": "api/read_message",
				"description": "api/read_message",
				"operationId": "apiread-message",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The message to hide.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/info.{format}": {
			"get": {
				"summary": "comments/{id36}.{format}",
				"description": "comments/{id36}.{format}",
				"operationId": "commentsid36format",
				"parameters": [{
					"in": "query",
					"name": "format",
					"description": "Format of the data being returned. Accepted values: json (JSON), xml (XML)",
					"type": "string"
				},
				{
					"in": "path",
					"name": "format",
					"type": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "Format: a link ID. Specify either this or url.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "limit",
					"description": "Presumably, limits the number of links returned. Format: a number.",
					"type": "integer"
				},
				{
					"in": "query",
					"name": "url",
					"description": "Format: a URL. Specify either this or id.",
					"type": "anyuri"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/leavecontributor": {
			"post": {
				"summary": "api/leavemoderator",
				"description": "api/leavemoderator",
				"operationId": "apileavemoderator",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "ID?",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/leavemoderator": {
			"post": {
				"summary": "api/delete_user",
				"description": "api/delete_user",
				"operationId": "apidelete-user",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "ID?",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/login/{username}": {
			"post": {
				"summary": "api/expando",
				"description": "api/expando",
				"operationId": "apiexpando",
				"parameters": [{
					"in": "query",
					"name": "api_type",
					"description": "Must be json for the style of auth used in this documentation.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "passwd",
					"description": "The plain-text password for the account.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "user",
					"description": "The username to authenticate as. This is redundant, but required.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "username",
					"description": "The username to log in as.",
					"type": "string"
				},
				{
					"in": "path",
					"name": "username",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/marknsfw": {
			"post": {
				"summary": "api/fetch_title",
				"description": "api/fetch_title",
				"operationId": "apifetch-title",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The fullname of the thing to mark.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/me.json": {
			"get": {
				"summary": "user/{username}/about.json",
				"description": "user/{username}/about.json",
				"operationId": "userusernameaboutjson",
				"parameters": [{
					"in": "query",
					"name": "username",
					"description": "The name of the user whose about page to retrieve.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/morechildren": {
			"post": {
				"summary": "api/comment",
				"description": "api/comment",
				"operationId": "apicomment",
				"parameters": [{
					"in": "query",
					"name": "children",
					"description": "Children comment IDs.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "Some kind of ID.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "link_id",
					"description": "The id of the link to get the comments for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pv_hex",
					"description": "Maximum 40 characters?",
					"type": "string"
				},
				{
					"in": "query",
					"name": "where",
					"description": "Comment sorting option.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/moremessages": {
			"post": {
				"summary": "api/unhide_message",
				"description": "api/unhide_message",
				"operationId": "apiunhide-message",
				"parameters": [{
					"in": "query",
					"name": "parent_id",
					"description": "The message parent.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/noframe": {
			"post": {
				"summary": "api/edit_error",
				"description": "api/edit_error",
				"operationId": "apiedit-error",
				"parameters": [{
					"in": "query",
					"name": "hexkey",
					"description": "Maximum 32 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "nickname",
					"description": "Maximum 1000 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "status",
					"description": "Accepted values: new, severe, interesting, normal, fixed.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/password": {
			"post": {
				"summary": "api/leavecontributor",
				"description": "api/leavecontributor",
				"operationId": "apileavecontributor",
				"parameters": [{
					"in": "query",
					"name": "name",
					"description": "A username with a valid email address.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/read_message": {
			"post": {
				"summary": "api/unread_message",
				"description": "api/unread_message",
				"operationId": "apiunread-message",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The message to mark as read.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/register": {
			"post": {
				"summary": "reddits/mine.{format}",
				"description": "reddits/mine.{format}",
				"operationId": "redditsmineformat",
				"parameters": [{
					"in": "query",
					"name": "dest",
					"description": "Destination?",
					"type": "string"
				},
				{
					"in": "query",
					"name": "email",
					"description": "The users email address.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "passwd",
					"description": "The users password.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "passwd2",
					"description": "The users password, again. Has to be the same as passwd.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "reason",
					"description": "Possible accepted values: redirect, subscribe",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "rem",
					"description": "Format: boolean",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "user",
					"description": "The username to register.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/remove": {
			"post": {
				"summary": "api/editusertext",
				"description": "api/editusertext",
				"operationId": "apieditusertext",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The thing to remove.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/report": {
			"post": {
				"summary": "api/feedback",
				"description": "api/feedback",
				"operationId": "apifeedback",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The fullname of the thing to report.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/resetpassword": {
			"post": {
				"summary": "api/password",
				"description": "api/password",
				"operationId": "apipassword",
				"parameters": [{
					"in": "query",
					"name": "passwd",
					"description": "The new password.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "passwd2",
					"description": "The new password, again. Must be the same as passwd.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "reset",
					"description": "Cache key?",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/save": {
			"post": {
				"summary": "api/unmarknsfw",
				"description": "api/unmarknsfw",
				"operationId": "apiunmarknsfw",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The fullname of the post to save.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/searchfeedback": {
			"post": {
				"summary": "api/report",
				"description": "api/report",
				"operationId": "apireport",
				"parameters": [{
					"in": "query",
					"name": "approval",
					"description": "Format: boolean.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "q",
					"description": "Search query. Maximum 500 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "sort",
					"description": "Sort option. Maximum 10 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "t",
					"description": "Maximum 10 characters.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/search_reddit_names": {
			"post": {
				"summary": "api/subscribe",
				"description": "api/subscribe",
				"operationId": "apisubscribe",
				"parameters": [{
					"in": "query",
					"name": "query",
					"description": "The search query. Maximum 50 characters.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/share": {
			"post": {
				"summary": "api/submit",
				"description": "api/submit",
				"operationId": "apisubmit",
				"parameters": [{
					"in": "query",
					"name": "message",
					"description": "The text that precedes the link to the story in the message. Maximum 1000 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "parent",
					"description": "The thing you want to share. See API docs for more details about things.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "renderstyle",
					"description": "Presumably, the email format. Known accepted value: html",
					"type": "string"
				},
				{
					"in": "query",
					"name": "replyto",
					"description": "The email address of the person who is sending the message.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "share_from",
					"description": "The name of the person who is sending the message. Maximum 100 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "share_to",
					"description": "The email address of the recepient of the message.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/site_admin": {
			"post": {
				"summary": "api/tb_commentspanel_hide",
				"description": "api/tb_commentspanel_hide",
				"operationId": "apitb-commentspanel-hide",
				"parameters": [{
					"in": "query",
					"name": "allow_top",
					"description": "Whether or not to allow this subreddit to be shown in the default set.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "css_on_cname",
					"description": "Whether or not to show subreddit style while accessing the subreddit through the domain?",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "description",
					"description": "Subreddit description. Maximum 5120 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "domain",
					"description": "Subreddit domain. Own a domain? Enter it here and then go to your DNS provider and add a CNAME record aliasing your domain to rhs.reddit.com. You will be able to access your reddit through your domain.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "header-title",
					"description": "A title for the subreddit for the header. Maximum 500 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "lang",
					"description": "Subreddit language.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "link_type",
					"description": "Subreddit content options. Accepted values: any (any link type is allowed), link (only links to external sites allowed), self (only self posts allowed)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "name",
					"description": "Subreddit name.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "over_18",
					"description": "Whether or not this is a mature content subreddit; viewers must be at least 18 years old.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "show_media",
					"description": "Whether or not to show thumbnails images of content.",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "sponsorship-name",
					"description": "Sponsorship name. Maximum 500 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "sponsorship-text",
					"description": "Sponsorship text. Maximum 500 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "sponsorship-url",
					"description": "Sponsorship URL. Maximum 500 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "sr",
					"description": "Subreddit.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "title",
					"description": "A title for the subreddit. Maximum 100 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "type",
					"description": "Subreddit type. Accepted values: public (anyone can view and submit), private (only approved members can view and submit), restricted (anyone can view, but only approved members can submit)",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/submit": {
			"post": {
				"summary": "api/resetpassword",
				"description": "api/resetpassword",
				"operationId": "apiresetpassword",
				"parameters": [{
					"in": "query",
					"name": "kind",
					"description": "Accepted values: link, self.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "r",
					"description": "The subreddit, again. (?)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "sr",
					"description": "The subreddit to submit the link to.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "text",
					"description": "The text to submit, if the kind parameter is self. Required if the story is a self post.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "title",
					"description": "The text to appear as a link to the new story.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "url",
					"description": "The link to submit, if the kind parameter is link. Required if the story is a regular post.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/subreddit_stylesheet": {
			"post": {
				"summary": "api/site_admin",
				"description": "api/site_admin",
				"operationId": "apisite-admin",
				"parameters": [{
					"in": "query",
					"name": "op",
					"description": "Operation. Accepted values: save, preview",
					"type": "string"
				},
				{
					"in": "query",
					"name": "stylesheet_contents",
					"description": "The stylesheet.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/subscribe": {
			"post": {
				"summary": "api/upload_sr_img (POST)",
				"description": "api/upload_sr_img (POST)",
				"operationId": "apiupload-sr-img-post",
				"parameters": [{
					"in": "query",
					"name": "action",
					"description": "Accepted values: sub (subscribe), unsub (unsubscribe)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "sr",
					"description": "The subreddit.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/tb_commentspanel_hide": {
			"post": {
				"summary": "api/tb_commentspanel_show",
				"description": "api/tb_commentspanel_show",
				"operationId": "apitb-commentspanel-show",
				"parameters": [{
					"in": "query",
					"name": "curpass",
					"description": "The current password of the logged-in user. Required to update any setting.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "email",
					"description": "A new email.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "newpass",
					"description": "A new password.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "verify",
					"description": "Whether or not to send an email verification letter? Format: boolean",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "verpass",
					"description": "A new password, again. Must be the same as newpass.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/tb_commentspanel_show": {
			"post": {
				"summary": "api/update",
				"description": "api/update",
				"operationId": "apiupdate",
				"parameters": [{
					"in": "query",
					"name": "curpass",
					"description": "The current password of the logged-in user. Required to update any setting.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "email",
					"description": "A new email.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "newpass",
					"description": "A new password.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "verify",
					"description": "Whether or not to send an email verification letter? Format: boolean",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "verpass",
					"description": "A new password, again. Must be the same as newpass.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/uncollapse_message": {
			"post": {
				"summary": "api/collapse_message",
				"description": "api/collapse_message",
				"operationId": "apicollapse-message",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "A list of messages to uncollapse.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/unfriend": {
			"post": {
				"summary": "api/friend",
				"description": "api/friend",
				"operationId": "apifriend",
				"parameters": [{
					"in": "query",
					"name": "container",
					"description": "Either the current user or the subreddit.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The users fullname.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "name",
					"description": "The users name.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "type",
					"description": "Accepted values: friend, moderator, contributor, banned",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/unhide": {
			"post": {
				"summary": "api/hide",
				"description": "api/hide",
				"operationId": "apihide",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The fullname of the post to unhide.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/unhide_message": {
			"post": {
				"summary": "api/hide_message",
				"description": "api/hide_message",
				"operationId": "apihide-message",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The message to unhide.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/unmarknsfw": {
			"post": {
				"summary": "api/marknsfw",
				"description": "api/marknsfw",
				"operationId": "apimarknsfw",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The fullname of the thing to unmark.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/unread_message": {
			"post": {
				"summary": "api/uncollapse_message",
				"description": "api/uncollapse_message",
				"operationId": "apiuncollapse-message",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The message to mark as unread.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/unsave": {
			"post": {
				"summary": "api/save",
				"description": "api/save",
				"operationId": "apisave",
				"parameters": [{
					"in": "query",
					"name": "id",
					"description": "The fullname of the post to unsave.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/update": {
			"post": {
				"summary": "api/friend_note",
				"description": "api/friend_note",
				"operationId": "apifriend-note",
				"parameters": [{
					"in": "query",
					"name": "curpass",
					"description": "The current password of the logged-in user. Required to update any setting.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "email",
					"description": "A new email.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "newpass",
					"description": "A new password.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "verify",
					"description": "Whether or not to send an email verification letter? Format: boolean",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "verpass",
					"description": "A new password, again. Must be the same as newpass.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/upload_sr_img": {
			"get": {
				"summary": "api/delete_sr_header",
				"description": "api/delete_sr_header",
				"operationId": "apidelete-sr-header",
				"parameters": [{
					"in": "query",
					"name": "img_name",
					"description": "The image to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			},
			"post": {
				"summary": "api/upload_sr_img (GET)",
				"description": "api/upload_sr_img (GET)",
				"operationId": "apiupload-sr-img-get",
				"parameters": [{
					"in": "query",
					"name": "formid",
					"description": "Form ID. Maximum 100 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "header",
					"description": "Whether or not this is a header image? Accepted values: 0, 1",
					"type": "boolean"
				},
				{
					"in": "query",
					"name": "name",
					"description": "The name for the image.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "sponsor",
					"description": "Whether or not something is sponsored? Used by admins only. Accepted values: 0, 1",
					"type": "boolean"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/api/vote": {
			"post": {
				"summary": "api/share",
				"description": "api/share",
				"operationId": "apishare",
				"parameters": [{
					"in": "query",
					"name": "dir",
					"description": "The vote you are going to cast. Use 1 to vote up, 0 to rescind a vote, or -1 to vote down. Note that previous votes are not additive. If the user previously voted 1, voting -1 will change the vote to -1, not 0. Accepted values: -1 (downvote), 0 (neutral-vote), 1 (upvote)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "id",
					"description": "The fullname of the thing you are voting for.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/by_id/{fullname}.{format}": {
			"get": {
				"summary": "",
				"description": "",
				"operationId": "",
				"parameters": [{
					"in": "query",
					"name": "format",
					"description": "Format of the data being returned. Accepted values: json (JSON), rss (RSS feed), xml (RSS feed)",
					"type": "string"
				},
				{
					"in": "path",
					"name": "format",
					"type": "string"
				},
				{
					"in": "query",
					"name": "fullname",
					"description": "A base-36 id of the form /t[0-9]+_[a-z0-9]+/ (e.g. t3_6nw57) that reddit associates with every Thing. In the example, the type prefix t3_ specifies that the fullname is for a Link, and the id 6nw57 specifies the Links id36. (Note: the numbers according to id type are not constant, and may vary between reddit installations.)",
					"type": "string"
				},
				{
					"in": "path",
					"name": "fullname",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/comments/{id36}.{format}": {
			"get": {
				"summary": "by_id/{fullname}.{format}",
				"description": "by_id/{fullname}.{format}",
				"operationId": "by-idfullnameformat",
				"parameters": [{
					"in": "query",
					"name": "format",
					"description": "Format of the data being returned. Accepted values: json (JSON), rss (RSS feed), xml (RSS feed)",
					"type": "string"
				},
				{
					"in": "path",
					"name": "format",
					"type": "string"
				},
				{
					"in": "query",
					"name": "id36",
					"description": "The second part of the fullname, a base-36 id of the form /t[0-9]+_[a-z0-9]+/ (e.g. t3_6nw57) that reddit associates with every Thing. In the example, the type prefix t3_ specifies that the fullname is for a Link, and the id 6nw57 specifies the Links id36. (Note: the numbers according to id type are not constant, and may vary between reddit installations.)",
					"type": "string"
				},
				{
					"in": "path",
					"name": "id36",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/reddits/mine.{format}": {
			"get": {
				"summary": "api/me.json",
				"description": "api/me.json",
				"operationId": "apimejson",
				"parameters": [{
					"in": "query",
					"name": "format",
					"description": "Format of the data being returned. Accepted values: json (JSON), xml (XML)",
					"type": "string"
				},
				{
					"in": "path",
					"name": "format",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		},
		"/user/{username}/about.json": {
			"get": {
				"summary": "api/login",
				"description": "api/login",
				"operationId": "apilogin",
				"parameters": [{
					"in": "query",
					"name": "username",
					"description": "The name of the user whose about page to retrieve.",
					"type": "string"
				},
				{
					"in": "path",
					"name": "username",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""],
				"security": []
			}
		}
	},
	"definitions": []
}