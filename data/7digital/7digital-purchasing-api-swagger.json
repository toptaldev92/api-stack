{
	"swagger": "2.0",
	"info": {
		"title": "7digital Purchasing API",
		"description": "The Purchasing API allows 3rd parties to deliver digital content to individual users.",
		"termsOfService": "",
		"version": "1.2"
	},
	"host": "api.7digital.com",
	"basePath": "1.2/",
	"schemes": [
		"http"
	],
	"produces": [
		"application/json"
	],
	"consumes": [
		"application/json"
	],
	"paths": {
		"artist/browse": {
			"get ": {
				"summary": "artist/browse",
				"description": "This method returns a list of artists from the 7digital catalogue whose names match the start letter(s) supplied.",
				"operationId": "artistbrowse",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "artistId",
						"in": "query",
						"description": "unique identifier of the artist"
					},
					{
						"name": "country",
						"in": "query",
						"description": "nttttttt 2 letter ISO country code of the country whose releases you would like to searchntttttt "
					},
					{
						"name": "imageSize",
						"in": "query",
						"description": "nttttttt The requested width of the image in pixelsntttttt "
					},
					{
						"name": "letter",
						"in": "query",
						"description": "The first letter(s) of the artist name to browse."
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number of the result set. If not supplied, defaults to 1"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50"
					},
					{
						"name": "period",
						"in": "query",
						"description": "The time period for which the chart is generated. Default value is a week."
					},
					{
						"name": "streamable",
						"in": "query",
						"description": "If provided search results will contain only releases that can/cannot be streamed"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "The last day the chart should include data for. If not provided, by default the most recent chart for requested period will be returned."
					},
					{
						"name": "type",
						"in": "query",
						"description": "Releases can be of type album, single or video. If specified, results are filtered by release type."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"release/chart": {
			"get ": {
				"summary": "release/chart",
				"description": "This endpoint returns a chart of the most purchased releases for given week. Only albums are included in this chart. To retrieve the most recent charts as published on 7digital.com the 'toDate' parameter should be omitted.",
				"operationId": "releasechart",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "country",
						"in": "query",
						"description": "nttttttt 2 letter ISO country code of the country whose releases you would like to viewntttttt "
					},
					{
						"name": "imageSize",
						"in": "query",
						"description": "nttttttt The requested width of the image in pixelsntttttt "
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number of the result set. If not supplied, defaults to 1"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50"
					},
					{
						"name": "streamable",
						"in": "query",
						"description": "If provided search results will contain only releases that can/cannot be streamed"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "The last day the chart should include data for. If not provided, it defaults to the most recent chart week."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"tag": {
			"get ": {
				"summary": "tag",
				"description": "This method returns a list of all available tags.",
				"operationId": "tag",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "artistId",
						"in": "query",
						"description": "The unique identifier of the artist."
					},
					{
						"name": "country",
						"in": "query",
						"description": "nttttttt2 letter ISO country code of the country whose artists you would like to searchntttttt"
					},
					{
						"name": "imageSize",
						"in": "query",
						"description": "ntttttttThe requested width of the image in pixelsntttttt"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number of the result set. If not supplied, defaults to 1"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50"
					},
					{
						"name": "streamable",
						"in": "query",
						"description": "If provided search results will contain only artists that can/cannot be streamed"
					},
					{
						"name": "tags",
						"in": "query",
						"description": "A single or comma separated list of tags."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"track/chart": {
			"get ": {
				"summary": "track/chart",
				"description": "This endpoint returns a chart of the most purchased tracks for given week. To retrieve the most recent charts as published on 7digital.com the 'toDate' parameter should be omitted.",
				"operationId": "trackchart",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "country",
						"in": "query",
						"description": "2 letter ISO country code of the country whose tracks you would like to search"
					},
					{
						"name": "imageSize",
						"in": "query",
						"description": "The requested width of the image in pixels"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number of the result set. If not supplied, defaults to 1"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "Number of items to be returned per page. If not supplied this defaults to 10. Maximum page size is 50"
					},
					{
						"name": "streamable",
						"in": "query",
						"description": "If provided search results will contain only tracks that can/cannot be streamed"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "The last day the chart should include data for. If not provided, it defaults to the most recent chart week."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"basket": {
			"<h4 ": {
				"summary": "basket",
				"description": "",
				"operationId": "basket",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "amountDue",
						"in": "query",
						"description": ""
					},
					{
						"name": "artistName",
						"in": "query",
						"description": ""
					},
					{
						"name": "basket id",
						"in": "query",
						"description": ""
					},
					{
						"name": "basketId",
						"in": "query",
						"description": "nttttttttThe unique identifier of the basket as acquired by basket/create methodnttttttt"
					},
					{
						"name": "basketItem id",
						"in": "query",
						"description": ""
					},
					{
						"name": "basketItems",
						"in": "query",
						"description": ""
					},
					{
						"name": "country",
						"in": "query",
						"description": "The code of the country the end user resides in. The country will default to GB if not provided.ntttt"
					},
					{
						"name": "discount",
						"in": "query",
						"description": ""
					},
					{
						"name": "itemCount",
						"in": "query",
						"description": ""
					},
					{
						"name": "itemName",
						"in": "query",
						"description": ""
					},
					{
						"name": "package",
						"in": "query",
						"description": ""
					},
					{
						"name": "price",
						"in": "query",
						"description": ""
					},
					{
						"name": "releaseId",
						"in": "query",
						"description": ""
					},
					{
						"name": "trackId",
						"in": "query",
						"description": ""
					},
					{
						"name": "type",
						"in": "query",
						"description": ""
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"playlists": {
			"get ": {
				"summary": "playlists",
				"description": "Returns a list of all public playlists. If an oauth_token is provided then also given users' private playlists will be included in the response.",
				"operationId": "playlists",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "Users OAuth access token - allows user to view Private playlist if it belongs to them"
					},
					{
						"name": "page",
						"in": "query",
						"description": "nttttttPage number of the result set. If not supplied, defaults to 1nttttt"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "Number of items to be returned per page. If not supplied, defaults to 10. Maximum page size is 500"
					},
					{
						"name": "user",
						"in": "query",
						"description": "This allows you to pass the id of a user you wish to view the playlists of a specific user. It must be in the format id:{userId}"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"playlists/{playlistId}": {
			"get ": {
				"summary": "playlists/{playlistId}",
				"description": "Returns playlist details and track listing. Access to private playlists is only allowed when an oauth_token of the playlist owner is provided.",
				"operationId": "playlistsplaylistid",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "Users OAuth access token - allows user to view private playlist if it belongs to them"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"playlists/{playlistId}/details": {
			"post ": {
				"summary": "playlists/{playlistId}/details",
				"description": "Updates playlist details at {playlistId} with the supplied playlist details. It does not affect playlist tracks. Use this method e.g. for changing visibility of the playlist from private to public. The playlist details can only be updated by the playlist owner, i.e. oauth_token representing the user has to be provided.",
				"operationId": "playlistsplaylistiddetails",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "Users OAuth access token"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"playlists/{playlistId}/tracks/{playlisttrackid}": {
			"delete ": {
				"summary": "playlists/{playlistId}/tracks/{playlisttrackid}",
				"description": "Removes the specified track {playlisttrackid} from the specified playlist at {playlistId}.  Tracks can only be removed by the playlist owner, i.e. oauth_token representing the user has to be provided.",
				"operationId": "playlistsplaylistidtracksplaylisttrackid",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "Users OAuth access token"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"user/locker": {
			"get ": {
				"summary": "user/locker",
				"description": "Returns a paged list of releases and tracks for a user's locker (collection of all purchased tracks). This method must be OAuth signed.",
				"operationId": "userlocker",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "country",
						"in": "query",
						"description": "The code of the country the end user resides in. The country will default to GB if not provided.nttt"
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "users OAuth accesstoken"
					},
					{
						"name": "page",
						"in": "query",
						"description": "sets the page to be returned in paged list of the customers releases and tracks, by default this is the first page. page=1"
					},
					{
						"name": "pagesize",
						"in": "query",
						"description": "sets the number of releases that will be returned per page, the default is 10, the maximum is 50"
					},
					{
						"name": "purchaseId",
						"in": "query",
						"description": "nttttt If supplied will return only the releases and tracks for that basket. Will return an error if no tracks are found.nttttt"
					},
					{
						"name": "releaseId",
						"in": "query",
						"description": "The 7digital ID of the release to be that we are interested in. You will use this to filter out and return a specific release from the users locker. Will return an empty locker response if no match is found."
					},
					{
						"name": "sort",
						"in": "query",
						"description": "nttttttOrders the returned results. Supplied as a string in the format: {sortColumn} {sortOrder}, for example: purchaseDate desc ntttwill show recent purchases first. Currently you can sort by releaseTitle (asc or desc), purchaseDate (asc or desc) and artistName (asc or desc). If no sort is ntttsupplied, the default is releaseTitle asc. If no order is supplied the default is ascending.nttttt"
					},
					{
						"name": "trackId",
						"in": "query",
						"description": "nttttttIf supplied together with the releaseId, will returned only that specific track (provided it exists in user locker).nttttttWill return an empty locker response if no match is found.nttttt"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"": {
			"<h4 ": {
				"summary": "",
				"description": "This method allows a user to purchase an item at the price as advertised on 7digital.com. It will return the download URL of each item purchased. For example, if a release consisting of multiple tracks was purchased, then the download URL of each item constituting the release will be returned.nttttttFor a user purchase to be processed, the user should already have a default debit or credit card set up for payments.ntttThis method allows users to take advantage of 7digital.com promotional offers and is only available to selected partners building 7digital branded integrations. For white-label integrations please use user/purchase/rrpItem or user/purchase/pricedItem.",
				"operationId": "",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "country",
						"in": "query",
						"description": "The code of the country the end user resides in. The country will default to GB if not provided.nttttttt",
						"type": "iso 2"
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "users OAuth accesstoken",
						"type": "integer"
					},
					{
						"name": "price",
						"in": "query",
						"description": "nttttttttThe price that has been displayed to the user prior to purchase. If the actual 7digital.com price is different to the supplied value the purchase is aborted and 3004 error message is returned instead. This is used to ensure the users cannot be charged a different amount than the advertised price (e.g. if the price was cached and/or has changed after it was displayed.)nttttttt",
						"type": "decimal"
					},
					{
						"name": "releaseId",
						"in": "query",
						"description": "The unique ID of the release being purchased. If a track is being purchased, this needs to identify the release the track appears on.",
						"type": "integer"
					},
					{
						"name": "shopid",
						"in": "query",
						"description": "nttttttttThe shop ID that all basket items were selected from.  The shop ID will default to the 7digital UK shop if it is not provided.nttttttttIf the shop ID is provided, the country parameter will be ignored.nttttttt",
						"type": "integer"
					},
					{
						"name": "tag_*key*",
						"in": "query",
						"description": "nttttttttAdditional data to be stored with successful transactions, for the purposes such as tagging affiliated or marketing information.nttttttttup to 10 tags can be stored. A tag key can be a maximum of 50 characters, and a tag value a maximum of 100 characters.nttttttttE.g. tag_MyPartner=MagazinePromoABC&amp;tag_ApplicationVersion=1.5.nttttttttThis data will only be available to API clients subscribing to customized sales reports service.nttttttt",
						"type": "string"
					},
					{
						"name": "trackId",
						"in": "query",
						"description": "The unique ID of the track being purchased. If supplied, only the track is delivered - otherwise the full release is delivered.",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"basket/addpriceditem": {
			"get ": {
				"summary": "basket/addpriceditem",
				"description": "This method allows an item to be added to a basket with a specified price. The specified price can be higher or lower than the 7digital catalogue price, including a price of 0.00 to make an item free.",
				"operationId": "basketaddpriceditem",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "basketId",
						"in": "query",
						"description": "The unique identifier of the basket generated by the basket/create method"
					},
					{
						"name": "country",
						"in": "query",
						"description": "nttttttttThe country that all basket items were selected from.  The country will default to UK if it is not provided.nttttttttProvide this if you are purchasing from a territory other than the UK.nttttttt"
					},
					{
						"name": "country/shopId",
						"in": "query",
						"description": "nttttttttA Country Code needs to be provided if you are delivering content from a 7digital international shop. Provide a shop ID if you have a dedicated pool of content and you have been assigned a shop ID by 7digital.nttttttt"
					},
					{
						"name": "emailAddress",
						"in": "query",
						"description": "The email address of the User."
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "users OAuth accesstoken"
					},
					{
						"name": "price",
						"in": "query",
						"description": "nttttttttThe custom price for the item to add to the basket e.g. 11.95.nttttttttThe price cannot be negative and must not be more than 2 decimal places. The price should not include any commas (,).nttttttt"
					},
					{
						"name": "purchaseid",
						"in": "query",
						"description": "purchase id identifying the transaction at 7digitals end that the refunded item belongs to"
					},
					{
						"name": "releaseId",
						"in": "query",
						"description": "The unique identifier of the release"
					},
					{
						"name": "retailPrice",
						"in": "query",
						"description": "Compulsory if you are charging your users different prices than 7digital RRP. If youre giving away items for free please use retailPrice=0, if youre using vouchers or youre not sure what to report please contact our sales team."
					},
					{
						"name": "shopid",
						"in": "query",
						"description": "nttttttttThe shop ID that all basket items were selected from.  The shop ID will default to the 7digital UK shop if it is not provided.nttttttttIf the shop ID is provided, the country parameter will be ignored.nttttttt"
					},
					{
						"name": "trackId",
						"in": "query",
						"description": "The unique identifier of the track. If supplied, you must also supply the releaseId that the track belongs to."
					},
					{
						"name": "transactionId",
						"in": "query",
						"description": "The transaction ID provided will be stored along with a 7digital purchase ID in the 7digital transactions log."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"user/purchase/basket": {
			"get ": {
				"summary": "user/purchase/basket",
				"description": "This method allows a user to purchase a basket with items that have been added via basket/additem or basket/addpriceditem. It will return the download URL of each item purchased. For example, if a release consisting of multiple tracks was purchased, then the download URL of each item constituting the release will be returned.",
				"operationId": "userpurchasebasket",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "basketid",
						"in": "query",
						"description": "This is the session ID for the basket that contains the items to purchase.  This is the basketid returned from basket/create."
					},
					{
						"name": "country",
						"in": "query",
						"description": "nttttttttThe country that all basket items were selected from.  The country will default to UK if it is not provided.nttttttttProvide this if you are purchasing from a territory other than the UK.nttttttt"
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "users OAuth accesstoken"
					},
					{
						"name": "shopid",
						"in": "query",
						"description": "nttttttttThe shop ID that all basket items were selected from.  The shop ID will default to the 7digital UK shop if it is not provided.nttttttttIf the shop ID is provided, the country parameter will be ignored.nttttttt"
					},
					{
						"name": "tag_*key*",
						"in": "query",
						"description": "nttttttttAdditional data to be stored with successful transactions, for the purposes such as tagging affiliated or marketing information.nttttttttup to 10 tags can be stored. A tag key can be a maximum of 50 characters, and a tag value a maximum of 100 characters.nttttttttE.g. tag_MyPartner=MagazinePromoABC&amp;tag_ApplicationVersion=1.5.nttttttttThis data will only be available to API clients subscribing to customized sales reports service.nttttttt"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"user/purchase/item": {
			"get ": {
				"summary": "user/purchase/item",
				"description": "This method allows a user to purchase an item at the price as advertised on 7digital.com. It will return the download URL of each item purchased. For example, if a release consisting of multiple tracks was purchased, then the download URL of each item constituting the release will be returned.nttttttFor a user purchase to be processed, the user should already have a default debit or credit card set up for payments.ntttThis method allows users to take advantage of 7digital.com promotional offers and is only available to selected partners building 7digital branded integrations. For white-label integrations please use user/purchase/rrpItem or user/purchase/pricedItem.",
				"operationId": "userpurchaseitem",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "country",
						"in": "query",
						"description": "The code of the country the end user resides in. The country will default to GB if not provided.nttttttt"
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "users OAuth accesstoken"
					},
					{
						"name": "price",
						"in": "query",
						"description": "nttttttttThe price that has been displayed to the user prior to purchase. If the actual 7digital.com price is different to the supplied value the purchase is aborted and 3004 error message is returned instead. This is used to ensure the users cannot be charged a different amount than the advertised price (e.g. if the price was cached and/or has changed after it was displayed.)nttttttt"
					},
					{
						"name": "releaseId",
						"in": "query",
						"description": "The unique ID of the release being purchased. If a track is being purchased, this needs to identify the release the track appears on."
					},
					{
						"name": "shopid",
						"in": "query",
						"description": "nttttttttThe shop ID that all basket items were selected from.  The shop ID will default to the 7digital UK shop if it is not provided.nttttttttIf the shop ID is provided, the country parameter will be ignored.nttttttt"
					},
					{
						"name": "tag_*key*",
						"in": "query",
						"description": "nttttttttAdditional data to be stored with successful transactions, for the purposes such as tagging affiliated or marketing information.nttttttttup to 10 tags can be stored. A tag key can be a maximum of 50 characters, and a tag value a maximum of 100 characters.nttttttttE.g. tag_MyPartner=MagazinePromoABC&amp;tag_ApplicationVersion=1.5.nttttttttThis data will only be available to API clients subscribing to customized sales reports service.nttttttt"
					},
					{
						"name": "trackId",
						"in": "query",
						"description": "The unique ID of the track being purchased. If supplied, only the track is delivered - otherwise the full release is delivered."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"user/purchase/rrpItem": {
			"get ": {
				"summary": "user/purchase/rrpItem",
				"description": "This method allows a user to purchase an item at 7digital recommended retail price (RRP). It will return the download URL of each item purchased. For example, if a release consisting of multiple tracks was purchased, then the download URL of each item constituting the release will be returned.nttttttFor a user purchase to be processed, the user should already have a default debit or credit card set up for payments.",
				"operationId": "userpurchaserrpitem",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "country",
						"in": "query",
						"description": "nttttttttThe country that all basket items were selected from.  The country will default to UK if it is not provided.nttttttttProvide this if you are purchasing from a territory other than the UK.nttttttt"
					},
					{
						"name": "oauth_token",
						"in": "query",
						"description": "users OAuth accesstoken"
					},
					{
						"name": "price",
						"in": "query",
						"description": "nttttttttThe price that has been displayed to the user prior to purchase. If the actual 7digital recommended retail price is different to the supplied value the purchase is aborted and 3004 error message is returned instead. This is used to ensure the users cannot be charged a different amount than the advertised price (e.g. if the price was cached and/or has changed after it was displayed.)nttttttt"
					},
					{
						"name": "releaseId",
						"in": "query",
						"description": "The unique ID of the release being purchased. If a track is being purchased, this needs to identify the release the track appears on."
					},
					{
						"name": "shopid",
						"in": "query",
						"description": "nttttttttThe shop ID that all basket items were selected from.  The shop ID will default to the 7digital UK shop if it is not provided.nttttttttIf the shop ID is provided, the country parameter will be ignored.nttttttt"
					},
					{
						"name": "tag_*key*",
						"in": "query",
						"description": "nttttttttAdditional data to be stored with successful transactions, for the purposes such as tagging affiliated or marketing information.nttttttttup to 10 tags can be stored. A tag key can be a maximum of 50 characters, and a tag value a maximum of 100 characters.nttttttttE.g. tag_MyPartner=MagazinePromoABC&amp;tag_ApplicationVersion=1.5.nttttttttThis data will only be available to API clients subscribing to customized sales reports service.nttttttt"
					},
					{
						"name": "trackId",
						"in": "query",
						"description": "The unique ID of the track being purchased. If supplied, only the track is delivered - otherwise the full release is delivered."
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		},
		"user/purchase/{purchaseid}/track/{trackid}": {
			"delete ": {
				"summary": "user/purchase/{purchaseid}/track/{trackid}",
				"description": "This method allows a user to remove a purchase of a track from the sales report when the purchase has been refunded.",
				"operationId": "userpurchasepurchaseidtracktrackid",
				"parameters": [
					{
						"name": "",
						"in": "query",
						"description": ""
					},
					{
						"name": "purchaseid",
						"in": "query",
						"description": "purchase id identifying the transaction at 7digitals end that the refunded item belongs to"
					},
					{
						"name": "trackid",
						"in": "query",
						"description": "nttttttttThe 7digital id of the track being refundednnttttttt"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [
					""
				]
			}
		}
	}
}