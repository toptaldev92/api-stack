- swagger: "2.0"
  info:
    title: Pivotal Tracker API
    description: Tracker provides an API that can be used to create, retrieve, update,
      and delete virtually all of the resources stored and manipulated by the system.
    version: ~
  host: www.pivotaltracker.com
  basePath: /services/v3
  schemes:
  - http
  produces:
  - application/json
  consumes:
  - application/json
  paths:
    /activities:
      get:
        summary: activities
        description: activities
        operationId: activities
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects:
      get:
        summary: projects (GET)
        description: projects (GET)
        operationId: projects-get
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      post:
        summary: projects (POST)
        description: projects (POST)
        operationId: projects-post
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}:
      get:
        summary: projects/{PROJECT_ID}
        description: projects/{PROJECT_ID}
        operationId: projectsproject-id
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/activities:
      get:
        summary: projects/{PROJECT_ID}/activities
        description: projects/{PROJECT_ID}/activities
        operationId: projectsproject-idactivities
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/iterations:
      get:
        summary: projects/{PROJECT_ID}/iterations
        description: projects/{PROJECT_ID}/iterations
        operationId: projectsproject-iditerations
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/iterations/backlog:
      get:
        summary: projects/{PROJECT_ID}/iterations/backlog
        description: projects/{PROJECT_ID}/iterations/backlog
        operationId: projectsproject-iditerationsbacklog
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/iterations/current:
      get:
        summary: projects/{PROJECT_ID}/iterations/current
        description: projects/{PROJECT_ID}/iterations/current
        operationId: projectsproject-iditerationscurrent
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/iterations/current_backlog:
      get:
        summary: projects/{PROJECT_ID}/iterations/current_backlog
        description: projects/{PROJECT_ID}/iterations/current_backlog
        operationId: projectsproject-iditerationscurrent-backlog
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/iterations/done:
      get:
        summary: projects/{PROJECT_ID}/iterations/done
        description: projects/{PROJECT_ID}/iterations/done
        operationId: projectsproject-iditerationsdone
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/memberships:
      get:
        summary: projects/{PROJECT_ID}/memberships (GET)
        description: projects/{PROJECT_ID}/memberships (GET)
        operationId: projectsproject-idmemberships-get
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      post:
        summary: projects/{PROJECT_ID}/memberships (POST)
        description: projects/{PROJECT_ID}/memberships (POST)
        operationId: projectsproject-idmemberships-post
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/memberships/{MEMBERSHIP_ID}:
      delete:
        summary: projects/{PROJECT_ID}/memberships/{MEMBERSHIP_ID} (DELETE)
        description: projects/{PROJECT_ID}/memberships/{MEMBERSHIP_ID} (DELETE)
        operationId: projectsproject-idmembershipsmembership-id-delete
        parameters:
        - in: path
          name: MEMBERSHIP_ID
          type: string
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      get:
        summary: projects/{PROJECT_ID}/memberships/{MEMBERSHIP_ID} (GET)
        description: projects/{PROJECT_ID}/memberships/{MEMBERSHIP_ID} (GET)
        operationId: projectsproject-idmembershipsmembership-id-get
        parameters:
        - in: path
          name: MEMBERSHIP_ID
          type: string
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/stories:
      get:
        summary: projects/{PROJECT_ID}/stories (GET)
        description: projects/{PROJECT_ID}/stories (GET)
        operationId: projectsproject-idstories-get
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      post:
        summary: projects/{PROJECT_ID}/stories (POST)
        description: projects/{PROJECT_ID}/stories (POST)
        operationId: projectsproject-idstories-post
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/stories/deliver_all_finished:
      post:
        summary: projects/{PROJECT_ID}/stories/deliver_all_finished
        description: projects/{PROJECT_ID}/stories/deliver_all_finished
        operationId: projectsproject-idstoriesdeliver-all-finished
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/stories/{STORY_ID}:
      delete:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID} (DELETE)
        description: projects/{PROJECT_ID}/stories/{STORY_ID} (DELETE)
        operationId: projectsproject-idstoriesstory-id-delete
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      get:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID} (GET)
        description: projects/{PROJECT_ID}/stories/{STORY_ID} (GET)
        operationId: projectsproject-idstoriesstory-id-get
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      put:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID} (PUT)
        description: projects/{PROJECT_ID}/stories/{STORY_ID} (PUT)
        operationId: projectsproject-idstoriesstory-id-put
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/stories/{STORY_ID}/attachments:
      post:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID}/attachments
        description: projects/{PROJECT_ID}/stories/{STORY_ID}/attachments
        operationId: projectsproject-idstoriesstory-idattachments
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/stories/{STORY_ID}/moves:
      post:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID}/moves
        description: projects/{PROJECT_ID}/stories/{STORY_ID}/moves
        operationId: projectsproject-idstoriesstory-idmoves
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/stories/{STORY_ID}/notes:
      put:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID}/notes (POST)
        description: projects/{PROJECT_ID}/stories/{STORY_ID}/notes (POST)
        operationId: projectsproject-idstoriesstory-idnotes-post
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/stories/{STORY_ID}/tasks:
      get:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks (GET)
        description: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks (GET)
        operationId: projectsproject-idstoriesstory-idtasks-get
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      post:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks (POST)
        description: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks (POST)
        operationId: projectsproject-idstoriesstory-idtasks-post
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /projects/{PROJECT_ID}/stories/{STORY_ID}/tasks/{TASK_ID}:
      delete:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks/{TASK_ID} (DELETE)
        description: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks/{TASK_ID} (DELETE)
        operationId: projectsproject-idstoriesstory-idtaskstask-id-delete
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        - in: path
          name: TASK_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      get:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks/{TASK_ID} (GET)
        description: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks/{TASK_ID} (GET)
        operationId: projectsproject-idstoriesstory-idtaskstask-id-get
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        - in: path
          name: TASK_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      put:
        summary: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks/{TASK_ID} (PUT)
        description: projects/{PROJECT_ID}/stories/{STORY_ID}/tasks/{TASK_ID} (PUT)
        operationId: projectsproject-idstoriesstory-idtaskstask-id-put
        parameters:
        - in: path
          name: PROJECT_ID
          type: string
        - in: path
          name: STORY_ID
          type: string
        - in: path
          name: TASK_ID
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /source_commits:
      post:
        summary: source_commits
        description: source_commits
        operationId: source-commits
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /tokens/active:
      get:
        summary: tokens/active (GET)
        description: tokens/active (GET)
        operationId: tokensactive-get
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      post:
        summary: tokens/active (POST)
        description: tokens/active (POST)
        operationId: tokensactive-post
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
  definitions: []