- swagger: "2.0"
  info:
    title: Meetup Photos API
    description: The API for managing Meetup photos.
    termsOfService: http://www.meetup.com/terms/
    version: ~
  host: api.meetup.com
  basePath: /
  schemes:
  - http
  produces:
  - application/json
  consumes:
  - application/json
  paths:
    /2/photo:
      post:
        summary: Event Photo Upload
        description: Uploads a photo for a given event
        operationId: photos
        parameters:
        - in: query
          name: '*event_id'
          description: Identifier of an event. If there is no album for this event,
            one will be created.
          type: string
        - in: query
          name: '*photo'
          description: The photo, encoded as multipart/form-data. The maximum file size
            allowed is 10MB
          type: string
        - in: query
          name: '*photo_album_id'
          description: Identifier of an existing photo album, which may be an event
            or group album
          type: string
        - in: query
          name: await
          description: If true, this ensures a response will not be returned until the
            upload is accessible
          type: string
        - in: query
          name: caption
          description: Caption for the photo
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /2/photo/:id:
      delete:
        summary: Event Photo Delete
        description: Deletes a specified event photo
        operationId: photos
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
      post:
        summary: Event Photo Edit
        description: Edits a specified event photo
        operationId: photos
        parameters:
        - in: query
          name: caption
          description: Photo caption of up to 255 characters
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /2/photos:
      get:
        summary: Photos
        description: This method returns photos by member, group, album, event, photo
          ID, or tagged member.
        operationId: photos
        parameters:
        - in: query
          name: '*callback'
          description: Name of a function to be called with an array of photo notification
            objects. If this nparameter is not supplied, the chunked stream is joined
            instead.
          type: string
        - in: query
          name: '*event_id'
          description: Event ids, separated by commas. These may contain alphanumeric
            autoscheduled event ids, only photos of reified events will be returned
          type: string
        - in: query
          name: '*group_id'
          description: Group IDs, separated by commas
          type: string
        - in: query
          name: '*group_urlname'
          description: Group urlnames, separated by commas
          type: string
        - in: query
          name: '*member_id'
          description: Uploaded by members with these IDs, separated by commas
          type: string
        - in: query
          name: '*photo_album_id'
          description: Photo Album IDs, separated by commas
          type: string
        - in: query
          name: '*photo_id'
          description: Photo IDs, separated by commas
          type: string
        - in: query
          name: '*tagged'
          description: Tagged with members with these IDs, separated by commas
          type: string
        - in: query
          name: api_version
          description: "2"
          type: string
        - in: query
          name: event_id
          description: Limit notifications to a specific event id. Use alphanumeric
            ids for repeating events.
          type: string
        - in: query
          name: fields
          description: comma-delimited optional response properties such as member_country,
            member_city, member_state, and self
          type: string
        - in: query
          name: since_count
          description: Request that some number of recent messages be sent immediately,
            if available. May not be specified in the same request as since_mtime.
          type: string
        - in: query
          name: since_mtime
          description: Should be supplied for all but the first polling request, so
            that any missed notifications are can be sent in an immediate response
          type: string
        - in: query
          name: time
          description: Return photos uploaded within the given time range, defined by
            two times separated with a single comma. Each end of the range may be specified
            with relative dates, such as 1m for one month from now, or by absolute time
            in milliseconds since the epoch. If an endpoint is omitted, the range is
            unbounded on that end. The default value is unbounded on both ends (though
            restricted to the search window described above).
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /2/photo_album:
      post:
        summary: Photo Album2
        description: This method creates photo albums within a Meetup group
        operationId: photos
        parameters:
        - in: query
          name: '*group_id'
          description: Group to create the album in
          type: string
        - in: query
          name: '*title'
          description: ' Title of the new album'
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /2/photo_albums:
      get:
        summary: Photo Albums
        description: This method returns photo albums associated with Meetup groups.
          To create albums, see the corresponding write method.
        operationId: photos
        parameters:
        - in: query
          name: '*event_id'
          description: Return photo albums for these event ids, separated by commas
          type: string
        - in: query
          name: '*group_id'
          description: Return albums in groups with these ID, separated by commas
          type: string
        - in: query
          name: '*photo_album_id'
          description: Return albums with these IDs, separated by commas
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /2/photo_comment:
      post:
        summary: Photo Comment v2
        description: This method posts comments that appear below photos
        operationId: photos
        parameters:
        - in: query
          name: '*comment'
          description: The comment text
          type: string
        - in: query
          name: '*photo_id'
          description: The photo related to this comment.
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /2/photo_comments:
      get:
        summary: Photo Comments v2
        description: This method returns comments on meetup photos. To post messages,
          see the corresponding write method
        operationId: photos
        parameters:
        - in: query
          name: '*photo_id'
          description: Return comments on these photos, separated by commas
          type: string
        - in: query
          name: fields
          description: Request that additional fields (separated by commas) be included
            in the output.
          type: string
        - in: query
          name: member_id
          description: Return comments for the given member_ids, separated by commas.
            The member ids must match up with one of the provided photo ids
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /:urlname/events/:event_id/photos:
      get:
        summary: Event Photos
        description: Lists photos for a given event
        operationId: photos
        parameters:
        - in: query
          name: fields
          description: A comma-delimited list of optional response fields.nCurrently
            supported values are comment_count, self and short_link
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /:urlname/events/:event_id/photos/:photo_id:
      get:
        summary: Event Photo
        description: Gets information about a specific photo
        operationId: photos
        parameters:
        - in: query
          name: fields
          description: A comma-delimited list of optional response fields.nCurrently
            supported values are selfs and comment_count
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /:urlname/events/:event_id/photos/:photo_id/comments/:comment_id:
      delete:
        summary: Photo Comment Delete
        description: Deletes photo comments
        operationId: photos
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /:urlname/photo_albums/:album_id:
      get:
        summary: Photo Album
        description: Gets information about a specific photo album
        operationId: photos
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
    /:urlname/photo_albums/:album_id/photos:
      get:
        summary: Album Photos
        description: Lists photos for a given photo album
        operationId: photos
        parameters:
        - in: query
          name: fields
          description: A comma-delimited list of optional response fields.nCurrently
            supported values arencomment_count, self and short_link
          type: string
        responses:
          200:
            description: OK
        tags:
        - ""
        security: []
  definitions: []